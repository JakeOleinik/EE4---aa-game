

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Apr 21 12:23:20 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	idataBANK2,global,class=CODE,delta=1
     9                           	psect	idataBANK3,global,class=CODE,delta=1
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
    11                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           	psect	idataCOMRAM
    61  002738                     __pidataCOMRAM:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _randx
    65  002738  0001               	dw	1
    66  00273A  0000               	dw	0
    67                           
    68                           	psect	idataBANK0
    69  0023E8                     __pidataBANK0:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _imperialMarchNotes
    73  0023E8  01B8               	dw	440
    74  0023EA  0000               	dw	0
    75  0023EC  01B8               	dw	440
    76  0023EE  0000               	dw	0
    77  0023F0  01B8               	dw	440
    78  0023F2  0000               	dw	0
    79  0023F4  015D               	dw	349
    80  0023F6  0000               	dw	0
    81  0023F8  020B               	dw	523
    82  0023FA  0000               	dw	0
    83  0023FC  01B8               	dw	440
    84  0023FE  0000               	dw	0
    85  002400  015D               	dw	349
    86  002402  0000               	dw	0
    87  002404  020B               	dw	523
    88  002406  0000               	dw	0
    89  002408  01B8               	dw	440
    90  00240A  0000               	dw	0
    91  00240C  0293               	dw	659
    92  00240E  0000               	dw	0
    93  002410  0293               	dw	659
    94  002412  0000               	dw	0
    95  002414  0293               	dw	659
    96  002416  0000               	dw	0
    97  002418  02BA               	dw	698
    98  00241A  0000               	dw	0
    99  00241C  020B               	dw	523
   100  00241E  0000               	dw	0
   101  002420  01B8               	dw	440
   102  002422  0000               	dw	0
   103  002424  015D               	dw	349
   104  002426  0000               	dw	0
   105  002428  020B               	dw	523
   106  00242A  0000               	dw	0
   107  00242C  01B8               	dw	440
   108  00242E  0000               	dw	0
   109                           
   110                           ;initializer for _nothingElseMattersDurations
   111  002430  0002               	dw	2
   112  002432  0002               	dw	2
   113  002434  0002               	dw	2
   114  002436  0002               	dw	2
   115  002438  0002               	dw	2
   116  00243A  0002               	dw	2
   117                           
   118                           ;initializer for _nothingElseMattersNotes
   119  00243C  00A5               	dw	165
   120  00243E  00C4               	dw	196
   121  002440  00F5               	dw	245
   122  002442  014A               	dw	330
   123  002444  00F5               	dw	245
   124  002446  00C4               	dw	196
   125                           
   126                           	psect	idataBANK1
   127  001B74                     __pidataBANK1:
   128                           	opt stack 0
   129                           
   130                           ;initializer for _imperialMarchDurations
   131  001B74  0032               	dw	50
   132  001B76  0014               	dw	20
   133  001B78  0032               	dw	50
   134  001B7A  0014               	dw	20
   135  001B7C  0032               	dw	50
   136  001B7E  0014               	dw	20
   137  001B80  0028               	dw	40
   138  001B82  0005               	dw	5
   139  001B84  0014               	dw	20
   140  001B86  0005               	dw	5
   141  001B88  003C               	dw	60
   142  001B8A  000A               	dw	10
   143  001B8C  0028               	dw	40
   144  001B8E  0005               	dw	5
   145  001B90  0014               	dw	20
   146  001B92  0005               	dw	5
   147  001B94  003C               	dw	60
   148  001B96  0050               	dw	80
   149  001B98  0032               	dw	50
   150  001B9A  0014               	dw	20
   151  001B9C  0032               	dw	50
   152  001B9E  0014               	dw	20
   153  001BA0  0032               	dw	50
   154  001BA2  0014               	dw	20
   155  001BA4  0028               	dw	40
   156  001BA6  0005               	dw	5
   157  001BA8  0014               	dw	20
   158  001BAA  0005               	dw	5
   159  001BAC  003C               	dw	60
   160  001BAE  000A               	dw	10
   161  001BB0  0028               	dw	40
   162  001BB2  0005               	dw	5
   163  001BB4  0014               	dw	20
   164  001BB6  0005               	dw	5
   165  001BB8  003C               	dw	60
   166  001BBA  0050               	dw	80
   167                           
   168                           ;initializer for _nothingElseMattersFullDurations
   169  001BBC  0004               	dw	4
   170  001BBE  0004               	dw	4
   171  001BC0  0004               	dw	4
   172  001BC2  0004               	dw	4
   173  001BC4  0004               	dw	4
   174  001BC6  0004               	dw	4
   175  001BC8  0004               	dw	4
   176  001BCA  0004               	dw	4
   177  001BCC  0004               	dw	4
   178  001BCE  0004               	dw	4
   179  001BD0  0004               	dw	4
   180  001BD2  0004               	dw	4
   181  001BD4  0004               	dw	4
   182  001BD6  0004               	dw	4
   183  001BD8  0004               	dw	4
   184  001BDA  0004               	dw	4
   185  001BDC  0004               	dw	4
   186  001BDE  0004               	dw	4
   187  001BE0  0004               	dw	4
   188  001BE2  0004               	dw	4
   189  001BE4  0004               	dw	4
   190  001BE6  0004               	dw	4
   191  001BE8  0004               	dw	4
   192  001BEA  0004               	dw	4
   193  001BEC  0010               	dw	16
   194  001BEE  0002               	dw	2
   195  001BF0  0008               	dw	8
   196  001BF2  0008               	dw	8
   197  001BF4  0002               	dw	2
   198  001BF6  0004               	dw	4
   199  001BF8  0004               	dw	4
   200  001BFA  0004               	dw	4
   201  001BFC  0004               	dw	4
   202  001BFE  0004               	dw	4
   203  001C00  0004               	dw	4
   204                           
   205                           ;initializer for _nothingElseMattersFullNotes
   206  001C02  00A5               	dw	165
   207  001C04  00C4               	dw	196
   208  001C06  00F5               	dw	245
   209  001C08  014A               	dw	330
   210  001C0A  00F5               	dw	245
   211  001C0C  00C4               	dw	196
   212  001C0E  00A5               	dw	165
   213  001C10  00C4               	dw	196
   214  001C12  00F5               	dw	245
   215  001C14  014A               	dw	330
   216  001C16  00F5               	dw	245
   217  001C18  00C4               	dw	196
   218  001C1A  00A5               	dw	165
   219  001C1C  00C4               	dw	196
   220  001C1E  00F5               	dw	245
   221  001C20  014A               	dw	330
   222  001C22  00F5               	dw	245
   223  001C24  00C4               	dw	196
   224  001C26  00A5               	dw	165
   225  001C28  00C4               	dw	196
   226  001C2A  00F5               	dw	245
   227  001C2C  014A               	dw	330
   228  001C2E  00F5               	dw	245
   229  001C30  01EE               	dw	494
   230  001C32  014A               	dw	330
   231  001C34  01EE               	dw	494
   232  001C36  014A               	dw	330
   233  001C38  00A5               	dw	165
   234  001C3A  01EE               	dw	494
   235  001C3C  0106               	dw	262
   236  001C3E  01EE               	dw	494
   237  001C40  01B8               	dw	440
   238  001C42  01EE               	dw	494
   239  001C44  01B8               	dw	440
   240  001C46  014A               	dw	330
   241                           
   242                           	psect	idataBANK2
   243  001F44                     __pidataBANK2:
   244                           	opt stack 0
   245                           
   246                           ;initializer for _superMarioNotes
   247  001F44  0A4D               	dw	2637
   248  001F46  0A4D               	dw	2637
   249  001F48  0000               	dw	0
   250  001F4A  0A4D               	dw	2637
   251  001F4C  0000               	dw	0
   252  001F4E  082D               	dw	2093
   253  001F50  0A4D               	dw	2637
   254  001F52  0000               	dw	0
   255  001F54  0C40               	dw	3136
   256  001F56  0000               	dw	0
   257  001F58  0000               	dw	0
   258  001F5A  0000               	dw	0
   259  001F5C  0620               	dw	1568
   260  001F5E  0000               	dw	0
   261  001F60  0000               	dw	0
   262  001F62  0000               	dw	0
   263  001F64  082D               	dw	2093
   264  001F66  0000               	dw	0
   265  001F68  0000               	dw	0
   266  001F6A  0620               	dw	1568
   267  001F6C  0000               	dw	0
   268  001F6E  0000               	dw	0
   269  001F70  0527               	dw	1319
   270  001F72  0000               	dw	0
   271  001F74  0000               	dw	0
   272  001F76  06E0               	dw	1760
   273  001F78  0000               	dw	0
   274  001F7A  07B8               	dw	1976
   275  001F7C  0000               	dw	0
   276  001F7E  0749               	dw	1865
   277  001F80  06E0               	dw	1760
   278  001F82  0000               	dw	0
   279  001F84  0620               	dw	1568
   280  001F86  0A4D               	dw	2637
   281  001F88  0C40               	dw	3136
   282  001F8A  0DC0               	dw	3520
   283  001F8C  0000               	dw	0
   284  001F8E  0AEA               	dw	2794
   285  001F90  0C40               	dw	3136
   286  001F92  0000               	dw	0
   287  001F94  0A4D               	dw	2637
   288  001F96  0000               	dw	0
   289  001F98  082D               	dw	2093
   290  001F9A  092D               	dw	2349
   291  001F9C  07B8               	dw	1976
   292  001F9E  0000               	dw	0
   293  001FA0  0000               	dw	0
   294  001FA2  082D               	dw	2093
   295  001FA4  0000               	dw	0
   296  001FA6  0000               	dw	0
   297  001FA8  0620               	dw	1568
   298  001FAA  0000               	dw	0
   299  001FAC  0000               	dw	0
   300  001FAE  0527               	dw	1319
   301  001FB0  0000               	dw	0
   302  001FB2  0000               	dw	0
   303  001FB4  06E0               	dw	1760
   304  001FB6  0000               	dw	0
   305  001FB8  07B8               	dw	1976
   306  001FBA  0000               	dw	0
   307  001FBC  0749               	dw	1865
   308  001FBE  06E0               	dw	1760
   309  001FC0  0000               	dw	0
   310  001FC2  0620               	dw	1568
   311  001FC4  0A4D               	dw	2637
   312  001FC6  0C40               	dw	3136
   313  001FC8  0DC0               	dw	3520
   314  001FCA  0000               	dw	0
   315  001FCC  0AEA               	dw	2794
   316  001FCE  0C40               	dw	3136
   317  001FD0  0000               	dw	0
   318  001FD2  0A4D               	dw	2637
   319  001FD4  0000               	dw	0
   320  001FD6  082D               	dw	2093
   321  001FD8  092D               	dw	2349
   322  001FDA  07B8               	dw	1976
   323  001FDC  0000               	dw	0
   324  001FDE  0000               	dw	0
   325                           
   326                           	psect	idataBANK3
   327  001FE0                     __pidataBANK3:
   328                           	opt stack 0
   329                           
   330                           ;initializer for _superMarioDurations
   331  001FE0  000C               	dw	12
   332  001FE2  000C               	dw	12
   333  001FE4  000C               	dw	12
   334  001FE6  000C               	dw	12
   335  001FE8  000C               	dw	12
   336  001FEA  000C               	dw	12
   337  001FEC  000C               	dw	12
   338  001FEE  000C               	dw	12
   339  001FF0  000C               	dw	12
   340  001FF2  000C               	dw	12
   341  001FF4  000C               	dw	12
   342  001FF6  000C               	dw	12
   343  001FF8  000C               	dw	12
   344  001FFA  000C               	dw	12
   345  001FFC  000C               	dw	12
   346  001FFE  000C               	dw	12
   347  002000  000C               	dw	12
   348  002002  000C               	dw	12
   349  002004  000C               	dw	12
   350  002006  000C               	dw	12
   351  002008  000C               	dw	12
   352  00200A  000C               	dw	12
   353  00200C  000C               	dw	12
   354  00200E  000C               	dw	12
   355  002010  000C               	dw	12
   356  002012  000C               	dw	12
   357  002014  000C               	dw	12
   358  002016  000C               	dw	12
   359  002018  000C               	dw	12
   360  00201A  000C               	dw	12
   361  00201C  000C               	dw	12
   362  00201E  000C               	dw	12
   363  002020  0009               	dw	9
   364  002022  0009               	dw	9
   365  002024  0009               	dw	9
   366  002026  000C               	dw	12
   367  002028  000C               	dw	12
   368  00202A  000C               	dw	12
   369  00202C  000C               	dw	12
   370  00202E  000C               	dw	12
   371  002030  000C               	dw	12
   372  002032  000C               	dw	12
   373  002034  000C               	dw	12
   374  002036  000C               	dw	12
   375  002038  000C               	dw	12
   376  00203A  000C               	dw	12
   377  00203C  000C               	dw	12
   378  00203E  000C               	dw	12
   379  002040  000C               	dw	12
   380  002042  000C               	dw	12
   381  002044  000C               	dw	12
   382  002046  000C               	dw	12
   383  002048  000C               	dw	12
   384  00204A  000C               	dw	12
   385  00204C  000C               	dw	12
   386  00204E  000C               	dw	12
   387  002050  000C               	dw	12
   388  002052  000C               	dw	12
   389  002054  000C               	dw	12
   390  002056  000C               	dw	12
   391  002058  000C               	dw	12
   392  00205A  000C               	dw	12
   393  00205C  000C               	dw	12
   394  00205E  0009               	dw	9
   395  002060  0009               	dw	9
   396  002062  0009               	dw	9
   397  002064  000C               	dw	12
   398  002066  000C               	dw	12
   399  002068  000C               	dw	12
   400  00206A  000C               	dw	12
   401  00206C  000C               	dw	12
   402  00206E  000C               	dw	12
   403  002070  000C               	dw	12
   404  002072  000C               	dw	12
   405  002074  000C               	dw	12
   406  002076  000C               	dw	12
   407  002078  000C               	dw	12
   408  00207A  000C               	dw	12
   409                           
   410                           	psect	smallconst
   411  00101A                     __psmallconst:
   412                           	opt stack 0
   413  00101A  00                 	db	0
   414  00101B                     _last_new_note:
   415                           	opt stack 0
   416  00101B  0006               	dw	6
   417  00101D                     __end_of_last_new_note:
   418                           	opt stack 0
   419  00101D                     _last_win_note:
   420                           	opt stack 0
   421  00101D  004E               	dw	78
   422  00101F                     __end_of_last_win_note:
   423                           	opt stack 0
   424  00101F                     _total_steps:
   425                           	opt stack 0
   426  00101F  0320               	dw	800
   427  001021                     __end_of_total_steps:
   428                           	opt stack 0
   429  001021  00                 	db	0	; dummy byte at the end
   430  0000                     
   431                           	psect	nvCOMRAM
   432  00004F                     __pnvCOMRAM:
   433                           	opt stack 0
   434  00004F                     _stepper_direction:
   435                           	opt stack 0
   436  00004F                     	ds	2
   437                           
   438                           	psect	nvBANK0
   439  0000F0                     __pnvBANK0:
   440                           	opt stack 0
   441  0000F0                     _hard_speed:
   442                           	opt stack 0
   443  0000F0                     	ds	3
   444  0000F3                     _steps_per_led:
   445                           	opt stack 0
   446  0000F3                     	ds	3
   447  0000F6                     _hard_speed_timer:
   448                           	opt stack 0
   449  0000F6                     	ds	2
   450  0000F8                     _prev_hall:
   451                           	opt stack 0
   452  0000F8                     	ds	1
   453  0000                     _ADCON1	set	4033
   454  0000                     _INTCONbits	set	4082
   455  0000                     _IPR1bits	set	3999
   456  0000                     _LATAbits	set	3977
   457  0000                     _LATBbits	set	3978
   458  0000                     _LATCbits	set	3979
   459  0000                     _PIE1bits	set	3997
   460  0000                     _PIR1bits	set	3998
   461  0000                     _PORTAbits	set	3968
   462  0000                     _PORTBbits	set	3969
   463  0000                     _T0CONbits	set	4053
   464  0000                     _T1CONbits	set	4045
   465  0000                     _TMR0H	set	4055
   466  0000                     _TMR0L	set	4054
   467  0000                     _TMR1H	set	4047
   468  0000                     _TMR1L	set	4046
   469  0000                     _TRISAbits	set	3986
   470  0000                     _TRISBbits	set	3987
   471  0000                     _TRISCbits	set	3988
   472                           
   473                           ; #config settings
   474                           
   475                           	psect	cinit
   476  001DD6                     __pcinit:
   477                           	opt stack 0
   478  001DD6                     start_initialization:
   479                           	opt stack 0
   480  001DD6                     __initialization:
   481                           	opt stack 0
   482                           
   483                           ; Clear objects allocated to BANK0 (25 bytes)
   484  001DD6  EE00  F0C0         	lfsr	0,__pbssBANK0
   485  001DDA  0E19               	movlw	25
   486  001DDC                     clear_0:
   487  001DDC  6AEE               	clrf	postinc0,c
   488  001DDE  06E8               	decf	wreg,f,c
   489  001DE0  E1FD               	bnz	clear_0
   490                           
   491                           ; Clear objects allocated to COMRAM (3 bytes)
   492  001DE2  6A4E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   493  001DE4  6A4D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   494  001DE6  6A4C               	clrf	__pbssCOMRAM& (0+255),c
   495                           
   496                           ; Initialize objects allocated to BANK3 (156 bytes)
   497                           ; load TBLPTR registers with __pidataBANK3
   498  001DE8  0EE0               	movlw	low __pidataBANK3
   499  001DEA  6EF6               	movwf	tblptrl,c
   500  001DEC  0E1F               	movlw	high __pidataBANK3
   501  001DEE  6EF7               	movwf	tblptrh,c
   502  001DF0  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   503  001DF2  6EF8               	movwf	tblptru,c
   504  001DF4  EE03  F000         	lfsr	0,__pdataBANK3
   505  001DF8  EE10 F09C          	lfsr	1,156
   506  001DFC                     copy_data0:
   507  001DFC  0009               	tblrd		*+
   508  001DFE  CFF5 FFEE          	movff	tablat,postinc0
   509  001E02  50E5               	movf	postdec1,w,c
   510  001E04  50E1               	movf	fsr1l,w,c
   511  001E06  E1FA               	bnz	copy_data0
   512                           
   513                           ; Initialize objects allocated to BANK2 (156 bytes)
   514                           ; load TBLPTR registers with __pidataBANK2
   515  001E08  0E44               	movlw	low __pidataBANK2
   516  001E0A  6EF6               	movwf	tblptrl,c
   517  001E0C  0E1F               	movlw	high __pidataBANK2
   518  001E0E  6EF7               	movwf	tblptrh,c
   519  001E10  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   520  001E12  6EF8               	movwf	tblptru,c
   521  001E14  EE02  F000         	lfsr	0,__pdataBANK2
   522  001E18  EE10 F09C          	lfsr	1,156
   523  001E1C                     copy_data1:
   524  001E1C  0009               	tblrd		*+
   525  001E1E  CFF5 FFEE          	movff	tablat,postinc0
   526  001E22  50E5               	movf	postdec1,w,c
   527  001E24  50E1               	movf	fsr1l,w,c
   528  001E26  E1FA               	bnz	copy_data1
   529                           
   530                           ; Initialize objects allocated to BANK1 (212 bytes)
   531                           ; load TBLPTR registers with __pidataBANK1
   532  001E28  0E74               	movlw	low __pidataBANK1
   533  001E2A  6EF6               	movwf	tblptrl,c
   534  001E2C  0E1B               	movlw	high __pidataBANK1
   535  001E2E  6EF7               	movwf	tblptrh,c
   536  001E30  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   537  001E32  6EF8               	movwf	tblptru,c
   538  001E34  EE01  F000         	lfsr	0,__pdataBANK1
   539  001E38  EE10 F0D4          	lfsr	1,212
   540  001E3C                     copy_data2:
   541  001E3C  0009               	tblrd		*+
   542  001E3E  CFF5 FFEE          	movff	tablat,postinc0
   543  001E42  50E5               	movf	postdec1,w,c
   544  001E44  50E1               	movf	fsr1l,w,c
   545  001E46  E1FA               	bnz	copy_data2
   546                           
   547                           ; Initialize objects allocated to BANK0 (96 bytes)
   548                           ; load TBLPTR registers with __pidataBANK0
   549  001E48  0EE8               	movlw	low __pidataBANK0
   550  001E4A  6EF6               	movwf	tblptrl,c
   551  001E4C  0E23               	movlw	high __pidataBANK0
   552  001E4E  6EF7               	movwf	tblptrh,c
   553  001E50  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   554  001E52  6EF8               	movwf	tblptru,c
   555  001E54  EE00  F060         	lfsr	0,__pdataBANK0
   556  001E58  EE10 F060          	lfsr	1,96
   557  001E5C                     copy_data3:
   558  001E5C  0009               	tblrd		*+
   559  001E5E  CFF5 FFEE          	movff	tablat,postinc0
   560  001E62  50E5               	movf	postdec1,w,c
   561  001E64  50E1               	movf	fsr1l,w,c
   562  001E66  E1FA               	bnz	copy_data3
   563                           
   564                           ; Initialize objects allocated to COMRAM (4 bytes)
   565                           ; load TBLPTR registers with __pidataCOMRAM
   566  001E68  0E38               	movlw	low __pidataCOMRAM
   567  001E6A  6EF6               	movwf	tblptrl,c
   568  001E6C  0E27               	movlw	high __pidataCOMRAM
   569  001E6E  6EF7               	movwf	tblptrh,c
   570  001E70  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   571  001E72  6EF8               	movwf	tblptru,c
   572  001E74  EE00  F048         	lfsr	0,__pdataCOMRAM
   573  001E78  EE10 F004          	lfsr	1,4
   574  001E7C                     copy_data4:
   575  001E7C  0009               	tblrd		*+
   576  001E7E  CFF5 FFEE          	movff	tablat,postinc0
   577  001E82  50E5               	movf	postdec1,w,c
   578  001E84  50E1               	movf	fsr1l,w,c
   579  001E86  E1FA               	bnz	copy_data4
   580  001E88                     end_of_initialization:
   581                           	opt stack 0
   582  001E88                     __end_of__initialization:
   583                           	opt stack 0
   584  001E88  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   585  001E8A  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   586  001E8C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   587  001E8E  6EF8               	movwf	tblptru,c
   588  001E90  0100               	movlb	0
   589  001E92  EF8F  F013         	goto	_main	;jump to C main() function
   590                           tblptru	equ	0xFF8
   591                           tblptrh	equ	0xFF7
   592                           tblptrl	equ	0xFF6
   593                           tablat	equ	0xFF5
   594                           postinc0	equ	0xFEE
   595                           wreg	equ	0xFE8
   596                           postdec1	equ	0xFE5
   597                           fsr1l	equ	0xFE1
   598                           
   599                           	psect	bssCOMRAM
   600  00004C                     __pbssCOMRAM:
   601                           	opt stack 0
   602  00004C                     _PWM_duty:
   603                           	opt stack 0
   604  00004C                     	ds	1
   605  00004D                     _counter:
   606                           	opt stack 0
   607  00004D                     	ds	1
   608  00004E                     _state_to_recover:
   609                           	opt stack 0
   610  00004E                     	ds	1
   611                           tblptru	equ	0xFF8
   612                           tblptrh	equ	0xFF7
   613                           tblptrl	equ	0xFF6
   614                           tablat	equ	0xFF5
   615                           postinc0	equ	0xFEE
   616                           wreg	equ	0xFE8
   617                           postdec1	equ	0xFE5
   618                           fsr1l	equ	0xFE1
   619                           
   620                           	psect	dataCOMRAM
   621  000048                     __pdataCOMRAM:
   622                           	opt stack 0
   623  000048                     _randx:
   624                           	opt stack 0
   625  000048                     	ds	4
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           postdec1	equ	0xFE5
   633                           fsr1l	equ	0xFE1
   634                           
   635                           	psect	bssBANK0
   636  0000C0                     __pbssBANK0:
   637                           	opt stack 0
   638  0000C0                     _LEDs:
   639                           	opt stack 0
   640  0000C0                     	ds	16
   641  0000D0                     _note_new:
   642                           	opt stack 0
   643  0000D0                     	ds	2
   644  0000D2                     _note_win:
   645                           	opt stack 0
   646  0000D2                     	ds	2
   647  0000D4                     _position:
   648                           	opt stack 0
   649  0000D4                     	ds	2
   650  0000D6                     _current_state:
   651                           	opt stack 0
   652  0000D6                     	ds	1
   653  0000D7                     _target:
   654                           	opt stack 0
   655  0000D7                     	ds	1
   656  0000D8                     _was_released:
   657                           	opt stack 0
   658  0000D8                     	ds	1
   659                           tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           postinc0	equ	0xFEE
   664                           wreg	equ	0xFE8
   665                           postdec1	equ	0xFE5
   666                           fsr1l	equ	0xFE1
   667                           
   668                           	psect	dataBANK0
   669  000060                     __pdataBANK0:
   670                           	opt stack 0
   671  000060                     _imperialMarchNotes:
   672                           	opt stack 0
   673  000060                     	ds	72
   674  0000A8                     _nothingElseMattersDurations:
   675                           	opt stack 0
   676  0000A8                     	ds	12
   677  0000B4                     _nothingElseMattersNotes:
   678                           	opt stack 0
   679  0000B4                     	ds	12
   680                           tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           tblptrl	equ	0xFF6
   683                           tablat	equ	0xFF5
   684                           postinc0	equ	0xFEE
   685                           wreg	equ	0xFE8
   686                           postdec1	equ	0xFE5
   687                           fsr1l	equ	0xFE1
   688                           
   689                           	psect	dataBANK1
   690  000100                     __pdataBANK1:
   691                           	opt stack 0
   692  000100                     _imperialMarchDurations:
   693                           	opt stack 0
   694  000100                     	ds	72
   695  000148                     _nothingElseMattersFullDurations:
   696                           	opt stack 0
   697  000148                     	ds	70
   698  00018E                     _nothingElseMattersFullNotes:
   699                           	opt stack 0
   700  00018E                     	ds	70
   701                           tblptru	equ	0xFF8
   702                           tblptrh	equ	0xFF7
   703                           tblptrl	equ	0xFF6
   704                           tablat	equ	0xFF5
   705                           postinc0	equ	0xFEE
   706                           wreg	equ	0xFE8
   707                           postdec1	equ	0xFE5
   708                           fsr1l	equ	0xFE1
   709                           
   710                           	psect	dataBANK2
   711  000200                     __pdataBANK2:
   712                           	opt stack 0
   713  000200                     _superMarioNotes:
   714                           	opt stack 0
   715  000200                     	ds	156
   716                           tblptru	equ	0xFF8
   717                           tblptrh	equ	0xFF7
   718                           tblptrl	equ	0xFF6
   719                           tablat	equ	0xFF5
   720                           postinc0	equ	0xFEE
   721                           wreg	equ	0xFE8
   722                           postdec1	equ	0xFE5
   723                           fsr1l	equ	0xFE1
   724                           
   725                           	psect	dataBANK3
   726  000300                     __pdataBANK3:
   727                           	opt stack 0
   728  000300                     _superMarioDurations:
   729                           	opt stack 0
   730  000300                     	ds	156
   731                           tblptru	equ	0xFF8
   732                           tblptrh	equ	0xFF7
   733                           tblptrl	equ	0xFF6
   734                           tablat	equ	0xFF5
   735                           postinc0	equ	0xFEE
   736                           wreg	equ	0xFE8
   737                           postdec1	equ	0xFE5
   738                           fsr1l	equ	0xFE1
   739                           
   740                           	psect	cstackBANK0
   741  0000D9                     __pcstackBANK0:
   742                           	opt stack 0
   743  0000D9                     buzz@freq:
   744                           	opt stack 0
   745                           
   746                           ; 4 bytes @ 0x0
   747  0000D9                     	ds	4
   748  0000DD                     buzz@duration:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x4
   752  0000DD                     	ds	2
   753  0000DF                     buzz@repeats:
   754                           	opt stack 0
   755                           
   756                           ; 4 bytes @ 0x6
   757  0000DF                     	ds	4
   758  0000E3                     buzz@i:
   759                           	opt stack 0
   760                           
   761                           ; 4 bytes @ 0xA
   762  0000E3                     	ds	4
   763  0000E7                     buzz@halfPeriod:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0xE
   767  0000E7                     	ds	2
   768  0000E9                     ??_nothingElseMatters:
   769  0000E9                     ??_superMario:
   770                           
   771                           ; 1 bytes @ 0x10
   772  0000E9                     	ds	2
   773  0000EB                     _fsm$1627:
   774                           	opt stack 0
   775                           
   776                           ; 3 bytes @ 0x12
   777  0000EB                     	ds	3
   778  0000EE                     fsm@i:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x15
   782  0000EE                     	ds	1
   783  0000EF                     fsm@i_972:
   784                           	opt stack 0
   785                           
   786                           ; 1 bytes @ 0x16
   787  0000EF                     	ds	1
   788                           tblptru	equ	0xFF8
   789                           tblptrh	equ	0xFF7
   790                           tblptrl	equ	0xFF6
   791                           tablat	equ	0xFF5
   792                           postinc0	equ	0xFEE
   793                           wreg	equ	0xFE8
   794                           postdec1	equ	0xFE5
   795                           fsr1l	equ	0xFE1
   796                           
   797                           	psect	cstackCOMRAM
   798  000001                     __pcstackCOMRAM:
   799                           	opt stack 0
   800  000001                     ??_interrupt_handler:
   801  000001                     
   802                           ; 1 bytes @ 0x0
   803  000001                     	ds	14
   804  00000F                     ??_OpenTimer0:
   805  00000F                     ?___wmul:
   806                           	opt stack 0
   807  00000F                     ?___lwdiv:
   808                           	opt stack 0
   809  00000F                     ?___lwmod:
   810                           	opt stack 0
   811  00000F                     ?___ftpack:
   812                           	opt stack 0
   813  00000F                     ?___lmul:
   814                           	opt stack 0
   815  00000F                     setAllLeds@value:
   816                           	opt stack 0
   817  00000F                     myDelay_ms@ms:
   818                           	opt stack 0
   819  00000F                     ___wmul@multiplier:
   820                           	opt stack 0
   821  00000F                     ___lwdiv@dividend:
   822                           	opt stack 0
   823  00000F                     ___lwmod@dividend:
   824                           	opt stack 0
   825  00000F                     ___ftpack@arg:
   826                           	opt stack 0
   827  00000F                     ___lmul@multiplier:
   828                           	opt stack 0
   829                           
   830                           ; 4 bytes @ 0xE
   831  00000F                     	ds	1
   832  000010                     setAllLeds@i:
   833                           	opt stack 0
   834                           
   835                           ; 1 bytes @ 0xF
   836  000010                     	ds	1
   837  000011                     ??_myDelay_ms:
   838  000011                     OpenTimer0@intEnable:
   839                           	opt stack 0
   840  000011                     ___wmul@multiplicand:
   841                           	opt stack 0
   842  000011                     ___lwdiv@divisor:
   843                           	opt stack 0
   844  000011                     ___lwmod@divisor:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0x10
   848  000011                     	ds	1
   849  000012                     ___ftpack@exp:
   850                           	opt stack 0
   851  000012                     myDelay_ms@i:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x11
   855  000012                     	ds	1
   856  000013                     ___ftpack@sign:
   857                           	opt stack 0
   858  000013                     ___lwmod@counter:
   859                           	opt stack 0
   860  000013                     ___wmul@product:
   861                           	opt stack 0
   862  000013                     ___lwdiv@quotient:
   863                           	opt stack 0
   864  000013                     ___lmul@multiplicand:
   865                           	opt stack 0
   866                           
   867                           ; 4 bytes @ 0x12
   868  000013                     	ds	1
   869  000014                     ??___ftpack:
   870                           
   871                           ; 1 bytes @ 0x13
   872  000014                     	ds	1
   873  000015                     ___lwdiv@counter:
   874                           	opt stack 0
   875                           
   876                           ; 1 bytes @ 0x14
   877  000015                     	ds	2
   878  000017                     ?___altoft:
   879                           	opt stack 0
   880  000017                     ?___lbtoft:
   881                           	opt stack 0
   882  000017                     ?___lwtoft:
   883                           	opt stack 0
   884  000017                     ___lwtoft@c:
   885                           	opt stack 0
   886  000017                     ___lmul@product:
   887                           	opt stack 0
   888  000017                     ___altoft@c:
   889                           	opt stack 0
   890                           
   891                           ; 4 bytes @ 0x16
   892  000017                     	ds	3
   893  00001A                     ??_init:
   894  00001A                     ___lbtoft@c:
   895                           	opt stack 0
   896                           
   897                           ; 1 bytes @ 0x19
   898  00001A                     	ds	1
   899  00001B                     ??___altoft:
   900  00001B                     ?_rand:
   901                           	opt stack 0
   902  00001B                     ?___aldiv:
   903                           	opt stack 0
   904  00001B                     ___aldiv@dividend:
   905                           	opt stack 0
   906                           
   907                           ; 4 bytes @ 0x1A
   908  00001B                     	ds	2
   909  00001D                     ?___awmod:
   910                           	opt stack 0
   911  00001D                     ?___awtoft:
   912                           	opt stack 0
   913  00001D                     ___awmod@dividend:
   914                           	opt stack 0
   915  00001D                     ___awtoft@c:
   916                           	opt stack 0
   917                           
   918                           ; 2 bytes @ 0x1C
   919  00001D                     	ds	2
   920  00001F                     ___altoft@exp:
   921                           	opt stack 0
   922  00001F                     ___awmod@divisor:
   923                           	opt stack 0
   924  00001F                     ___aldiv@divisor:
   925                           	opt stack 0
   926                           
   927                           ; 4 bytes @ 0x1E
   928  00001F                     	ds	1
   929  000020                     ___altoft@sign:
   930                           	opt stack 0
   931  000020                     ___awtoft@sign:
   932                           	opt stack 0
   933                           
   934                           ; 1 bytes @ 0x1F
   935  000020                     	ds	1
   936  000021                     ?___ftdiv:
   937                           	opt stack 0
   938  000021                     ?___ftmul:
   939                           	opt stack 0
   940  000021                     ___awmod@counter:
   941                           	opt stack 0
   942  000021                     ___ftdiv@f1:
   943                           	opt stack 0
   944  000021                     ___ftmul@f1:
   945                           	opt stack 0
   946                           
   947                           ; 3 bytes @ 0x20
   948  000021                     	ds	1
   949  000022                     ___awmod@sign:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x21
   953  000022                     	ds	1
   954  000023                     ___aldiv@counter:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x22
   958  000023                     	ds	1
   959  000024                     ___aldiv@sign:
   960                           	opt stack 0
   961  000024                     ___ftdiv@f2:
   962                           	opt stack 0
   963  000024                     ___ftmul@f2:
   964                           	opt stack 0
   965                           
   966                           ; 3 bytes @ 0x23
   967  000024                     	ds	1
   968  000025                     ___aldiv@quotient:
   969                           	opt stack 0
   970                           
   971                           ; 4 bytes @ 0x24
   972  000025                     	ds	2
   973  000027                     ??___ftdiv:
   974  000027                     ??___ftmul:
   975                           
   976                           ; 1 bytes @ 0x26
   977  000027                     	ds	3
   978  00002A                     ___ftdiv@cntr:
   979                           	opt stack 0
   980  00002A                     ___ftmul@exp:
   981                           	opt stack 0
   982                           
   983                           ; 1 bytes @ 0x29
   984  00002A                     	ds	1
   985  00002B                     ___ftdiv@f3:
   986                           	opt stack 0
   987  00002B                     ___ftmul@f3_as_product:
   988                           	opt stack 0
   989                           
   990                           ; 3 bytes @ 0x2A
   991  00002B                     	ds	3
   992  00002E                     ___ftdiv@exp:
   993                           	opt stack 0
   994  00002E                     ___ftmul@cntr:
   995                           	opt stack 0
   996                           
   997                           ; 1 bytes @ 0x2D
   998  00002E                     	ds	1
   999  00002F                     ___ftdiv@sign:
  1000                           	opt stack 0
  1001  00002F                     ___ftmul@sign:
  1002                           	opt stack 0
  1003                           
  1004                           ; 1 bytes @ 0x2E
  1005  00002F                     	ds	1
  1006  000030                     ?___ftadd:
  1007                           	opt stack 0
  1008  000030                     ?___fttol:
  1009                           	opt stack 0
  1010  000030                     ___ftadd@f1:
  1011                           	opt stack 0
  1012  000030                     ___fttol@f1:
  1013                           	opt stack 0
  1014                           
  1015                           ; 3 bytes @ 0x2F
  1016  000030                     	ds	3
  1017  000033                     ___ftadd@f2:
  1018                           	opt stack 0
  1019                           
  1020                           ; 3 bytes @ 0x32
  1021  000033                     	ds	1
  1022  000034                     ??___fttol:
  1023                           
  1024                           ; 1 bytes @ 0x33
  1025  000034                     	ds	2
  1026  000036                     ??___ftadd:
  1027                           
  1028                           ; 1 bytes @ 0x35
  1029  000036                     	ds	3
  1030  000039                     ___ftadd@sign:
  1031                           	opt stack 0
  1032  000039                     ___fttol@sign1:
  1033                           	opt stack 0
  1034                           
  1035                           ; 1 bytes @ 0x38
  1036  000039                     	ds	1
  1037  00003A                     ___ftadd@exp2:
  1038                           	opt stack 0
  1039  00003A                     ___fttol@lval:
  1040                           	opt stack 0
  1041                           
  1042                           ; 4 bytes @ 0x39
  1043  00003A                     	ds	1
  1044  00003B                     ___ftadd@exp1:
  1045                           	opt stack 0
  1046                           
  1047                           ; 1 bytes @ 0x3A
  1048  00003B                     	ds	1
  1049  00003C                     ___ftge@ff1:
  1050                           	opt stack 0
  1051                           
  1052                           ; 3 bytes @ 0x3B
  1053  00003C                     	ds	2
  1054  00003E                     ___fttol@exp1:
  1055                           	opt stack 0
  1056                           
  1057                           ; 1 bytes @ 0x3D
  1058  00003E                     	ds	1
  1059  00003F                     myDelay_us@us:
  1060                           	opt stack 0
  1061  00003F                     ___ftge@ff2:
  1062                           	opt stack 0
  1063                           
  1064                           ; 3 bytes @ 0x3E
  1065  00003F                     	ds	2
  1066  000041                     myDelay_us@i:
  1067                           	opt stack 0
  1068                           
  1069                           ; 2 bytes @ 0x40
  1070  000041                     	ds	1
  1071  000042                     ??___ftge:
  1072                           
  1073                           ; 1 bytes @ 0x41
  1074  000042                     	ds	1
  1075  000043                     ??_buzz:
  1076  000043                     ??_go_through_cols:
  1077  000043                     stepper_pulse@speed:
  1078                           	opt stack 0
  1079                           
  1080                           ; 3 bytes @ 0x42
  1081  000043                     	ds	2
  1082  000045                     nothingElseMatters@index:
  1083                           	opt stack 0
  1084  000045                     superMario@index:
  1085                           	opt stack 0
  1086                           
  1087                           ; 2 bytes @ 0x44
  1088  000045                     	ds	1
  1089  000046                     ??_stepper_pulse:
  1090  000046                     go_through_cols@offset:
  1091                           	opt stack 0
  1092                           
  1093                           ; 1 bytes @ 0x45
  1094  000046                     	ds	1
  1095  000047                     
  1096                           ; 1 bytes @ 0x46
  1097  000047                     	ds	1
  1098  000048                     tblptru	equ	0xFF8
  1099                           tblptrh	equ	0xFF7
  1100                           tblptrl	equ	0xFF6
  1101                           tablat	equ	0xFF5
  1102                           postinc0	equ	0xFEE
  1103                           wreg	equ	0xFE8
  1104                           postdec1	equ	0xFE5
  1105                           fsr1l	equ	0xFE1
  1106                           
  1107                           ; 1 bytes @ 0x47
  1108 ;;
  1109 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1110 ;;
  1111 ;; *************** function _main *****************
  1112 ;; Defined at:
  1113 ;;		line 60 in file "main.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1127 ;;      Params:         0       0       0       0       0       0       0       0       0
  1128 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1129 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1130 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1131 ;;Total ram usage:        0 bytes
  1132 ;; Hardware stack levels required when called:    6
  1133 ;; This function calls:
  1134 ;;		_fsm
  1135 ;;		_init
  1136 ;;		_multiplex
  1137 ;; This function is called by:
  1138 ;;		Startup code after reset
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text0
  1143  00271E                     __ptext0:
  1144                           	opt stack 0
  1145  00271E                     _main:
  1146                           	opt stack 25
  1147                           
  1148                           ;main.c: 61: init();
  1149                           
  1150                           ;incstack = 0
  1151  00271E  EC8A  F00E         	call	_init	;wreg free
  1152  002722                     l2674:
  1153                           
  1154                           ;main.c: 63: fsm();
  1155  002722  EC11  F008         	call	_fsm	;wreg free
  1156                           
  1157                           ;main.c: 64: multiplex();
  1158  002726  EC1E  F013         	call	_multiplex	;wreg free
  1159  00272A  D7FB               	goto	l2674
  1160  00272C                     __end_of_main:
  1161                           	opt stack 0
  1162                           tblptru	equ	0xFF8
  1163                           tblptrh	equ	0xFF7
  1164                           tblptrl	equ	0xFF6
  1165                           tablat	equ	0xFF5
  1166                           postinc0	equ	0xFEE
  1167                           wreg	equ	0xFE8
  1168                           postdec1	equ	0xFE5
  1169                           fsr1l	equ	0xFE1
  1170                           
  1171 ;; *************** function _multiplex *****************
  1172 ;; Defined at:
  1173 ;;		line 314 in file "main.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1187 ;;      Params:         0       0       0       0       0       0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1190 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1191 ;;Total ram usage:        0 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    3
  1194 ;; This function calls:
  1195 ;;		_go_through_cols
  1196 ;; This function is called by:
  1197 ;;		_main
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text1
  1202  00263C                     __ptext1:
  1203                           	opt stack 0
  1204  00263C                     _multiplex:
  1205                           	opt stack 27
  1206                           
  1207                           ;main.c: 315: LATBbits.LATB1 = 0;
  1208                           
  1209                           ;incstack = 0
  1210  00263C  928A               	bcf	3978,1,c	;volatile
  1211                           
  1212                           ;main.c: 316: go_through_cols(0);
  1213  00263E  0E00               	movlw	0
  1214  002640  EC86  F010         	call	_go_through_cols
  1215                           
  1216                           ;main.c: 317: LATBbits.LATB1 = 1;
  1217  002644  828A               	bsf	3978,1,c	;volatile
  1218                           
  1219                           ;main.c: 319: LATBbits.LATB2 = 0;
  1220  002646  948A               	bcf	3978,2,c	;volatile
  1221                           
  1222                           ;main.c: 320: go_through_cols(4);
  1223  002648  0E04               	movlw	4
  1224  00264A  EC86  F010         	call	_go_through_cols
  1225                           
  1226                           ;main.c: 321: LATBbits.LATB2 = 1;
  1227  00264E  848A               	bsf	3978,2,c	;volatile
  1228                           
  1229                           ;main.c: 323: LATBbits.LATB3 = 0;
  1230  002650  968A               	bcf	3978,3,c	;volatile
  1231                           
  1232                           ;main.c: 324: go_through_cols(8);
  1233  002652  0E08               	movlw	8
  1234  002654  EC86  F010         	call	_go_through_cols
  1235                           
  1236                           ;main.c: 325: LATBbits.LATB3 = 1;
  1237  002658  868A               	bsf	3978,3,c	;volatile
  1238                           
  1239                           ;main.c: 327: LATBbits.LATB4 = 0;
  1240  00265A  988A               	bcf	3978,4,c	;volatile
  1241                           
  1242                           ;main.c: 328: go_through_cols(12);
  1243  00265C  0E0C               	movlw	12
  1244  00265E  EC86  F010         	call	_go_through_cols
  1245                           
  1246                           ;main.c: 329: LATBbits.LATB4 = 1;
  1247  002662  888A               	bsf	3978,4,c	;volatile
  1248  002664  0012               	return		;funcret
  1249  002666                     __end_of_multiplex:
  1250                           	opt stack 0
  1251                           tblptru	equ	0xFF8
  1252                           tblptrh	equ	0xFF7
  1253                           tblptrl	equ	0xFF6
  1254                           tablat	equ	0xFF5
  1255                           postinc0	equ	0xFEE
  1256                           wreg	equ	0xFE8
  1257                           postdec1	equ	0xFE5
  1258                           fsr1l	equ	0xFE1
  1259                           
  1260 ;; *************** function _go_through_cols *****************
  1261 ;; Defined at:
  1262 ;;		line 300 in file "main.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  offset          1    wreg     unsigned char 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  offset          1   69[COMRAM] unsigned char 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1276 ;;      Params:         0       0       0       0       0       0       0       0       0
  1277 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1278 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1279 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1280 ;;Total ram usage:        4 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    2
  1283 ;; This function calls:
  1284 ;;		_myDelay_us
  1285 ;; This function is called by:
  1286 ;;		_multiplex
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text2
  1291  00210C                     __ptext2:
  1292                           	opt stack 0
  1293  00210C                     _go_through_cols:
  1294                           	opt stack 27
  1295                           
  1296                           ;incstack = 0
  1297                           ;go_through_cols@offset stored from wreg
  1298  00210C  6E46               	movwf	go_through_cols@offset,c
  1299                           
  1300                           ;main.c: 301: if (LEDs[offset]==1) LATBbits.LATB5 =1;
  1301  00210E  5046               	movf	go_through_cols@offset,w,c
  1302  002110  0D01               	mullw	1
  1303  002112  0EC0               	movlw	low _LEDs
  1304  002114  24F3               	addwf	prodl,w,c
  1305  002116  6ED9               	movwf	fsr2l,c
  1306  002118  0E00               	movlw	high _LEDs
  1307  00211A  20F4               	addwfc	prodh,w,c
  1308  00211C  6EDA               	movwf	fsr2h,c
  1309  00211E  04DE               	decf	postinc2,w,c
  1310  002120  B4D8               	btfsc	status,2,c
  1311  002122  8A8A               	bsf	3978,5,c	;volatile
  1312                           
  1313                           ;main.c: 302: if (LEDs[offset+1]==1) LATBbits.LATB6 =1;
  1314  002124  5046               	movf	go_through_cols@offset,w,c
  1315  002126  6E43               	movwf	??_go_through_cols& (0+255),c
  1316  002128  6A44               	clrf	(??_go_through_cols+1)& (0+255),c
  1317  00212A  0E01               	movlw	1
  1318  00212C  2643               	addwf	??_go_through_cols,f,c
  1319  00212E  0E00               	movlw	0
  1320  002130  2244               	addwfc	??_go_through_cols+1,f,c
  1321  002132  0EC0               	movlw	low _LEDs
  1322  002134  2443               	addwf	??_go_through_cols,w,c
  1323  002136  6ED9               	movwf	fsr2l,c
  1324  002138  0E00               	movlw	high _LEDs
  1325  00213A  2044               	addwfc	??_go_through_cols+1,w,c
  1326  00213C  6EDA               	movwf	fsr2h,c
  1327  00213E  04DE               	decf	postinc2,w,c
  1328  002140  B4D8               	btfsc	status,2,c
  1329  002142  8C8A               	bsf	3978,6,c	;volatile
  1330                           
  1331                           ;main.c: 303: if (LEDs[offset+2]==1) LATBbits.LATB7 =1;
  1332  002144  5046               	movf	go_through_cols@offset,w,c
  1333  002146  6E43               	movwf	??_go_through_cols& (0+255),c
  1334  002148  6A44               	clrf	(??_go_through_cols+1)& (0+255),c
  1335  00214A  0E02               	movlw	2
  1336  00214C  2643               	addwf	??_go_through_cols,f,c
  1337  00214E  0E00               	movlw	0
  1338  002150  2244               	addwfc	??_go_through_cols+1,f,c
  1339  002152  0EC0               	movlw	low _LEDs
  1340  002154  2443               	addwf	??_go_through_cols,w,c
  1341  002156  6ED9               	movwf	fsr2l,c
  1342  002158  0E00               	movlw	high _LEDs
  1343  00215A  2044               	addwfc	??_go_through_cols+1,w,c
  1344  00215C  6EDA               	movwf	fsr2h,c
  1345  00215E  04DE               	decf	postinc2,w,c
  1346  002160  B4D8               	btfsc	status,2,c
  1347  002162  8E8A               	bsf	3978,7,c	;volatile
  1348                           
  1349                           ;main.c: 304: if (LEDs[offset+3]==1) LATAbits.LATA0 =1;
  1350  002164  5046               	movf	go_through_cols@offset,w,c
  1351  002166  6E43               	movwf	??_go_through_cols& (0+255),c
  1352  002168  6A44               	clrf	(??_go_through_cols+1)& (0+255),c
  1353  00216A  0E03               	movlw	3
  1354  00216C  2643               	addwf	??_go_through_cols,f,c
  1355  00216E  0E00               	movlw	0
  1356  002170  2244               	addwfc	??_go_through_cols+1,f,c
  1357  002172  0EC0               	movlw	low _LEDs
  1358  002174  2443               	addwf	??_go_through_cols,w,c
  1359  002176  6ED9               	movwf	fsr2l,c
  1360  002178  0E00               	movlw	high _LEDs
  1361  00217A  2044               	addwfc	??_go_through_cols+1,w,c
  1362  00217C  6EDA               	movwf	fsr2h,c
  1363  00217E  04DE               	decf	postinc2,w,c
  1364  002180  B4D8               	btfsc	status,2,c
  1365  002182  8089               	bsf	3977,0,c	;volatile
  1366                           
  1367                           ;main.c: 306: myDelay_us(100);
  1368  002184  0E00               	movlw	0
  1369  002186  6E40               	movwf	myDelay_us@us+1,c
  1370  002188  0E64               	movlw	100
  1371  00218A  6E3F               	movwf	myDelay_us@us,c
  1372  00218C  EC6B  F013         	call	_myDelay_us	;wreg free
  1373                           
  1374                           ;main.c: 308: LATBbits.LATB5 = 0;
  1375  002190  9A8A               	bcf	3978,5,c	;volatile
  1376                           
  1377                           ;main.c: 309: LATBbits.LATB6 = 0;
  1378  002192  9C8A               	bcf	3978,6,c	;volatile
  1379                           
  1380                           ;main.c: 310: LATBbits.LATB7 = 0;
  1381  002194  9E8A               	bcf	3978,7,c	;volatile
  1382                           
  1383                           ;main.c: 311: LATAbits.LATA0 = 0;
  1384  002196  9089               	bcf	3977,0,c	;volatile
  1385  002198  0012               	return		;funcret
  1386  00219A                     __end_of_go_through_cols:
  1387                           	opt stack 0
  1388                           tblptru	equ	0xFF8
  1389                           tblptrh	equ	0xFF7
  1390                           tblptrl	equ	0xFF6
  1391                           tablat	equ	0xFF5
  1392                           prodh	equ	0xFF4
  1393                           prodl	equ	0xFF3
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           postdec1	equ	0xFE5
  1397                           fsr1l	equ	0xFE1
  1398                           postinc2	equ	0xFDE
  1399                           fsr2h	equ	0xFDA
  1400                           fsr2l	equ	0xFD9
  1401                           status	equ	0xFD8
  1402                           
  1403 ;; *************** function _init *****************
  1404 ;; Defined at:
  1405 ;;		line 72 in file "main.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1419 ;;      Params:         0       0       0       0       0       0       0       0       0
  1420 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1421 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1422 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1423 ;;Total ram usage:        3 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    3
  1426 ;; This function calls:
  1427 ;;		___lwtoft
  1428 ;;		_hardware_init
  1429 ;; This function is called by:
  1430 ;;		_main
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text3
  1435  001D14                     __ptext3:
  1436                           	opt stack 0
  1437  001D14                     _init:
  1438                           	opt stack 27
  1439                           
  1440                           ;main.c: 73: TRISCbits.TRISC6 = 0;
  1441                           
  1442                           ;incstack = 0
  1443  001D14  9C94               	bcf	3988,6,c	;volatile
  1444                           
  1445                           ;main.c: 74: TRISCbits.TRISC7 = 0;
  1446  001D16  9E94               	bcf	3988,7,c	;volatile
  1447                           
  1448                           ;main.c: 75: TRISBbits.TRISB0 = 1;
  1449  001D18  8093               	bsf	3987,0,c	;volatile
  1450                           
  1451                           ;main.c: 76: TRISBbits.TRISB1 = 0;
  1452  001D1A  9293               	bcf	3987,1,c	;volatile
  1453                           
  1454                           ;main.c: 77: TRISBbits.TRISB2 = 0;
  1455  001D1C  9493               	bcf	3987,2,c	;volatile
  1456                           
  1457                           ;main.c: 78: TRISBbits.TRISB3 = 0;
  1458  001D1E  9693               	bcf	3987,3,c	;volatile
  1459                           
  1460                           ;main.c: 79: TRISBbits.TRISB4 = 0;
  1461  001D20  9893               	bcf	3987,4,c	;volatile
  1462                           
  1463                           ;main.c: 80: TRISBbits.TRISB5 = 0;
  1464  001D22  9A93               	bcf	3987,5,c	;volatile
  1465                           
  1466                           ;main.c: 81: TRISBbits.TRISB6 = 0;
  1467  001D24  9C93               	bcf	3987,6,c	;volatile
  1468                           
  1469                           ;main.c: 82: TRISBbits.TRISB7 = 0;
  1470  001D26  9E93               	bcf	3987,7,c	;volatile
  1471                           
  1472                           ;main.c: 83: TRISAbits.TRISA0 = 0;
  1473  001D28  9092               	bcf	3986,0,c	;volatile
  1474                           
  1475                           ;main.c: 84: TRISAbits.TRISA1 = 0;
  1476  001D2A  9292               	bcf	3986,1,c	;volatile
  1477                           
  1478                           ;main.c: 85: TRISAbits.TRISA3 = 0;
  1479  001D2C  9692               	bcf	3986,3,c	;volatile
  1480                           
  1481                           ;main.c: 86: TRISAbits.TRISA4 = 1;
  1482  001D2E  8892               	bsf	3986,4,c	;volatile
  1483                           
  1484                           ;main.c: 87: TRISAbits.TRISA5 = 1;
  1485  001D30  8A92               	bsf	3986,5,c	;volatile
  1486                           
  1487                           ;main.c: 89: LATCbits.LATC6 = 0;
  1488  001D32  9C8B               	bcf	3979,6,c	;volatile
  1489                           
  1490                           ;main.c: 90: LATCbits.LATC7 = 0;
  1491  001D34  9E8B               	bcf	3979,7,c	;volatile
  1492                           
  1493                           ;main.c: 91: LATBbits.LATB1 = 0;
  1494  001D36  928A               	bcf	3978,1,c	;volatile
  1495                           
  1496                           ;main.c: 92: LATBbits.LATB2 = 0;
  1497  001D38  948A               	bcf	3978,2,c	;volatile
  1498                           
  1499                           ;main.c: 93: LATBbits.LATB3 = 0;
  1500  001D3A  968A               	bcf	3978,3,c	;volatile
  1501                           
  1502                           ;main.c: 94: LATBbits.LATB4 = 0;
  1503  001D3C  988A               	bcf	3978,4,c	;volatile
  1504                           
  1505                           ;main.c: 95: LATBbits.LATB5 = 0;
  1506  001D3E  9A8A               	bcf	3978,5,c	;volatile
  1507                           
  1508                           ;main.c: 96: LATBbits.LATB6 = 0;
  1509  001D40  9C8A               	bcf	3978,6,c	;volatile
  1510                           
  1511                           ;main.c: 97: LATBbits.LATB7 = 0;
  1512  001D42  9E8A               	bcf	3978,7,c	;volatile
  1513                           
  1514                           ;main.c: 98: LATAbits.LATA0 = 0;
  1515  001D44  9089               	bcf	3977,0,c	;volatile
  1516                           
  1517                           ;main.c: 99: LATAbits.LATA1 = 1;
  1518  001D46  8289               	bsf	3977,1,c	;volatile
  1519                           
  1520                           ;main.c: 100: LATAbits.LATA3 = 0;
  1521  001D48  9689               	bcf	3977,3,c	;volatile
  1522                           
  1523                           ;main.c: 102: current_state = CALIBRATION;
  1524  001D4A  0E00               	movlw	0
  1525  001D4C  0100               	movlb	0	; () banked
  1526  001D4E  6FD6               	movwf	_current_state& (0+255),b
  1527                           
  1528                           ;main.c: 103: state_to_recover = CALIBRATION;
  1529  001D50  0E00               	movlw	0
  1530  001D52  6E4E               	movwf	_state_to_recover,c
  1531                           
  1532                           ;main.c: 105: note_new = 0;
  1533  001D54  0E00               	movlw	0
  1534  001D56  0100               	movlb	0	; () banked
  1535  001D58  6FD1               	movwf	(_note_new+1)& (0+255),b
  1536  001D5A  0E00               	movlw	0
  1537  001D5C  6FD0               	movwf	_note_new& (0+255),b
  1538                           
  1539                           ;main.c: 106: note_win = 0;
  1540  001D5E  0E00               	movlw	0
  1541  001D60  0100               	movlb	0	; () banked
  1542  001D62  6FD3               	movwf	(_note_win+1)& (0+255),b
  1543  001D64  0E00               	movlw	0
  1544  001D66  6FD2               	movwf	_note_win& (0+255),b
  1545                           
  1546                           ;main.c: 107: hard_speed = 1.0;
  1547  001D68  0E00               	movlw	0
  1548  001D6A  0100               	movlb	0	; () banked
  1549  001D6C  6FF0               	movwf	_hard_speed& (0+255),b
  1550  001D6E  0E80               	movlw	128
  1551  001D70  0100               	movlb	0	; () banked
  1552  001D72  6FF1               	movwf	(_hard_speed+1)& (0+255),b
  1553  001D74  0E3F               	movlw	63
  1554  001D76  0100               	movlb	0	; () banked
  1555  001D78  6FF2               	movwf	(_hard_speed+2)& (0+255),b
  1556                           
  1557                           ;main.c: 108: hard_speed_timer = 500;
  1558  001D7A  0E01               	movlw	1
  1559  001D7C  0100               	movlb	0	; () banked
  1560  001D7E  6FF7               	movwf	(_hard_speed_timer+1)& (0+255),b
  1561  001D80  0EF4               	movlw	244
  1562  001D82  6FF6               	movwf	_hard_speed_timer& (0+255),b
  1563                           
  1564                           ;main.c: 109: stepper_direction = 1;
  1565  001D84  0E00               	movlw	0
  1566  001D86  6E50               	movwf	_stepper_direction+1,c
  1567  001D88  0E01               	movlw	1
  1568  001D8A  6E4F               	movwf	_stepper_direction,c
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;main.c: 110: steps_per_led = total_steps/16;
  1572  001D8C  0E1F               	movlw	low _total_steps
  1573  001D8E  6EF6               	movwf	tblptrl,c
  1574  001D90                     	if	1	;There is more than 1 active tblptr byte
  1575  001D90  0E10               	movlw	high _total_steps
  1576  001D92  6EF7               	movwf	tblptrh,c
  1577  001D94                     	endif
  1578  001D94                     	if	0	;There are less than 3 active tblptr bytes
  1579  001D94                     	endif
  1580  001D94  0009               	tblrd		*+
  1581  001D96  CFF5 F01A          	movff	tablat,??_init
  1582  001D9A  0009               	tblrd		*+
  1583  001D9C  CFF5 F01B          	movff	tablat,??_init+1
  1584  001DA0  0E04               	movlw	4
  1585  001DA2  6E1C               	movwf	(??_init+2)& (0+255),c
  1586  001DA4                     u2115:
  1587  001DA4  90D8               	bcf	status,0,c
  1588  001DA6  321B               	rrcf	??_init+1,f,c
  1589  001DA8  321A               	rrcf	??_init,f,c
  1590  001DAA  2E1C               	decfsz	(??_init+2)& (0+255),f,c
  1591  001DAC  D7FB               	goto	u2115
  1592  001DAE  C01A  F017         	movff	??_init,___lwtoft@c
  1593  001DB2  C01B  F018         	movff	??_init+1,___lwtoft@c+1
  1594  001DB6  EC59  F013         	call	___lwtoft	;wreg free
  1595  001DBA  C017  F0F3         	movff	?___lwtoft,_steps_per_led
  1596  001DBE  C018  F0F4         	movff	?___lwtoft+1,_steps_per_led+1
  1597  001DC2  C019  F0F5         	movff	?___lwtoft+2,_steps_per_led+2
  1598                           
  1599                           ;main.c: 111: hardware_init();
  1600  001DC6  EC96  F013         	call	_hardware_init	;wreg free
  1601                           
  1602                           ;main.c: 112: prev_hall = PORTAbits.RA5;
  1603  001DCA  0E00               	movlw	0
  1604  001DCC  BA80               	btfsc	3968,5,c	;volatile
  1605  001DCE  0E01               	movlw	1
  1606  001DD0  0100               	movlb	0	; () banked
  1607  001DD2  6FF8               	movwf	_prev_hall& (0+255),b
  1608                           
  1609                           ; BSR set to: 0
  1610  001DD4  0012               	return		;funcret
  1611  001DD6                     __end_of_init:
  1612                           	opt stack 0
  1613                           tblptru	equ	0xFF8
  1614                           tblptrh	equ	0xFF7
  1615                           tblptrl	equ	0xFF6
  1616                           tablat	equ	0xFF5
  1617                           prodh	equ	0xFF4
  1618                           prodl	equ	0xFF3
  1619                           postinc0	equ	0xFEE
  1620                           wreg	equ	0xFE8
  1621                           postdec1	equ	0xFE5
  1622                           fsr1l	equ	0xFE1
  1623                           postinc2	equ	0xFDE
  1624                           fsr2h	equ	0xFDA
  1625                           fsr2l	equ	0xFD9
  1626                           status	equ	0xFD8
  1627                           
  1628 ;; *************** function _hardware_init *****************
  1629 ;; Defined at:
  1630 ;;		line 39 in file "config.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;		None
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;		None
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0, cstack
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1644 ;;      Params:         0       0       0       0       0       0       0       0       0
  1645 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1647 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1648 ;;Total ram usage:        0 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; Hardware stack levels required when called:    2
  1651 ;; This function calls:
  1652 ;;		_OpenTimer0
  1653 ;; This function is called by:
  1654 ;;		_init
  1655 ;;		_initBuzz
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text4
  1660  00272C                     __ptext4:
  1661                           	opt stack 0
  1662  00272C                     _hardware_init:
  1663                           	opt stack 27
  1664                           
  1665                           ;config.c: 40: ADCON1 = 0x0F;
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;incstack = 0
  1669  00272C  0E0F               	movlw	15
  1670  00272E  6EC1               	movwf	4033,c	;volatile
  1671                           
  1672                           ;config.c: 50: OpenTimer0(0);
  1673  002730  0E00               	movlw	0
  1674  002732  EC4F  F012         	call	_OpenTimer0
  1675  002736  0012               	return		;funcret
  1676  002738                     __end_of_hardware_init:
  1677                           	opt stack 0
  1678                           tblptru	equ	0xFF8
  1679                           tblptrh	equ	0xFF7
  1680                           tblptrl	equ	0xFF6
  1681                           tablat	equ	0xFF5
  1682                           prodh	equ	0xFF4
  1683                           prodl	equ	0xFF3
  1684                           postinc0	equ	0xFEE
  1685                           wreg	equ	0xFE8
  1686                           postdec1	equ	0xFE5
  1687                           fsr1l	equ	0xFE1
  1688                           postinc2	equ	0xFDE
  1689                           fsr2h	equ	0xFDA
  1690                           fsr2l	equ	0xFD9
  1691                           status	equ	0xFD8
  1692                           
  1693 ;; *************** function _OpenTimer0 *****************
  1694 ;; Defined at:
  1695 ;;		line 97 in file "config.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  intEnable       1    wreg     unsigned char 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  intEnable       1   16[COMRAM] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2, status,0
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1709 ;;      Params:         0       0       0       0       0       0       0       0       0
  1710 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1711 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1712 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1713 ;;Total ram usage:        3 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; Hardware stack levels required when called:    1
  1716 ;; This function calls:
  1717 ;;		Nothing
  1718 ;; This function is called by:
  1719 ;;		_hardware_init
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text5
  1724  00249E                     __ptext5:
  1725                           	opt stack 0
  1726  00249E                     _OpenTimer0:
  1727                           	opt stack 27
  1728                           
  1729                           ;incstack = 0
  1730                           ;OpenTimer0@intEnable stored from wreg
  1731  00249E  6E11               	movwf	OpenTimer0@intEnable,c
  1732                           
  1733                           ;config.c: 98: T0CONbits.T08BIT = 1;
  1734  0024A0  8CD5               	bsf	4053,6,c	;volatile
  1735                           
  1736                           ;config.c: 99: T0CONbits.T0CS = 0;
  1737  0024A2  9AD5               	bcf	4053,5,c	;volatile
  1738                           
  1739                           ;config.c: 100: T0CONbits.PSA = 0;
  1740  0024A4  96D5               	bcf	4053,3,c	;volatile
  1741                           
  1742                           ;config.c: 101: T0CONbits.T0PS = 0b101;
  1743  0024A6  50D5               	movf	4053,w,c	;volatile
  1744  0024A8  0BF8               	andlw	-8
  1745  0024AA  0905               	iorlw	5
  1746  0024AC  6ED5               	movwf	4053,c	;volatile
  1747                           
  1748                           ;config.c: 102: TMR0H = 0;
  1749  0024AE  0E00               	movlw	0
  1750  0024B0  6ED7               	movwf	4055,c	;volatile
  1751                           
  1752                           ;config.c: 103: TMR0L = 69;
  1753  0024B2  0E45               	movlw	69
  1754  0024B4  6ED6               	movwf	4054,c	;volatile
  1755                           
  1756                           ;config.c: 105: INTCONbits.TMR0IE = intEnable & 0x01;
  1757  0024B6  C011  F00F         	movff	OpenTimer0@intEnable,??_OpenTimer0
  1758  0024BA  0E01               	movlw	1
  1759  0024BC  160F               	andwf	??_OpenTimer0,f,c
  1760  0024BE  3A0F               	swapf	??_OpenTimer0,f,c
  1761  0024C0  460F               	rlncf	??_OpenTimer0,f,c
  1762  0024C2  50F2               	movf	intcon,w,c	;volatile
  1763  0024C4  180F               	xorwf	??_OpenTimer0,w,c
  1764  0024C6  0BDF               	andlw	-33
  1765  0024C8  180F               	xorwf	??_OpenTimer0,w,c
  1766  0024CA  6EF2               	movwf	intcon,c	;volatile
  1767                           
  1768                           ;config.c: 106: INTCONbits.GIE = (intEnable & 0x01) | INTCONbits.GIE;
  1769  0024CC  AEF2               	btfss	intcon,7,c	;volatile
  1770  0024CE  D003               	goto	u1570
  1771  0024D0  6A0F               	clrf	??_OpenTimer0& (0+255),c
  1772  0024D2  2A0F               	incf	??_OpenTimer0& (0+255),f,c
  1773  0024D4  D001               	goto	u1578
  1774  0024D6                     u1570:
  1775  0024D6  6A0F               	clrf	??_OpenTimer0& (0+255),c
  1776  0024D8                     u1578:
  1777  0024D8  5011               	movf	OpenTimer0@intEnable,w,c
  1778  0024DA  0B01               	andlw	1
  1779  0024DC  100F               	iorwf	??_OpenTimer0,w,c
  1780  0024DE  6E10               	movwf	(??_OpenTimer0+1)& (0+255),c
  1781  0024E0  3210               	rrcf	??_OpenTimer0+1,f,c
  1782  0024E2  3210               	rrcf	??_OpenTimer0+1,f,c
  1783  0024E4  50F2               	movf	intcon,w,c	;volatile
  1784  0024E6  1810               	xorwf	??_OpenTimer0+1,w,c
  1785  0024E8  0B7F               	andlw	-129
  1786  0024EA  1810               	xorwf	??_OpenTimer0+1,w,c
  1787  0024EC  6EF2               	movwf	intcon,c	;volatile
  1788                           
  1789                           ;config.c: 107: INTCONbits.TMR0IF = 0;
  1790  0024EE  94F2               	bcf	intcon,2,c	;volatile
  1791  0024F0  0012               	return		;funcret
  1792  0024F2                     __end_of_OpenTimer0:
  1793                           	opt stack 0
  1794                           tblptru	equ	0xFF8
  1795                           tblptrh	equ	0xFF7
  1796                           tblptrl	equ	0xFF6
  1797                           tablat	equ	0xFF5
  1798                           prodh	equ	0xFF4
  1799                           prodl	equ	0xFF3
  1800                           intcon	equ	0xFF2
  1801                           postinc0	equ	0xFEE
  1802                           wreg	equ	0xFE8
  1803                           postdec1	equ	0xFE5
  1804                           fsr1l	equ	0xFE1
  1805                           postinc2	equ	0xFDE
  1806                           fsr2h	equ	0xFDA
  1807                           fsr2l	equ	0xFD9
  1808                           status	equ	0xFD8
  1809                           
  1810 ;; *************** function ___lwtoft *****************
  1811 ;; Defined at:
  1812 ;;		line 28 in file "/Applications/microchip/xc8/v1.36/sources/common/lwtoft.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  c               2   22[COMRAM] unsigned int 
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  3   22[COMRAM] float 
  1819 ;; Registers used:
  1820 ;;		wreg, status,2, status,0, cstack
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1826 ;;      Params:         3       0       0       0       0       0       0       0       0
  1827 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1828 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1829 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1830 ;;Total ram usage:        3 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    2
  1833 ;; This function calls:
  1834 ;;		___ftpack
  1835 ;; This function is called by:
  1836 ;;		_init
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text6
  1841  0026B2                     __ptext6:
  1842                           	opt stack 0
  1843  0026B2                     ___lwtoft:
  1844                           	opt stack 27
  1845                           
  1846                           ;incstack = 0
  1847  0026B2  C017  F00F         	movff	___lwtoft@c,___ftpack@arg
  1848  0026B6  C018  F010         	movff	___lwtoft@c+1,___ftpack@arg+1
  1849  0026BA  6A11               	clrf	___ftpack@arg+2,c
  1850  0026BC  0E8E               	movlw	142
  1851  0026BE  6E12               	movwf	___ftpack@exp,c
  1852  0026C0  0E00               	movlw	0
  1853  0026C2  6E13               	movwf	___ftpack@sign,c
  1854  0026C4  EC4B  F00F         	call	___ftpack	;wreg free
  1855  0026C8  C00F  F017         	movff	?___ftpack,?___lwtoft
  1856  0026CC  C010  F018         	movff	?___ftpack+1,?___lwtoft+1
  1857  0026D0  C011  F019         	movff	?___ftpack+2,?___lwtoft+2
  1858  0026D4  0012               	return	
  1859  0026D6                     __end_of___lwtoft:
  1860                           	opt stack 0
  1861                           tblptru	equ	0xFF8
  1862                           tblptrh	equ	0xFF7
  1863                           tblptrl	equ	0xFF6
  1864                           tablat	equ	0xFF5
  1865                           prodh	equ	0xFF4
  1866                           prodl	equ	0xFF3
  1867                           intcon	equ	0xFF2
  1868                           postinc0	equ	0xFEE
  1869                           wreg	equ	0xFE8
  1870                           postdec1	equ	0xFE5
  1871                           fsr1l	equ	0xFE1
  1872                           postinc2	equ	0xFDE
  1873                           fsr2h	equ	0xFDA
  1874                           fsr2l	equ	0xFD9
  1875                           status	equ	0xFD8
  1876                           
  1877 ;; *************** function _fsm *****************
  1878 ;; Defined at:
  1879 ;;		line 115 in file "main.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  i               1   22[BANK0 ] unsigned char 
  1884 ;;  i               1   21[BANK0 ] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1894 ;;      Params:         0       0       0       0       0       0       0       0       0
  1895 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1897 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1898 ;;Total ram usage:        5 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    5
  1901 ;; This function calls:
  1902 ;;		___awmod
  1903 ;;		___awtoft
  1904 ;;		___ftadd
  1905 ;;		___ftdiv
  1906 ;;		___ftge
  1907 ;;		___ftmul
  1908 ;;		___lbtoft
  1909 ;;		___lwmod
  1910 ;;		_buzz
  1911 ;;		_nothingElseMatters
  1912 ;;		_rand
  1913 ;;		_setAllLeds
  1914 ;;		_stepper_pulse
  1915 ;;		_superMario
  1916 ;; This function is called by:
  1917 ;;		_main
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text7
  1922  001022                     __ptext7:
  1923                           	opt stack 0
  1924  001022                     _fsm:
  1925                           	opt stack 25
  1926                           
  1927                           ;main.c: 117: switch (current_state) {
  1928                           
  1929                           ;incstack = 0
  1930  001022  D23E               	goto	l2670
  1931  001024                     l2512:
  1932                           
  1933                           ;main.c: 120: stepper_pulse(1);
  1934  001024  0E00               	movlw	0
  1935  001026  6E43               	movwf	stepper_pulse@speed,c
  1936  001028  0E80               	movlw	128
  1937  00102A  6E44               	movwf	stepper_pulse@speed+1,c
  1938  00102C  0E3F               	movlw	63
  1939  00102E  6E45               	movwf	stepper_pulse@speed+2,c
  1940  001030  EC49  F00D         	call	_stepper_pulse	;wreg free
  1941                           
  1942                           ;main.c: 123: if (PORTAbits.RA5 != prev_hall) {
  1943  001034  AA80               	btfss	3968,5,c	;volatile
  1944  001036  D002               	goto	u2440
  1945  001038  0E01               	movlw	1
  1946  00103A  D001               	goto	u2446
  1947  00103C                     u2440:
  1948  00103C  0E00               	movlw	0
  1949  00103E                     u2446:
  1950  00103E  0100               	movlb	0	; () banked
  1951  001040  19F8               	xorwf	_prev_hall& (0+255),w,b
  1952  001042  B4D8               	btfsc	status,2,c
  1953  001044  0012               	return	
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;main.c: 125: position = 0;
  1957  001046  0E00               	movlw	0
  1958  001048  0100               	movlb	0	; () banked
  1959  00104A  6FD5               	movwf	(_position+1)& (0+255),b
  1960  00104C  0E00               	movlw	0
  1961  00104E  6FD4               	movwf	_position& (0+255),b
  1962                           
  1963                           ;main.c: 126: current_state = NEW_GAME;
  1964  001050  0E01               	movlw	1
  1965  001052  0100               	movlb	0	; () banked
  1966  001054  6FD6               	movwf	_current_state& (0+255),b
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;main.c: 127: }
  1970                           ;main.c: 129: break;
  1971  001056  0012               	return	
  1972  001058                     l2518:
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;main.c: 133: setAllLeds(0);
  1976  001058  0E00               	movlw	0
  1977  00105A  EC33  F013         	call	_setAllLeds
  1978                           
  1979                           ;main.c: 135: note_new%=last_new_note;
  1980  00105E  C0D0  F00F         	movff	_note_new,___lwmod@dividend
  1981  001062  C0D1  F010         	movff	_note_new+1,___lwmod@dividend+1
  1982  001066  0E1B               	movlw	low _last_new_note
  1983  001068  6EF6               	movwf	tblptrl,c
  1984  00106A                     	if	1	;There is more than 1 active tblptr byte
  1985  00106A  0E10               	movlw	high _last_new_note
  1986  00106C  6EF7               	movwf	tblptrh,c
  1987  00106E                     	endif
  1988  00106E                     	if	0	;There are less than 3 active tblptr bytes
  1989  00106E                     	endif
  1990  00106E  0009               	tblrd		*+
  1991  001070  CFF5 F011          	movff	tablat,___lwmod@divisor
  1992  001074  000A               	tblrd		*-
  1993  001076  CFF5 F012          	movff	tablat,___lwmod@divisor+1
  1994  00107A  ECCB  F012         	call	___lwmod	;wreg free
  1995  00107E  C00F  F0D0         	movff	?___lwmod,_note_new
  1996  001082  C010  F0D1         	movff	?___lwmod+1,_note_new+1
  1997                           
  1998                           ;main.c: 136: was_released = 0;
  1999  001086  0E00               	movlw	0
  2000  001088  0100               	movlb	0	; () banked
  2001  00108A  6FD8               	movwf	_was_released& (0+255),b
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;main.c: 137: note_win = 0;
  2005  00108C  0E00               	movlw	0
  2006  00108E  0100               	movlb	0	; () banked
  2007  001090  6FD3               	movwf	(_note_win+1)& (0+255),b
  2008  001092  0E00               	movlw	0
  2009  001094  6FD2               	movwf	_note_win& (0+255),b
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;main.c: 138: LATAbits.LATA1 = 1;
  2013  001096  8289               	bsf	3977,1,c	;volatile
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;main.c: 139: nothingElseMatters(note_new);
  2017  001098  C0D0  F045         	movff	_note_new,nothingElseMatters@index
  2018  00109C  C0D1  F046         	movff	_note_new+1,nothingElseMatters@index+1
  2019  0010A0  EC0B  F011         	call	_nothingElseMatters	;wreg free
  2020                           
  2021                           ;main.c: 140: note_new++;
  2022  0010A4  0100               	movlb	0	; () banked
  2023  0010A6  4BD0               	infsnz	_note_new& (0+255),f,b
  2024  0010A8  2BD1               	incf	(_note_new+1)& (0+255),f,b
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;main.c: 143: if (PORTAbits.RA4 == 0 && PORTBbits.RB0 == 0) {
  2028  0010AA  A880               	btfss	3968,4,c	;volatile
  2029                           
  2030                           ; BSR set to: 0
  2031  0010AC  B081               	btfsc	3969,0,c	;volatile
  2032  0010AE  D007               	goto	l168
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;main.c: 144: current_state = MOVE_HARD;
  2036  0010B0  0E03               	movlw	3
  2037  0010B2  0100               	movlb	0	; () banked
  2038  0010B4  6FD6               	movwf	_current_state& (0+255),b
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;main.c: 145: setAllLeds(0);
  2042  0010B6  0E00               	movlw	0
  2043  0010B8  EC33  F013         	call	_setAllLeds
  2044                           
  2045                           ;main.c: 146: }
  2046  0010BC  0012               	return	
  2047  0010BE                     l168:
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;main.c: 147: else
  2051                           ;main.c: 148: if (PORTAbits.RA4 == 0 && PORTBbits.RB0 == 1) {
  2052  0010BE  B880               	btfsc	3968,4,c	;volatile
  2053  0010C0  0012               	return	
  2054                           
  2055                           ; BSR set to: 0
  2056  0010C2  A081               	btfss	3969,0,c	;volatile
  2057  0010C4  0012               	return	
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;main.c: 149: current_state = MOVE_EASY;
  2061  0010C6  0E02               	movlw	2
  2062  0010C8  0100               	movlb	0	; () banked
  2063  0010CA  6FD6               	movwf	_current_state& (0+255),b
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;main.c: 150: setAllLeds(0);
  2067  0010CC  0E00               	movlw	0
  2068  0010CE  EC33  F013         	call	_setAllLeds
  2069                           
  2070                           ;main.c: 151: }
  2071                           ;main.c: 153: break;
  2072  0010D2  0012               	return	
  2073  0010D4                     l2546:
  2074                           
  2075                           ;main.c: 157: stepper_pulse(1);
  2076  0010D4  0E00               	movlw	0
  2077  0010D6  6E43               	movwf	stepper_pulse@speed,c
  2078  0010D8  0E80               	movlw	128
  2079  0010DA  6E44               	movwf	stepper_pulse@speed+1,c
  2080  0010DC  0E3F               	movlw	63
  2081  0010DE  6E45               	movwf	stepper_pulse@speed+2,c
  2082  0010E0  EC49  F00D         	call	_stepper_pulse	;wreg free
  2083                           
  2084                           ;main.c: 159: if (PORTAbits.RA4 == 0) {
  2085  0010E4  B880               	btfsc	3968,4,c	;volatile
  2086  0010E6  D008               	goto	l2554
  2087                           
  2088                           ;main.c: 160: if (was_released == 1)
  2089  0010E8  0100               	movlb	0	; () banked
  2090  0010EA  05D8               	decf	_was_released& (0+255),w,b
  2091  0010EC  A4D8               	btfss	status,2,c
  2092  0010EE  0012               	return	
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;main.c: 161: current_state = FIRE;
  2096  0010F0  0E05               	movlw	5
  2097  0010F2  0100               	movlb	0	; () banked
  2098  0010F4  6FD6               	movwf	_current_state& (0+255),b
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;main.c: 162: }
  2102  0010F6  0012               	return	
  2103  0010F8                     l2554:
  2104                           
  2105                           ;main.c: 163: else {
  2106                           ;main.c: 164: if (was_released == 0)
  2107  0010F8  0100               	movlb	0	; () banked
  2108  0010FA  51D8               	movf	_was_released& (0+255),w,b
  2109  0010FC  0100               	movlb	0	; () banked
  2110  0010FE  A4D8               	btfss	status,2,c
  2111  001100  0012               	return	
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;main.c: 165: current_state = RELEASE;
  2115  001102  0E04               	movlw	4
  2116  001104  0100               	movlb	0	; () banked
  2117  001106  6FD6               	movwf	_current_state& (0+255),b
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;main.c: 166: }
  2121                           ;main.c: 168: break;
  2122                           
  2123                           ; BSR set to: 0
  2124  001108  0012               	return	
  2125  00110A                     l2558:
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;main.c: 172: stepper_pulse(hard_speed);
  2129  00110A  C0F0  F043         	movff	_hard_speed,stepper_pulse@speed
  2130  00110E  C0F1  F044         	movff	_hard_speed+1,stepper_pulse@speed+1
  2131  001112  C0F2  F045         	movff	_hard_speed+2,stepper_pulse@speed+2
  2132  001116  EC49  F00D         	call	_stepper_pulse	;wreg free
  2133                           
  2134                           ;main.c: 173: hard_speed_timer--;
  2135  00111A  0100               	movlb	0	; () banked
  2136  00111C  07F6               	decf	_hard_speed_timer& (0+255),f,b
  2137  00111E  A0D8               	btfss	status,0,c
  2138  001120  07F7               	decf	(_hard_speed_timer+1)& (0+255),f,b
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;main.c: 175: if (was_released == 1) {
  2142  001122  0100               	movlb	0	; () banked
  2143  001124  05D8               	decf	_was_released& (0+255),w,b
  2144  001126  A4D8               	btfss	status,2,c
  2145  001128  D012               	goto	l177
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;main.c: 176: if (PORTAbits.RA4 == 0) {
  2149  00112A  B880               	btfsc	3968,4,c	;volatile
  2150  00112C  D004               	goto	l2568
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;main.c: 177: current_state = FIRE;
  2154  00112E  0E05               	movlw	5
  2155  001130  0100               	movlb	0	; () banked
  2156  001132  6FD6               	movwf	_current_state& (0+255),b
  2157                           
  2158                           ;main.c: 178: }
  2159  001134  0012               	return	
  2160  001136                     l2568:
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;main.c: 179: else if (hard_speed_timer <= 5) {
  2164  001136  0100               	movlb	0	; () banked
  2165  001138  51F7               	movf	(_hard_speed_timer+1)& (0+255),w,b
  2166  00113A  E104               	bnz	u2551
  2167  00113C  0E06               	movlw	6
  2168  00113E  0100               	movlb	0	; () banked
  2169  001140  5DF6               	subwf	_hard_speed_timer& (0+255),w,b
  2170  001142  B0D8               	btfsc	status,0,c
  2171  001144                     u2551:
  2172  001144  0012               	return	
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;main.c: 180: current_state = CHANGE_SPEED;
  2176  001146  0E06               	movlw	6
  2177  001148  0100               	movlb	0	; () banked
  2178  00114A  6FD6               	movwf	_current_state& (0+255),b
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;main.c: 181: }
  2182                           ;main.c: 182: }
  2183                           
  2184                           ; BSR set to: 0
  2185  00114C  0012               	return	
  2186  00114E                     l177:
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;main.c: 183: else if (PORTAbits.RA4 == 0) {
  2190  00114E  B880               	btfsc	3968,4,c	;volatile
  2191  001150  D00C               	goto	l2576
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;main.c: 184: if (hard_speed_timer <= 5) {
  2195  001152  0100               	movlb	0	; () banked
  2196  001154  51F7               	movf	(_hard_speed_timer+1)& (0+255),w,b
  2197  001156  E104               	bnz	u2571
  2198  001158  0E06               	movlw	6
  2199  00115A  0100               	movlb	0	; () banked
  2200  00115C  5DF6               	subwf	_hard_speed_timer& (0+255),w,b
  2201  00115E  B0D8               	btfsc	status,0,c
  2202  001160                     u2571:
  2203  001160  0012               	return	
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;main.c: 185: current_state = CHANGE_SPEED;
  2207  001162  0E06               	movlw	6
  2208  001164  0100               	movlb	0	; () banked
  2209  001166  6FD6               	movwf	_current_state& (0+255),b
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;main.c: 186: }
  2213                           ;main.c: 187: }
  2214  001168  0012               	return	
  2215  00116A                     l2576:
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;main.c: 188: else {
  2219                           ;main.c: 189: current_state = RELEASE;
  2220  00116A  0E04               	movlw	4
  2221  00116C  0100               	movlb	0	; () banked
  2222  00116E  6FD6               	movwf	_current_state& (0+255),b
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;main.c: 190: }
  2226                           ;main.c: 192: break;
  2227                           
  2228                           ; BSR set to: 0
  2229  001170  0012               	return	
  2230  001172                     l2578:
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;main.c: 197: was_released = 1;
  2234  001172  0E01               	movlw	1
  2235  001174  0100               	movlb	0	; () banked
  2236  001176  6FD8               	movwf	_was_released& (0+255),b
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;main.c: 199: if (PORTBbits.RB0 == 1)
  2240  001178  A081               	btfss	3969,0,c	;volatile
  2241  00117A  D004               	goto	l2584
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;main.c: 200: current_state = MOVE_EASY;
  2245  00117C  0E02               	movlw	2
  2246  00117E  0100               	movlb	0	; () banked
  2247  001180  6FD6               	movwf	_current_state& (0+255),b
  2248  001182  0012               	return	
  2249  001184                     l2584:
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;main.c: 201: else
  2253                           ;main.c: 202: current_state = MOVE_HARD;
  2254  001184  0E03               	movlw	3
  2255  001186  0100               	movlb	0	; () banked
  2256  001188  6FD6               	movwf	_current_state& (0+255),b
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;main.c: 203: break;
  2260  00118A  0012               	return	
  2261  00118C                     l2586:
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;main.c: 207: LEDs[target] = 1;
  2265  00118C  0100               	movlb	0	; () banked
  2266  00118E  51D7               	movf	_target& (0+255),w,b
  2267  001190  0D01               	mullw	1
  2268  001192  0EC0               	movlw	low _LEDs
  2269  001194  24F3               	addwf	prodl,w,c
  2270  001196  6ED9               	movwf	fsr2l,c
  2271  001198  0E00               	movlw	high _LEDs
  2272  00119A  20F4               	addwfc	prodh,w,c
  2273  00119C  6EDA               	movwf	fsr2h,c
  2274  00119E  0E01               	movlw	1
  2275  0011A0  6EDF               	movwf	indf2,c
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;main.c: 208: char i = 0;
  2279  0011A2  0E00               	movlw	0
  2280  0011A4  0100               	movlb	0	; () banked
  2281  0011A6  6FEE               	movwf	fsm@i& (0+255),b
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;main.c: 209: for (i = 0; i <= 15; i++) {
  2285  0011A8  0E00               	movlw	0
  2286  0011AA  0100               	movlb	0	; () banked
  2287  0011AC  6FEE               	movwf	fsm@i& (0+255),b
  2288  0011AE                     l2592:
  2289                           
  2290                           ; BSR set to: 0
  2291  0011AE  0E0F               	movlw	15
  2292  0011B0  0100               	movlb	0	; () banked
  2293  0011B2  65EE               	cpfsgt	fsm@i& (0+255),b
  2294  0011B4  D001               	goto	l2596
  2295  0011B6  D017               	goto	l2608
  2296  0011B8                     l2596:
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;main.c: 210: if (LEDs[i] == 0) {
  2300  0011B8  0100               	movlb	0	; () banked
  2301  0011BA  51EE               	movf	fsm@i& (0+255),w,b
  2302  0011BC  0D01               	mullw	1
  2303  0011BE  0EC0               	movlw	low _LEDs
  2304  0011C0  24F3               	addwf	prodl,w,c
  2305  0011C2  6ED9               	movwf	fsr2l,c
  2306  0011C4  0E00               	movlw	high _LEDs
  2307  0011C6  20F4               	addwfc	prodh,w,c
  2308  0011C8  6EDA               	movwf	fsr2h,c
  2309  0011CA  50DF               	movf	indf2,w,c
  2310  0011CC  A4D8               	btfss	status,2,c
  2311  0011CE  D008               	goto	l2604
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;main.c: 211: if (PORTBbits.RB0 == 1)
  2315  0011D0  A081               	btfss	3969,0,c	;volatile
  2316  0011D2  D002               	goto	l2602
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;main.c: 212: current_state = MOVE_EASY;
  2320  0011D4  0E02               	movlw	2
  2321  0011D6  D001               	goto	L1
  2322  0011D8                     l2602:
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;main.c: 213: else
  2326                           ;main.c: 214: current_state = MOVE_HARD;
  2327  0011D8  0E03               	movlw	3
  2328  0011DA                     L1:
  2329  0011DA  0100               	movlb	0	; () banked
  2330  0011DC  6FD6               	movwf	_current_state& (0+255),b
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;main.c: 215: break;
  2334  0011DE  D003               	goto	l2608
  2335  0011E0                     l2604:
  2336                           
  2337                           ; BSR set to: 0
  2338  0011E0  0100               	movlb	0	; () banked
  2339  0011E2  2BEE               	incf	fsm@i& (0+255),f,b
  2340  0011E4  D7E4               	goto	l2592
  2341  0011E6                     l2608:
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;main.c: 216: }
  2345                           ;main.c: 217: }
  2346                           ;main.c: 218: if (i == 16)
  2347  0011E6  0E10               	movlw	16
  2348  0011E8  0100               	movlb	0	; () banked
  2349  0011EA  19EE               	xorwf	fsm@i& (0+255),w,b
  2350  0011EC  A4D8               	btfss	status,2,c
  2351  0011EE  0012               	return	
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;main.c: 219: current_state = GAME_WON;
  2355  0011F0  0E08               	movlw	8
  2356  0011F2  0100               	movlb	0	; () banked
  2357  0011F4  6FD6               	movwf	_current_state& (0+255),b
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;main.c: 220: break;
  2361  0011F6  0012               	return	
  2362  0011F8                     l2612:
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;main.c: 224: if (rand()*2 >= 1)
  2366  0011F8  ECA2  F012         	call	_rand	;wreg free
  2367  0011FC  90D8               	bcf	status,0,c
  2368  0011FE  361B               	rlcf	?_rand,f,c
  2369  001200  361C               	rlcf	?_rand+1,f,c
  2370  001202  BE1C               	btfsc	?_rand+1,7,c
  2371  001204  D00A               	goto	l196
  2372  001206  501C               	movf	?_rand+1,w,c
  2373  001208  E103               	bnz	u2640
  2374  00120A  041B               	decf	?_rand,w,c
  2375  00120C  A0D8               	btfss	status,0,c
  2376  00120E  D005               	goto	l196
  2377  001210                     u2640:
  2378                           
  2379                           ;main.c: 225: stepper_direction = 1;
  2380  001210  0E00               	movlw	0
  2381  001212  6E50               	movwf	_stepper_direction+1,c
  2382  001214  0E01               	movlw	1
  2383  001216  6E4F               	movwf	_stepper_direction,c
  2384  001218  D002               	goto	l2616
  2385  00121A                     l196:
  2386                           
  2387                           ;main.c: 226: else
  2388                           ;main.c: 227: stepper_direction = -1;
  2389  00121A  684F               	setf	_stepper_direction,c
  2390  00121C  6850               	setf	_stepper_direction+1,c
  2391  00121E                     l2616:
  2392                           
  2393                           ;main.c: 230: hard_speed_timer = rand()%2000+100;
  2394  00121E  ECA2  F012         	call	_rand	;wreg free
  2395  001222  C01B  F01D         	movff	?_rand,___awmod@dividend
  2396  001226  C01C  F01E         	movff	?_rand+1,___awmod@dividend+1
  2397  00122A  0E07               	movlw	7
  2398  00122C  6E20               	movwf	___awmod@divisor+1,c
  2399  00122E  0ED0               	movlw	208
  2400  001230  6E1F               	movwf	___awmod@divisor,c
  2401  001232  EC85  F011         	call	___awmod	;wreg free
  2402  001236  0E64               	movlw	100
  2403  001238  241D               	addwf	?___awmod,w,c
  2404  00123A  0100               	movlb	0	; () banked
  2405  00123C  6FF6               	movwf	_hard_speed_timer& (0+255),b
  2406  00123E  0E00               	movlw	0
  2407  001240  201E               	addwfc	?___awmod+1,w,c
  2408  001242  0100               	movlb	0	; () banked
  2409  001244  6FF7               	movwf	(_hard_speed_timer+1)& (0+255),b
  2410                           
  2411                           ;main.c: 231: hard_speed = rand()%2;
  2412  001246  ECA2  F012         	call	_rand	;wreg free
  2413  00124A  0E01               	movlw	1
  2414  00124C  141B               	andwf	?_rand,w,c
  2415  00124E  6E1D               	movwf	___awtoft@c,c
  2416  001250  6A1E               	clrf	___awtoft@c+1,c
  2417  001252  ECEC  F012         	call	___awtoft	;wreg free
  2418  001256  C01D  F0F0         	movff	?___awtoft,_hard_speed
  2419  00125A  C01E  F0F1         	movff	?___awtoft+1,_hard_speed+1
  2420  00125E  C01F  F0F2         	movff	?___awtoft+2,_hard_speed+2
  2421                           
  2422                           ;main.c: 233: current_state = MOVE_HARD;
  2423  001262  0E03               	movlw	3
  2424  001264  0100               	movlb	0	; () banked
  2425  001266  6FD6               	movwf	_current_state& (0+255),b
  2426                           
  2427                           ;main.c: 234: break;
  2428  001268  0012               	return	
  2429  00126A                     l2620:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;main.c: 237: was_released = 0;
  2433  00126A  0E00               	movlw	0
  2434  00126C  0100               	movlb	0	; () banked
  2435  00126E  6FD8               	movwf	_was_released& (0+255),b
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;main.c: 238: buzz(300,100);
  2439  001270  0E2C               	movlw	44
  2440  001272  0100               	movlb	0	; () banked
  2441  001274  6FD9               	movwf	buzz@freq& (0+255),b
  2442  001276  0E01               	movlw	1
  2443  001278  6FDA               	movwf	(buzz@freq+1)& (0+255),b
  2444  00127A  0E00               	movlw	0
  2445  00127C  6FDB               	movwf	(buzz@freq+2)& (0+255),b
  2446  00127E  0E00               	movlw	0
  2447  001280  6FDC               	movwf	(buzz@freq+3)& (0+255),b
  2448  001282  0E00               	movlw	0
  2449  001284  0100               	movlb	0	; () banked
  2450  001286  6FDE               	movwf	(buzz@duration+1)& (0+255),b
  2451  001288  0E64               	movlw	100
  2452  00128A  6FDD               	movwf	buzz@duration& (0+255),b
  2453  00128C  EC48  F00B         	call	_buzz	;wreg free
  2454                           
  2455                           ;main.c: 240: for (char i = 0;i<=16;i++) {
  2456  001290  0E00               	movlw	0
  2457  001292  0100               	movlb	0	; () banked
  2458  001294  6FEF               	movwf	fsm@i_972& (0+255),b
  2459  001296                     l2626:
  2460                           
  2461                           ; BSR set to: 0
  2462  001296  0E10               	movlw	16
  2463  001298  0100               	movlb	0	; () banked
  2464  00129A  65EF               	cpfsgt	fsm@i_972& (0+255),b
  2465  00129C  D001               	goto	l2630
  2466  00129E  D0AA               	goto	l2640
  2467  0012A0                     l2630:
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;main.c: 241: if ((float)position >= ((i-1)*steps_per_led+steps_per_led/2) && (float)pos
      +                          ition <= (i*steps_per_led+steps_per_led/2+1)) {
  2471  0012A0  C0D4  F01D         	movff	_position,___awtoft@c
  2472  0012A4  C0D5  F01E         	movff	_position+1,___awtoft@c+1
  2473  0012A8  ECEC  F012         	call	___awtoft	;wreg free
  2474  0012AC  C01D  F03C         	movff	?___awtoft,___ftge@ff1
  2475  0012B0  C01E  F03D         	movff	?___awtoft+1,___ftge@ff1+1
  2476  0012B4  C01F  F03E         	movff	?___awtoft+2,___ftge@ff1+2
  2477  0012B8  0E00               	movlw	0
  2478  0012BA  6E24               	movwf	___ftdiv@f2,c
  2479  0012BC  0E00               	movlw	0
  2480  0012BE  6E25               	movwf	___ftdiv@f2+1,c
  2481  0012C0  0E40               	movlw	64
  2482  0012C2  6E26               	movwf	___ftdiv@f2+2,c
  2483  0012C4  C0F3  F021         	movff	_steps_per_led,___ftdiv@f1
  2484  0012C8  C0F4  F022         	movff	_steps_per_led+1,___ftdiv@f1+1
  2485  0012CC  C0F5  F023         	movff	_steps_per_led+2,___ftdiv@f1+2
  2486  0012D0  ECD6  F00C         	call	___ftdiv	;wreg free
  2487  0012D4  C021  F033         	movff	?___ftdiv,___ftadd@f2
  2488  0012D8  C022  F034         	movff	?___ftdiv+1,___ftadd@f2+1
  2489  0012DC  C023  F035         	movff	?___ftdiv+2,___ftadd@f2+2
  2490  0012E0  C0F3  F024         	movff	_steps_per_led,___ftmul@f2
  2491  0012E4  C0F4  F025         	movff	_steps_per_led+1,___ftmul@f2+1
  2492  0012E8  C0F5  F026         	movff	_steps_per_led+2,___ftmul@f2+2
  2493  0012EC  0EFF               	movlw	255
  2494  0012EE  0100               	movlb	0	; () banked
  2495  0012F0  25EF               	addwf	fsm@i_972& (0+255),w,b
  2496  0012F2  6E1D               	movwf	___awtoft@c,c
  2497  0012F4  6A1E               	clrf	___awtoft@c+1,c
  2498  0012F6  0EFF               	movlw	255
  2499  0012F8  221E               	addwfc	___awtoft@c+1,f,c
  2500  0012FA  ECEC  F012         	call	___awtoft	;wreg free
  2501  0012FE  C01D  F021         	movff	?___awtoft,___ftmul@f1
  2502  001302  C01E  F022         	movff	?___awtoft+1,___ftmul@f1+1
  2503  001306  C01F  F023         	movff	?___awtoft+2,___ftmul@f1+2
  2504  00130A  EC5C  F00C         	call	___ftmul	;wreg free
  2505  00130E  C021  F030         	movff	?___ftmul,___ftadd@f1
  2506  001312  C022  F031         	movff	?___ftmul+1,___ftadd@f1+1
  2507  001316  C023  F032         	movff	?___ftmul+2,___ftadd@f1+2
  2508  00131A  EC72  F00A         	call	___ftadd	;wreg free
  2509  00131E  C030  F03F         	movff	?___ftadd,___ftge@ff2
  2510  001322  C031  F040         	movff	?___ftadd+1,___ftge@ff2+1
  2511  001326  C032  F041         	movff	?___ftadd+2,___ftge@ff2+2
  2512  00132A  EC3E  F010         	call	___ftge	;wreg free
  2513  00132E  A0D8               	btfss	status,0,c
  2514  001330  D05E               	goto	l2636
  2515  001332  0E00               	movlw	0
  2516  001334  6E24               	movwf	___ftdiv@f2,c
  2517  001336  0E00               	movlw	0
  2518  001338  6E25               	movwf	___ftdiv@f2+1,c
  2519  00133A  0E40               	movlw	64
  2520  00133C  6E26               	movwf	___ftdiv@f2+2,c
  2521  00133E  C0F3  F021         	movff	_steps_per_led,___ftdiv@f1
  2522  001342  C0F4  F022         	movff	_steps_per_led+1,___ftdiv@f1+1
  2523  001346  C0F5  F023         	movff	_steps_per_led+2,___ftdiv@f1+2
  2524  00134A  ECD6  F00C         	call	___ftdiv	;wreg free
  2525  00134E  C021  F033         	movff	?___ftdiv,___ftadd@f2
  2526  001352  C022  F034         	movff	?___ftdiv+1,___ftadd@f2+1
  2527  001356  C023  F035         	movff	?___ftdiv+2,___ftadd@f2+2
  2528  00135A  C0F3  F024         	movff	_steps_per_led,___ftmul@f2
  2529  00135E  C0F4  F025         	movff	_steps_per_led+1,___ftmul@f2+1
  2530  001362  C0F5  F026         	movff	_steps_per_led+2,___ftmul@f2+2
  2531  001366  0100               	movlb	0	; () banked
  2532  001368  51EF               	movf	fsm@i_972& (0+255),w,b
  2533  00136A  EC7D  F013         	call	___lbtoft
  2534  00136E  C017  F021         	movff	?___lbtoft,___ftmul@f1
  2535  001372  C018  F022         	movff	?___lbtoft+1,___ftmul@f1+1
  2536  001376  C019  F023         	movff	?___lbtoft+2,___ftmul@f1+2
  2537  00137A  EC5C  F00C         	call	___ftmul	;wreg free
  2538  00137E  C021  F030         	movff	?___ftmul,___ftadd@f1
  2539  001382  C022  F031         	movff	?___ftmul+1,___ftadd@f1+1
  2540  001386  C023  F032         	movff	?___ftmul+2,___ftadd@f1+2
  2541  00138A  EC72  F00A         	call	___ftadd	;wreg free
  2542  00138E  C030  F0EB         	movff	?___ftadd,_fsm$1627
  2543  001392  C031  F0EC         	movff	?___ftadd+1,_fsm$1627+1
  2544  001396  C032  F0ED         	movff	?___ftadd+2,_fsm$1627+2
  2545  00139A  0E00               	movlw	0
  2546  00139C  6E33               	movwf	___ftadd@f2,c
  2547  00139E  0E80               	movlw	128
  2548  0013A0  6E34               	movwf	___ftadd@f2+1,c
  2549  0013A2  0E3F               	movlw	63
  2550  0013A4  6E35               	movwf	___ftadd@f2+2,c
  2551  0013A6  C0EB  F030         	movff	_fsm$1627,___ftadd@f1
  2552  0013AA  C0EC  F031         	movff	_fsm$1627+1,___ftadd@f1+1
  2553  0013AE  C0ED  F032         	movff	_fsm$1627+2,___ftadd@f1+2
  2554  0013B2  EC72  F00A         	call	___ftadd	;wreg free
  2555  0013B6  C030  F03C         	movff	?___ftadd,___ftge@ff1
  2556  0013BA  C031  F03D         	movff	?___ftadd+1,___ftge@ff1+1
  2557  0013BE  C032  F03E         	movff	?___ftadd+2,___ftge@ff1+2
  2558  0013C2  C0D4  F01D         	movff	_position,___awtoft@c
  2559  0013C6  C0D5  F01E         	movff	_position+1,___awtoft@c+1
  2560  0013CA  ECEC  F012         	call	___awtoft	;wreg free
  2561  0013CE  C01D  F03F         	movff	?___awtoft,___ftge@ff2
  2562  0013D2  C01E  F040         	movff	?___awtoft+1,___ftge@ff2+1
  2563  0013D6  C01F  F041         	movff	?___awtoft+2,___ftge@ff2+2
  2564  0013DA  EC3E  F010         	call	___ftge	;wreg free
  2565  0013DE  A0D8               	btfss	status,0,c
  2566  0013E0  D006               	goto	l2636
  2567                           
  2568                           ;main.c: 242: target = i%16;
  2569  0013E2  0100               	movlb	0	; () banked
  2570  0013E4  51EF               	movf	fsm@i_972& (0+255),w,b
  2571  0013E6  0B0F               	andlw	15
  2572  0013E8  0100               	movlb	0	; () banked
  2573  0013EA  6FD7               	movwf	_target& (0+255),b
  2574                           
  2575                           ;main.c: 243: break;
  2576  0013EC  D003               	goto	l2640
  2577  0013EE                     l2636:
  2578  0013EE  0100               	movlb	0	; () banked
  2579  0013F0  2BEF               	incf	fsm@i_972& (0+255),f,b
  2580  0013F2  D751               	goto	l2626
  2581  0013F4                     l2640:
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;main.c: 244: }
  2585                           ;main.c: 245: }
  2586                           ;main.c: 246: if (LEDs[target] == 0) {
  2587  0013F4  0100               	movlb	0	; () banked
  2588  0013F6  51D7               	movf	_target& (0+255),w,b
  2589  0013F8  0D01               	mullw	1
  2590  0013FA  0EC0               	movlw	low _LEDs
  2591  0013FC  24F3               	addwf	prodl,w,c
  2592  0013FE  6ED9               	movwf	fsr2l,c
  2593  001400  0E00               	movlw	high _LEDs
  2594  001402  20F4               	addwfc	prodh,w,c
  2595  001404  6EDA               	movwf	fsr2h,c
  2596  001406  50DF               	movf	indf2,w,c
  2597  001408  A4D8               	btfss	status,2,c
  2598  00140A  D004               	goto	l2644
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;main.c: 247: current_state = LIGHT_UP;
  2602  00140C  0E07               	movlw	7
  2603  00140E  0100               	movlb	0	; () banked
  2604  001410  6FD6               	movwf	_current_state& (0+255),b
  2605                           
  2606                           ;main.c: 248: }
  2607  001412  0012               	return	
  2608  001414                     l2644:
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;main.c: 249: else current_state = GAME_LOST;
  2612  001414  0E09               	movlw	9
  2613  001416  0100               	movlb	0	; () banked
  2614  001418  6FD6               	movwf	_current_state& (0+255),b
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;main.c: 251: break;
  2618  00141A  0012               	return	
  2619  00141C                     l2646:
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;main.c: 255: setAllLeds(0);
  2623  00141C  0E00               	movlw	0
  2624  00141E  EC33  F013         	call	_setAllLeds
  2625                           
  2626                           ;main.c: 256: buzz(300,100);
  2627  001422  0E2C               	movlw	44
  2628  001424  0100               	movlb	0	; () banked
  2629  001426  6FD9               	movwf	buzz@freq& (0+255),b
  2630  001428  0E01               	movlw	1
  2631  00142A  6FDA               	movwf	(buzz@freq+1)& (0+255),b
  2632  00142C  0E00               	movlw	0
  2633  00142E  6FDB               	movwf	(buzz@freq+2)& (0+255),b
  2634  001430  0E00               	movlw	0
  2635  001432  6FDC               	movwf	(buzz@freq+3)& (0+255),b
  2636  001434  0E00               	movlw	0
  2637  001436  0100               	movlb	0	; () banked
  2638  001438  6FDE               	movwf	(buzz@duration+1)& (0+255),b
  2639  00143A  0E64               	movlw	100
  2640  00143C  6FDD               	movwf	buzz@duration& (0+255),b
  2641  00143E  EC48  F00B         	call	_buzz	;wreg free
  2642                           
  2643                           ;main.c: 257: note_new = 0;
  2644  001442  0E00               	movlw	0
  2645  001444  0100               	movlb	0	; () banked
  2646  001446  6FD1               	movwf	(_note_new+1)& (0+255),b
  2647  001448  0E00               	movlw	0
  2648  00144A  6FD0               	movwf	_note_new& (0+255),b
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;main.c: 259: current_state = NEW_GAME;
  2652  00144C  0E01               	movlw	1
  2653  00144E  0100               	movlb	0	; () banked
  2654  001450  6FD6               	movwf	_current_state& (0+255),b
  2655                           
  2656                           ;main.c: 260: break;
  2657  001452  0012               	return	
  2658  001454                     l2654:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;main.c: 263: note_new = 0;
  2662  001454  0E00               	movlw	0
  2663  001456  0100               	movlb	0	; () banked
  2664  001458  6FD1               	movwf	(_note_new+1)& (0+255),b
  2665  00145A  0E00               	movlw	0
  2666  00145C  6FD0               	movwf	_note_new& (0+255),b
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;main.c: 264: superMario(note_win);
  2670  00145E  C0D2  F045         	movff	_note_win,superMario@index
  2671  001462  C0D3  F046         	movff	_note_win+1,superMario@index+1
  2672  001466  ECCD  F010         	call	_superMario	;wreg free
  2673                           
  2674                           ;main.c: 265: note_win++;
  2675  00146A  0100               	movlb	0	; () banked
  2676  00146C  4BD2               	infsnz	_note_win& (0+255),f,b
  2677  00146E  2BD3               	incf	(_note_win+1)& (0+255),f,b
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;main.c: 266: LATAbits.LATA1 = 0;
  2681  001470  9289               	bcf	3977,1,c	;volatile
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;main.c: 268: if(note_win == last_win_note) {
  2685  001472  0E1D               	movlw	low _last_win_note
  2686  001474  6EF6               	movwf	tblptrl,c
  2687  001476                     	if	1	;There is more than 1 active tblptr byte
  2688  001476  0E10               	movlw	high _last_win_note
  2689  001478  6EF7               	movwf	tblptrh,c
  2690  00147A                     	endif
  2691  00147A                     	if	0	;There are less than 3 active tblptr bytes
  2692  00147A                     	endif
  2693  00147A  0009               	tblrd		*+
  2694  00147C  50F5               	movf	tablat,w,c
  2695  00147E  0100               	movlb	0	; () banked
  2696  001480  19D2               	xorwf	_note_win& (0+255),w,b
  2697  001482  E12F               	bnz	l208
  2698  001484  0009               	tblrd		*+
  2699  001486  50F5               	movf	tablat,w,c
  2700  001488  0100               	movlb	0	; () banked
  2701  00148A  19D3               	xorwf	(_note_win+1)& (0+255),w,b
  2702  00148C  A4D8               	btfss	status,2,c
  2703  00148E  0012               	return	
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;main.c: 269: current_state = NEW_GAME;
  2707  001490  0E01               	movlw	1
  2708  001492  0100               	movlb	0	; () banked
  2709  001494  6FD6               	movwf	_current_state& (0+255),b
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;main.c: 270: }
  2713                           ;main.c: 271: break;
  2714  001496  0012               	return	
  2715  001498                     l2666:
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;main.c: 274: current_state = CALIBRATION;
  2719  001498  0E00               	movlw	0
  2720  00149A  0100               	movlb	0	; () banked
  2721  00149C  6FD6               	movwf	_current_state& (0+255),b
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;main.c: 277: };
  2725                           
  2726                           ;main.c: 275: break;
  2727  00149E  0012               	return	
  2728  0014A0                     l2670:
  2729  0014A0  0100               	movlb	0	; () banked
  2730  0014A2  51D6               	movf	_current_state& (0+255),w,b
  2731                           
  2732                           ; Switch size 1, requested type "space"
  2733                           ; Number of cases is 10, Range of values is 0 to 9
  2734                           ; switch strategies available:
  2735                           ; Name         Instructions Cycles
  2736                           ; simple_byte           31    16 (average)
  2737                           ;	Chosen strategy is simple_byte
  2738  0014A4  0A00               	xorlw	0	; case 0
  2739  0014A6  B4D8               	btfsc	status,2,c
  2740  0014A8  D5BD               	goto	l2512
  2741  0014AA  0A01               	xorlw	1	; case 1
  2742  0014AC  B4D8               	btfsc	status,2,c
  2743  0014AE  D5D4               	goto	l2518
  2744  0014B0  0A03               	xorlw	3	; case 2
  2745  0014B2  B4D8               	btfsc	status,2,c
  2746  0014B4  D60F               	goto	l2546
  2747  0014B6  0A01               	xorlw	1	; case 3
  2748  0014B8  B4D8               	btfsc	status,2,c
  2749  0014BA  D627               	goto	l2558
  2750  0014BC  0A07               	xorlw	7	; case 4
  2751  0014BE  B4D8               	btfsc	status,2,c
  2752  0014C0  D658               	goto	l2578
  2753  0014C2  0A01               	xorlw	1	; case 5
  2754  0014C4  B4D8               	btfsc	status,2,c
  2755  0014C6  D6D1               	goto	l2620
  2756  0014C8  0A03               	xorlw	3	; case 6
  2757  0014CA  B4D8               	btfsc	status,2,c
  2758  0014CC  D695               	goto	l2612
  2759  0014CE  0A01               	xorlw	1	; case 7
  2760  0014D0  B4D8               	btfsc	status,2,c
  2761  0014D2  D65C               	goto	l2586
  2762  0014D4  0A0F               	xorlw	15	; case 8
  2763  0014D6  B4D8               	btfsc	status,2,c
  2764  0014D8  D7BD               	goto	l2654
  2765  0014DA  0A01               	xorlw	1	; case 9
  2766  0014DC  B4D8               	btfsc	status,2,c
  2767  0014DE  D79E               	goto	l2646
  2768  0014E0  D7DB               	goto	l2666
  2769  0014E2                     l208:
  2770  0014E2  0012               	return		;funcret
  2771  0014E4                     __end_of_fsm:
  2772                           	opt stack 0
  2773                           tblptru	equ	0xFF8
  2774                           tblptrh	equ	0xFF7
  2775                           tblptrl	equ	0xFF6
  2776                           tablat	equ	0xFF5
  2777                           prodh	equ	0xFF4
  2778                           prodl	equ	0xFF3
  2779                           intcon	equ	0xFF2
  2780                           postinc0	equ	0xFEE
  2781                           wreg	equ	0xFE8
  2782                           postdec1	equ	0xFE5
  2783                           fsr1l	equ	0xFE1
  2784                           indf2	equ	0xFDF
  2785                           postinc2	equ	0xFDE
  2786                           fsr2h	equ	0xFDA
  2787                           fsr2l	equ	0xFD9
  2788                           status	equ	0xFD8
  2789                           
  2790 ;; *************** function _superMario *****************
  2791 ;; Defined at:
  2792 ;;		line 90 in file "songs.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  index           2   68[COMRAM] unsigned int 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2806 ;;      Params:         2       0       0       0       0       0       0       0       0
  2807 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2808 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2809 ;;      Totals:         2       2       0       0       0       0       0       0       0
  2810 ;;Total ram usage:        4 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    4
  2813 ;; This function calls:
  2814 ;;		___lwdiv
  2815 ;;		_buzz
  2816 ;; This function is called by:
  2817 ;;		_fsm
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text8
  2822  00219A                     __ptext8:
  2823                           	opt stack 0
  2824  00219A                     _superMario:
  2825                           	opt stack 25
  2826                           
  2827                           ;songs.c: 91: buzz(superMarioNotes[index], 1000/superMarioDurations[index]);
  2828                           
  2829                           ;incstack = 0
  2830  00219A  90D8               	bcf	status,0,c
  2831  00219C  3445               	rlcf	superMario@index,w,c
  2832  00219E  6ED9               	movwf	fsr2l,c
  2833  0021A0  3446               	rlcf	superMario@index+1,w,c
  2834  0021A2  6EDA               	movwf	fsr2h,c
  2835  0021A4  0E00               	movlw	low _superMarioNotes
  2836  0021A6  26D9               	addwf	fsr2l,f,c
  2837  0021A8  0E02               	movlw	high _superMarioNotes
  2838  0021AA  22DA               	addwfc	fsr2h,f,c
  2839  0021AC  CFDE F0E9          	movff	postinc2,??_superMario
  2840  0021B0  CFDD F0EA          	movff	postdec2,??_superMario+1
  2841  0021B4  C0E9  F0D9         	movff	??_superMario,buzz@freq
  2842  0021B8  C0EA  F0DA         	movff	??_superMario+1,buzz@freq+1
  2843  0021BC  0100               	movlb	0	; () banked
  2844  0021BE  6BDB               	clrf	(buzz@freq+2)& (0+255),b
  2845  0021C0  6BDC               	clrf	(buzz@freq+3)& (0+255),b
  2846  0021C2  0E03               	movlw	3
  2847  0021C4  6E10               	movwf	___lwdiv@dividend+1,c
  2848  0021C6  0EE8               	movlw	232
  2849  0021C8  6E0F               	movwf	___lwdiv@dividend,c
  2850  0021CA  90D8               	bcf	status,0,c
  2851  0021CC  3445               	rlcf	superMario@index,w,c
  2852  0021CE  6ED9               	movwf	fsr2l,c
  2853  0021D0  3446               	rlcf	superMario@index+1,w,c
  2854  0021D2  6EDA               	movwf	fsr2h,c
  2855  0021D4  0E00               	movlw	low _superMarioDurations
  2856  0021D6  26D9               	addwf	fsr2l,f,c
  2857  0021D8  0E03               	movlw	high _superMarioDurations
  2858  0021DA  22DA               	addwfc	fsr2h,f,c
  2859  0021DC  CFDE F011          	movff	postinc2,___lwdiv@divisor
  2860  0021E0  CFDD F012          	movff	postdec2,___lwdiv@divisor+1
  2861  0021E4  EC79  F012         	call	___lwdiv	;wreg free
  2862  0021E8  C00F  F0DD         	movff	?___lwdiv,buzz@duration
  2863  0021EC  C010  F0DE         	movff	?___lwdiv+1,buzz@duration+1
  2864  0021F0  EC48  F00B         	call	_buzz	;wreg free
  2865                           
  2866                           ;songs.c: 92: buzz(0, 20);
  2867  0021F4  0E00               	movlw	0
  2868  0021F6  0100               	movlb	0	; () banked
  2869  0021F8  6FD9               	movwf	buzz@freq& (0+255),b
  2870  0021FA  0E00               	movlw	0
  2871  0021FC  6FDA               	movwf	(buzz@freq+1)& (0+255),b
  2872  0021FE  0E00               	movlw	0
  2873  002200  6FDB               	movwf	(buzz@freq+2)& (0+255),b
  2874  002202  0E00               	movlw	0
  2875  002204  6FDC               	movwf	(buzz@freq+3)& (0+255),b
  2876  002206  0E00               	movlw	0
  2877  002208  0100               	movlb	0	; () banked
  2878  00220A  6FDE               	movwf	(buzz@duration+1)& (0+255),b
  2879  00220C  0E14               	movlw	20
  2880  00220E  6FDD               	movwf	buzz@duration& (0+255),b
  2881  002210  EC48  F00B         	call	_buzz	;wreg free
  2882  002214  0012               	return		;funcret
  2883  002216                     __end_of_superMario:
  2884                           	opt stack 0
  2885                           tblptru	equ	0xFF8
  2886                           tblptrh	equ	0xFF7
  2887                           tblptrl	equ	0xFF6
  2888                           tablat	equ	0xFF5
  2889                           prodh	equ	0xFF4
  2890                           prodl	equ	0xFF3
  2891                           intcon	equ	0xFF2
  2892                           postinc0	equ	0xFEE
  2893                           wreg	equ	0xFE8
  2894                           postdec1	equ	0xFE5
  2895                           fsr1l	equ	0xFE1
  2896                           indf2	equ	0xFDF
  2897                           postinc2	equ	0xFDE
  2898                           postdec2	equ	0xFDD
  2899                           fsr2h	equ	0xFDA
  2900                           fsr2l	equ	0xFD9
  2901                           status	equ	0xFD8
  2902                           
  2903 ;; *************** function ___lwdiv *****************
  2904 ;; Defined at:
  2905 ;;		line 8 in file "/Applications/microchip/xc8/v1.36/sources/common/lwdiv.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  dividend        2   14[COMRAM] unsigned int 
  2908 ;;  divisor         2   16[COMRAM] unsigned int 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  quotient        2   18[COMRAM] unsigned int 
  2911 ;;  counter         1   20[COMRAM] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  2   14[COMRAM] unsigned int 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2921 ;;      Params:         4       0       0       0       0       0       0       0       0
  2922 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2924 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2925 ;;Total ram usage:        7 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    1
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_superMario
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text9
  2936  0024F2                     __ptext9:
  2937                           	opt stack 0
  2938  0024F2                     ___lwdiv:
  2939                           	opt stack 27
  2940                           
  2941                           ;incstack = 0
  2942  0024F2  0E00               	movlw	0
  2943  0024F4  6E14               	movwf	___lwdiv@quotient+1,c
  2944  0024F6  0E00               	movlw	0
  2945  0024F8  6E13               	movwf	___lwdiv@quotient,c
  2946  0024FA  5011               	movf	___lwdiv@divisor,w,c
  2947  0024FC  1012               	iorwf	___lwdiv@divisor+1,w,c
  2948  0024FE  B4D8               	btfsc	status,2,c
  2949  002500  D01C               	goto	l689
  2950  002502  0E01               	movlw	1
  2951  002504  6E15               	movwf	___lwdiv@counter,c
  2952  002506  D004               	goto	l1976
  2953  002508                     l1974:
  2954  002508  90D8               	bcf	status,0,c
  2955  00250A  3611               	rlcf	___lwdiv@divisor,f,c
  2956  00250C  3612               	rlcf	___lwdiv@divisor+1,f,c
  2957  00250E  2A15               	incf	___lwdiv@counter,f,c
  2958  002510                     l1976:
  2959  002510  AE12               	btfss	___lwdiv@divisor+1,7,c
  2960  002512  D7FA               	goto	l1974
  2961  002514                     l1978:
  2962  002514  90D8               	bcf	status,0,c
  2963  002516  3613               	rlcf	___lwdiv@quotient,f,c
  2964  002518  3614               	rlcf	___lwdiv@quotient+1,f,c
  2965  00251A  5011               	movf	___lwdiv@divisor,w,c
  2966  00251C  5C0F               	subwf	___lwdiv@dividend,w,c
  2967  00251E  5012               	movf	___lwdiv@divisor+1,w,c
  2968  002520  5810               	subwfb	___lwdiv@dividend+1,w,c
  2969  002522  A0D8               	btfss	status,0,c
  2970  002524  D005               	goto	l1986
  2971  002526  5011               	movf	___lwdiv@divisor,w,c
  2972  002528  5E0F               	subwf	___lwdiv@dividend,f,c
  2973  00252A  5012               	movf	___lwdiv@divisor+1,w,c
  2974  00252C  5A10               	subwfb	___lwdiv@dividend+1,f,c
  2975  00252E  8013               	bsf	___lwdiv@quotient,0,c
  2976  002530                     l1986:
  2977  002530  90D8               	bcf	status,0,c
  2978  002532  3212               	rrcf	___lwdiv@divisor+1,f,c
  2979  002534  3211               	rrcf	___lwdiv@divisor,f,c
  2980  002536  2E15               	decfsz	___lwdiv@counter,f,c
  2981  002538  D7ED               	goto	l1978
  2982  00253A                     l689:
  2983  00253A  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  2984  00253E  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2985  002542  0012               	return		;funcret
  2986  002544                     __end_of___lwdiv:
  2987                           	opt stack 0
  2988                           tblptru	equ	0xFF8
  2989                           tblptrh	equ	0xFF7
  2990                           tblptrl	equ	0xFF6
  2991                           tablat	equ	0xFF5
  2992                           prodh	equ	0xFF4
  2993                           prodl	equ	0xFF3
  2994                           intcon	equ	0xFF2
  2995                           postinc0	equ	0xFEE
  2996                           wreg	equ	0xFE8
  2997                           postdec1	equ	0xFE5
  2998                           fsr1l	equ	0xFE1
  2999                           indf2	equ	0xFDF
  3000                           postinc2	equ	0xFDE
  3001                           postdec2	equ	0xFDD
  3002                           fsr2h	equ	0xFDA
  3003                           fsr2l	equ	0xFD9
  3004                           status	equ	0xFD8
  3005                           
  3006 ;; *************** function _stepper_pulse *****************
  3007 ;; Defined at:
  3008 ;;		line 281 in file "main.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  speed           3   66[COMRAM] float 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3022 ;;      Params:         3       0       0       0       0       0       0       0       0
  3023 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3024 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3025 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3026 ;;Total ram usage:        5 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    3
  3029 ;; This function calls:
  3030 ;;		___ftdiv
  3031 ;;		___fttol
  3032 ;;		___lwmod
  3033 ;;		_myDelay_us
  3034 ;; This function is called by:
  3035 ;;		_fsm
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text10
  3040  001A92                     __ptext10:
  3041                           	opt stack 0
  3042  001A92                     _stepper_pulse:
  3043                           	opt stack 26
  3044                           
  3045                           ;main.c: 282: if (stepper_direction > 0)
  3046                           
  3047                           ;incstack = 0
  3048  001A92  BE50               	btfsc	_stepper_direction+1,7,c
  3049  001A94  D007               	goto	l211
  3050  001A96  5050               	movf	_stepper_direction+1,w,c
  3051  001A98  E103               	bnz	u1660
  3052  001A9A  044F               	decf	_stepper_direction,w,c
  3053  001A9C  A0D8               	btfss	status,0,c
  3054  001A9E  D002               	goto	l211
  3055  001AA0                     u1660:
  3056                           
  3057                           ;main.c: 283: LATCbits.LATC7 = 0;
  3058  001AA0  9E8B               	bcf	3979,7,c	;volatile
  3059  001AA2  D001               	goto	l212
  3060  001AA4                     l211:
  3061                           
  3062                           ;main.c: 284: else
  3063                           ;main.c: 285: LATCbits.LATC7 = 1;
  3064  001AA4  8E8B               	bsf	3979,7,c	;volatile
  3065  001AA6                     l212:
  3066                           
  3067                           ;main.c: 287: LATCbits.LATC6 = 1;
  3068  001AA6  8C8B               	bsf	3979,6,c	;volatile
  3069                           
  3070                           ;main.c: 288: myDelay_us((int)(250/speed));
  3071  001AA8  C043  F024         	movff	stepper_pulse@speed,___ftdiv@f2
  3072  001AAC  C044  F025         	movff	stepper_pulse@speed+1,___ftdiv@f2+1
  3073  001AB0  C045  F026         	movff	stepper_pulse@speed+2,___ftdiv@f2+2
  3074  001AB4  0E00               	movlw	0
  3075  001AB6  6E21               	movwf	___ftdiv@f1,c
  3076  001AB8  0E7A               	movlw	122
  3077  001ABA  6E22               	movwf	___ftdiv@f1+1,c
  3078  001ABC  0E43               	movlw	67
  3079  001ABE  6E23               	movwf	___ftdiv@f1+2,c
  3080  001AC0  ECD6  F00C         	call	___ftdiv	;wreg free
  3081  001AC4  C021  F030         	movff	?___ftdiv,___fttol@f1
  3082  001AC8  C022  F031         	movff	?___ftdiv+1,___fttol@f1+1
  3083  001ACC  C023  F032         	movff	?___ftdiv+2,___fttol@f1+2
  3084  001AD0  ECE2  F00B         	call	___fttol	;wreg free
  3085  001AD4  C030  F03F         	movff	?___fttol,myDelay_us@us
  3086  001AD8  C031  F040         	movff	?___fttol+1,myDelay_us@us+1
  3087  001ADC  EC6B  F013         	call	_myDelay_us	;wreg free
  3088                           
  3089                           ;main.c: 289: LATCbits.LATC6 = 0;
  3090  001AE0  9C8B               	bcf	3979,6,c	;volatile
  3091                           
  3092                           ;main.c: 290: myDelay_us((int)(250/speed));
  3093  001AE2  C043  F024         	movff	stepper_pulse@speed,___ftdiv@f2
  3094  001AE6  C044  F025         	movff	stepper_pulse@speed+1,___ftdiv@f2+1
  3095  001AEA  C045  F026         	movff	stepper_pulse@speed+2,___ftdiv@f2+2
  3096  001AEE  0E00               	movlw	0
  3097  001AF0  6E21               	movwf	___ftdiv@f1,c
  3098  001AF2  0E7A               	movlw	122
  3099  001AF4  6E22               	movwf	___ftdiv@f1+1,c
  3100  001AF6  0E43               	movlw	67
  3101  001AF8  6E23               	movwf	___ftdiv@f1+2,c
  3102  001AFA  ECD6  F00C         	call	___ftdiv	;wreg free
  3103  001AFE  C021  F030         	movff	?___ftdiv,___fttol@f1
  3104  001B02  C022  F031         	movff	?___ftdiv+1,___fttol@f1+1
  3105  001B06  C023  F032         	movff	?___ftdiv+2,___fttol@f1+2
  3106  001B0A  ECE2  F00B         	call	___fttol	;wreg free
  3107  001B0E  C030  F03F         	movff	?___fttol,myDelay_us@us
  3108  001B12  C031  F040         	movff	?___fttol+1,myDelay_us@us+1
  3109  001B16  EC6B  F013         	call	_myDelay_us	;wreg free
  3110                           
  3111                           ;main.c: 292: position+= stepper_direction;
  3112  001B1A  504F               	movf	_stepper_direction,w,c
  3113  001B1C  0100               	movlb	0	; () banked
  3114  001B1E  27D4               	addwf	_position& (0+255),f,b
  3115  001B20  5050               	movf	_stepper_direction+1,w,c
  3116  001B22  D00E               	goto	L2
  3117  001B24                     l2020:
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;main.c: 294: position+=total_steps;
  3121  001B24  0E1F               	movlw	low _total_steps
  3122  001B26  6EF6               	movwf	tblptrl,c
  3123  001B28                     	if	1	;There is more than 1 active tblptr byte
  3124  001B28  0E10               	movlw	high _total_steps
  3125  001B2A  6EF7               	movwf	tblptrh,c
  3126  001B2C                     	endif
  3127  001B2C                     	if	0	;There are less than 3 active tblptr bytes
  3128  001B2C                     	endif
  3129  001B2C  0009               	tblrd		*+
  3130  001B2E  CFF5 F046          	movff	tablat,??_stepper_pulse
  3131  001B32  0009               	tblrd		*+
  3132  001B34  CFF5 F047          	movff	tablat,??_stepper_pulse+1
  3133  001B38  5046               	movf	??_stepper_pulse,w,c
  3134  001B3A  0100               	movlb	0	; () banked
  3135  001B3C  27D4               	addwf	_position& (0+255),f,b
  3136  001B3E  5047               	movf	??_stepper_pulse+1,w,c
  3137  001B40                     L2:
  3138  001B40  0100               	movlb	0	; () banked
  3139  001B42  23D5               	addwfc	(_position+1)& (0+255),f,b
  3140                           
  3141                           ; BSR set to: 0
  3142                           
  3143                           ; BSR set to: 0
  3144  001B44  0100               	movlb	0	; () banked
  3145  001B46  BFD5               	btfsc	(_position+1)& (0+255),7,b
  3146  001B48  D7ED               	goto	l2020
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;main.c: 297: position%=total_steps;
  3150                           
  3151                           ; BSR set to: 0
  3152  001B4A  C0D4  F00F         	movff	_position,___lwmod@dividend
  3153  001B4E  C0D5  F010         	movff	_position+1,___lwmod@dividend+1
  3154  001B52  0E1F               	movlw	low _total_steps
  3155  001B54  6EF6               	movwf	tblptrl,c
  3156  001B56                     	if	1	;There is more than 1 active tblptr byte
  3157  001B56  0E10               	movlw	high _total_steps
  3158  001B58  6EF7               	movwf	tblptrh,c
  3159  001B5A                     	endif
  3160  001B5A                     	if	0	;There are less than 3 active tblptr bytes
  3161  001B5A                     	endif
  3162  001B5A  0009               	tblrd		*+
  3163  001B5C  CFF5 F011          	movff	tablat,___lwmod@divisor
  3164  001B60  000A               	tblrd		*-
  3165  001B62  CFF5 F012          	movff	tablat,___lwmod@divisor+1
  3166  001B66  ECCB  F012         	call	___lwmod	;wreg free
  3167  001B6A  C00F  F0D4         	movff	?___lwmod,_position
  3168  001B6E  C010  F0D5         	movff	?___lwmod+1,_position+1
  3169  001B72  0012               	return		;funcret
  3170  001B74                     __end_of_stepper_pulse:
  3171                           	opt stack 0
  3172                           tblptru	equ	0xFF8
  3173                           tblptrh	equ	0xFF7
  3174                           tblptrl	equ	0xFF6
  3175                           tablat	equ	0xFF5
  3176                           prodh	equ	0xFF4
  3177                           prodl	equ	0xFF3
  3178                           intcon	equ	0xFF2
  3179                           postinc0	equ	0xFEE
  3180                           wreg	equ	0xFE8
  3181                           postdec1	equ	0xFE5
  3182                           fsr1l	equ	0xFE1
  3183                           indf2	equ	0xFDF
  3184                           postinc2	equ	0xFDE
  3185                           postdec2	equ	0xFDD
  3186                           fsr2h	equ	0xFDA
  3187                           fsr2l	equ	0xFD9
  3188                           status	equ	0xFD8
  3189                           
  3190 ;; *************** function ___lwmod *****************
  3191 ;; Defined at:
  3192 ;;		line 8 in file "/Applications/microchip/xc8/v1.36/sources/common/lwmod.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  dividend        2   14[COMRAM] unsigned int 
  3195 ;;  divisor         2   16[COMRAM] unsigned int 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  counter         1   18[COMRAM] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  2   14[COMRAM] unsigned int 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3207 ;;      Params:         4       0       0       0       0       0       0       0       0
  3208 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3210 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3211 ;;Total ram usage:        5 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    1
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_fsm
  3218 ;;		_stepper_pulse
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text11
  3223  002596                     __ptext11:
  3224                           	opt stack 0
  3225  002596                     ___lwmod:
  3226                           	opt stack 27
  3227                           
  3228                           ;incstack = 0
  3229  002596  5011               	movf	___lwmod@divisor,w,c
  3230  002598  1012               	iorwf	___lwmod@divisor+1,w,c
  3231  00259A  B4D8               	btfsc	status,2,c
  3232  00259C  D018               	goto	l699
  3233  00259E  0E01               	movlw	1
  3234  0025A0  6E13               	movwf	___lwmod@counter,c
  3235  0025A2  D004               	goto	l1996
  3236  0025A4                     l1994:
  3237  0025A4  90D8               	bcf	status,0,c
  3238  0025A6  3611               	rlcf	___lwmod@divisor,f,c
  3239  0025A8  3612               	rlcf	___lwmod@divisor+1,f,c
  3240  0025AA  2A13               	incf	___lwmod@counter,f,c
  3241  0025AC                     l1996:
  3242  0025AC  AE12               	btfss	___lwmod@divisor+1,7,c
  3243  0025AE  D7FA               	goto	l1994
  3244  0025B0                     l1998:
  3245  0025B0  5011               	movf	___lwmod@divisor,w,c
  3246  0025B2  5C0F               	subwf	___lwmod@dividend,w,c
  3247  0025B4  5012               	movf	___lwmod@divisor+1,w,c
  3248  0025B6  5810               	subwfb	___lwmod@dividend+1,w,c
  3249  0025B8  A0D8               	btfss	status,0,c
  3250  0025BA  D004               	goto	l2002
  3251  0025BC  5011               	movf	___lwmod@divisor,w,c
  3252  0025BE  5E0F               	subwf	___lwmod@dividend,f,c
  3253  0025C0  5012               	movf	___lwmod@divisor+1,w,c
  3254  0025C2  5A10               	subwfb	___lwmod@dividend+1,f,c
  3255  0025C4                     l2002:
  3256  0025C4  90D8               	bcf	status,0,c
  3257  0025C6  3212               	rrcf	___lwmod@divisor+1,f,c
  3258  0025C8  3211               	rrcf	___lwmod@divisor,f,c
  3259  0025CA  2E13               	decfsz	___lwmod@counter,f,c
  3260  0025CC  D7F1               	goto	l1998
  3261  0025CE                     l699:
  3262  0025CE  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  3263  0025D2  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  3264  0025D6  0012               	return		;funcret
  3265  0025D8                     __end_of___lwmod:
  3266                           	opt stack 0
  3267                           tblptru	equ	0xFF8
  3268                           tblptrh	equ	0xFF7
  3269                           tblptrl	equ	0xFF6
  3270                           tablat	equ	0xFF5
  3271                           prodh	equ	0xFF4
  3272                           prodl	equ	0xFF3
  3273                           intcon	equ	0xFF2
  3274                           postinc0	equ	0xFEE
  3275                           wreg	equ	0xFE8
  3276                           postdec1	equ	0xFE5
  3277                           fsr1l	equ	0xFE1
  3278                           indf2	equ	0xFDF
  3279                           postinc2	equ	0xFDE
  3280                           postdec2	equ	0xFDD
  3281                           fsr2h	equ	0xFDA
  3282                           fsr2l	equ	0xFD9
  3283                           status	equ	0xFD8
  3284                           
  3285 ;; *************** function _setAllLeds *****************
  3286 ;; Defined at:
  3287 ;;		line 332 in file "main.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  value           1    wreg     unsigned char 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  value           1   14[COMRAM] unsigned char 
  3292 ;;  i               1   15[COMRAM] unsigned char 
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      void 
  3295 ;; Registers used:
  3296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3302 ;;      Params:         0       0       0       0       0       0       0       0       0
  3303 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3305 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3306 ;;Total ram usage:        2 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    1
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_fsm
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text12
  3317  002666                     __ptext12:
  3318                           	opt stack 0
  3319  002666                     _setAllLeds:
  3320                           	opt stack 28
  3321                           
  3322                           ;incstack = 0
  3323                           ;setAllLeds@value stored from wreg
  3324  002666  6E0F               	movwf	setAllLeds@value,c
  3325                           
  3326                           ;main.c: 333: for(char i = 0; i <= 15; i++)
  3327  002668  0E00               	movlw	0
  3328  00266A  6E10               	movwf	setAllLeds@i,c
  3329  00266C                     l2028:
  3330  00266C  0E0F               	movlw	15
  3331  00266E  6410               	cpfsgt	setAllLeds@i,c
  3332  002670  D001               	goto	l2032
  3333  002672  0012               	return	
  3334  002674                     l2032:
  3335                           
  3336                           ;main.c: 334: LEDs[i] = value;
  3337  002674  5010               	movf	setAllLeds@i,w,c
  3338  002676  0D01               	mullw	1
  3339  002678  0EC0               	movlw	low _LEDs
  3340  00267A  24F3               	addwf	prodl,w,c
  3341  00267C  6ED9               	movwf	fsr2l,c
  3342  00267E  0E00               	movlw	high _LEDs
  3343  002680  20F4               	addwfc	prodh,w,c
  3344  002682  6EDA               	movwf	fsr2h,c
  3345  002684  C00F  FFDF         	movff	setAllLeds@value,indf2
  3346  002688  2A10               	incf	setAllLeds@i,f,c
  3347  00268A  D7F0               	goto	l2028
  3348  00268C                     __end_of_setAllLeds:
  3349                           	opt stack 0
  3350                           tblptru	equ	0xFF8
  3351                           tblptrh	equ	0xFF7
  3352                           tblptrl	equ	0xFF6
  3353                           tablat	equ	0xFF5
  3354                           prodh	equ	0xFF4
  3355                           prodl	equ	0xFF3
  3356                           intcon	equ	0xFF2
  3357                           postinc0	equ	0xFEE
  3358                           wreg	equ	0xFE8
  3359                           postdec1	equ	0xFE5
  3360                           fsr1l	equ	0xFE1
  3361                           indf2	equ	0xFDF
  3362                           postinc2	equ	0xFDE
  3363                           postdec2	equ	0xFDD
  3364                           fsr2h	equ	0xFDA
  3365                           fsr2l	equ	0xFD9
  3366                           status	equ	0xFD8
  3367                           
  3368 ;; *************** function _rand *****************
  3369 ;; Defined at:
  3370 ;;		line 12 in file "/Applications/microchip/xc8/v1.36/sources/common/rand.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;		None
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  2   26[COMRAM] int 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3384 ;;      Params:         2       0       0       0       0       0       0       0       0
  3385 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3387 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3388 ;;Total ram usage:        2 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    2
  3391 ;; This function calls:
  3392 ;;		___lmul
  3393 ;; This function is called by:
  3394 ;;		_fsm
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           	psect	text13
  3399  002544                     __ptext13:
  3400                           	opt stack 0
  3401  002544                     _rand:
  3402                           	opt stack 27
  3403                           
  3404                           ;incstack = 0
  3405  002544  C048  F00F         	movff	_randx,___lmul@multiplier
  3406  002548  C049  F010         	movff	_randx+1,___lmul@multiplier+1
  3407  00254C  C04A  F011         	movff	_randx+2,___lmul@multiplier+2
  3408  002550  C04B  F012         	movff	_randx+3,___lmul@multiplier+3
  3409  002554  0E6D               	movlw	109
  3410  002556  6E13               	movwf	___lmul@multiplicand,c
  3411  002558  0E4E               	movlw	78
  3412  00255A  6E14               	movwf	___lmul@multiplicand+1,c
  3413  00255C  0EC6               	movlw	198
  3414  00255E  6E15               	movwf	___lmul@multiplicand+2,c
  3415  002560  0E41               	movlw	65
  3416  002562  6E16               	movwf	___lmul@multiplicand+3,c
  3417  002564  EC24  F012         	call	___lmul	;wreg free
  3418  002568  C00F  F048         	movff	?___lmul,_randx
  3419  00256C  C010  F049         	movff	?___lmul+1,_randx+1
  3420  002570  C011  F04A         	movff	?___lmul+2,_randx+2
  3421  002574  C012  F04B         	movff	?___lmul+3,_randx+3
  3422  002578  0E39               	movlw	57
  3423  00257A  2648               	addwf	_randx,f,c
  3424  00257C  0E30               	movlw	48
  3425  00257E  2249               	addwfc	_randx+1,f,c
  3426  002580  0E00               	movlw	0
  3427  002582  224A               	addwfc	_randx+2,f,c
  3428  002584  0E00               	movlw	0
  3429  002586  224B               	addwfc	_randx+3,f,c
  3430  002588  0EFF               	movlw	255
  3431  00258A  144A               	andwf	_randx+2,w,c
  3432  00258C  6E1B               	movwf	?_rand,c
  3433  00258E  0E7F               	movlw	127
  3434  002590  144B               	andwf	_randx+3,w,c
  3435  002592  6E1C               	movwf	?_rand+1,c
  3436  002594  0012               	return	
  3437  002596                     __end_of_rand:
  3438                           	opt stack 0
  3439                           tblptru	equ	0xFF8
  3440                           tblptrh	equ	0xFF7
  3441                           tblptrl	equ	0xFF6
  3442                           tablat	equ	0xFF5
  3443                           prodh	equ	0xFF4
  3444                           prodl	equ	0xFF3
  3445                           intcon	equ	0xFF2
  3446                           postinc0	equ	0xFEE
  3447                           wreg	equ	0xFE8
  3448                           postdec1	equ	0xFE5
  3449                           fsr1l	equ	0xFE1
  3450                           indf2	equ	0xFDF
  3451                           postinc2	equ	0xFDE
  3452                           postdec2	equ	0xFDD
  3453                           fsr2h	equ	0xFDA
  3454                           fsr2l	equ	0xFD9
  3455                           status	equ	0xFD8
  3456                           
  3457 ;; *************** function _nothingElseMatters *****************
  3458 ;; Defined at:
  3459 ;;		line 77 in file "songs.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  index           2   68[COMRAM] unsigned int 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;		None
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  1    wreg      void 
  3466 ;; Registers used:
  3467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3473 ;;      Params:         2       0       0       0       0       0       0       0       0
  3474 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3475 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3476 ;;      Totals:         2       2       0       0       0       0       0       0       0
  3477 ;;Total ram usage:        4 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    4
  3480 ;; This function calls:
  3481 ;;		___wmul
  3482 ;;		_buzz
  3483 ;; This function is called by:
  3484 ;;		_fsm
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text14
  3489  002216                     __ptext14:
  3490                           	opt stack 0
  3491  002216                     _nothingElseMatters:
  3492                           	opt stack 25
  3493                           
  3494                           ;songs.c: 78: buzz(nothingElseMattersNotes[index], 70*nothingElseMattersDurations[index]
      +                          );
  3495                           
  3496                           ;incstack = 0
  3497  002216  90D8               	bcf	status,0,c
  3498  002218  3445               	rlcf	nothingElseMatters@index,w,c
  3499  00221A  6ED9               	movwf	fsr2l,c
  3500  00221C  3446               	rlcf	nothingElseMatters@index+1,w,c
  3501  00221E  6EDA               	movwf	fsr2h,c
  3502  002220  0EB4               	movlw	low _nothingElseMattersNotes
  3503  002222  26D9               	addwf	fsr2l,f,c
  3504  002224  0E00               	movlw	high _nothingElseMattersNotes
  3505  002226  22DA               	addwfc	fsr2h,f,c
  3506  002228  CFDE F0E9          	movff	postinc2,??_nothingElseMatters
  3507  00222C  CFDD F0EA          	movff	postdec2,??_nothingElseMatters+1
  3508  002230  C0E9  F0D9         	movff	??_nothingElseMatters,buzz@freq
  3509  002234  C0EA  F0DA         	movff	??_nothingElseMatters+1,buzz@freq+1
  3510  002238  0100               	movlb	0	; () banked
  3511  00223A  6BDB               	clrf	(buzz@freq+2)& (0+255),b
  3512  00223C  6BDC               	clrf	(buzz@freq+3)& (0+255),b
  3513  00223E  90D8               	bcf	status,0,c
  3514  002240  3445               	rlcf	nothingElseMatters@index,w,c
  3515  002242  6ED9               	movwf	fsr2l,c
  3516  002244  3446               	rlcf	nothingElseMatters@index+1,w,c
  3517  002246  6EDA               	movwf	fsr2h,c
  3518  002248  0EA8               	movlw	low _nothingElseMattersDurations
  3519  00224A  26D9               	addwf	fsr2l,f,c
  3520  00224C  0E00               	movlw	high _nothingElseMattersDurations
  3521  00224E  22DA               	addwfc	fsr2h,f,c
  3522  002250  CFDE F00F          	movff	postinc2,___wmul@multiplier
  3523  002254  CFDD F010          	movff	postdec2,___wmul@multiplier+1
  3524  002258  0E00               	movlw	0
  3525  00225A  6E12               	movwf	___wmul@multiplicand+1,c
  3526  00225C  0E46               	movlw	70
  3527  00225E  6E11               	movwf	___wmul@multiplicand,c
  3528  002260  EC46  F013         	call	___wmul	;wreg free
  3529  002264  C00F  F0DD         	movff	?___wmul,buzz@duration
  3530  002268  C010  F0DE         	movff	?___wmul+1,buzz@duration+1
  3531  00226C  EC48  F00B         	call	_buzz	;wreg free
  3532                           
  3533                           ;songs.c: 79: buzz(0, 20);
  3534  002270  0E00               	movlw	0
  3535  002272  0100               	movlb	0	; () banked
  3536  002274  6FD9               	movwf	buzz@freq& (0+255),b
  3537  002276  0E00               	movlw	0
  3538  002278  6FDA               	movwf	(buzz@freq+1)& (0+255),b
  3539  00227A  0E00               	movlw	0
  3540  00227C  6FDB               	movwf	(buzz@freq+2)& (0+255),b
  3541  00227E  0E00               	movlw	0
  3542  002280  6FDC               	movwf	(buzz@freq+3)& (0+255),b
  3543  002282  0E00               	movlw	0
  3544  002284  0100               	movlb	0	; () banked
  3545  002286  6FDE               	movwf	(buzz@duration+1)& (0+255),b
  3546  002288  0E14               	movlw	20
  3547  00228A  6FDD               	movwf	buzz@duration& (0+255),b
  3548  00228C  EC48  F00B         	call	_buzz	;wreg free
  3549  002290  0012               	return		;funcret
  3550  002292                     __end_of_nothingElseMatters:
  3551                           	opt stack 0
  3552                           tblptru	equ	0xFF8
  3553                           tblptrh	equ	0xFF7
  3554                           tblptrl	equ	0xFF6
  3555                           tablat	equ	0xFF5
  3556                           prodh	equ	0xFF4
  3557                           prodl	equ	0xFF3
  3558                           intcon	equ	0xFF2
  3559                           postinc0	equ	0xFEE
  3560                           wreg	equ	0xFE8
  3561                           postdec1	equ	0xFE5
  3562                           fsr1l	equ	0xFE1
  3563                           indf2	equ	0xFDF
  3564                           postinc2	equ	0xFDE
  3565                           postdec2	equ	0xFDD
  3566                           fsr2h	equ	0xFDA
  3567                           fsr2l	equ	0xFD9
  3568                           status	equ	0xFD8
  3569                           
  3570 ;; *************** function _buzz *****************
  3571 ;; Defined at:
  3572 ;;		line 26 in file "songs.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  freq            4    0[BANK0 ] long 
  3575 ;;  duration        2    4[BANK0 ] unsigned int 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;  i               4   10[BANK0 ] long 
  3578 ;;  repeats         4    6[BANK0 ] long 
  3579 ;;  halfPeriod      2   14[BANK0 ] unsigned int 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3589 ;;      Params:         0       6       0       0       0       0       0       0       0
  3590 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3591 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3592 ;;      Totals:         2      16       0       0       0       0       0       0       0
  3593 ;;Total ram usage:       18 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:    3
  3596 ;; This function calls:
  3597 ;;		___aldiv
  3598 ;;		___altoft
  3599 ;;		___ftdiv
  3600 ;;		___fttol
  3601 ;;		___lmul
  3602 ;;		_myDelay_ms
  3603 ;;		_myDelay_us
  3604 ;; This function is called by:
  3605 ;;		_fsm
  3606 ;;		_nothingElseMatters
  3607 ;;		_superMario
  3608 ;;		_starWars
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text15
  3613  001690                     __ptext15:
  3614                           	opt stack 0
  3615  001690                     _buzz:
  3616                           	opt stack 25
  3617                           
  3618                           ;songs.c: 28: if (freq==0) {
  3619                           
  3620                           ;incstack = 0
  3621  001690  0100               	movlb	0	; () banked
  3622  001692  51D9               	movf	buzz@freq& (0+255),w,b
  3623  001694  0100               	movlb	0	; () banked
  3624  001696  11DA               	iorwf	(buzz@freq+1)& (0+255),w,b
  3625  001698  0100               	movlb	0	; () banked
  3626  00169A  11DB               	iorwf	(buzz@freq+2)& (0+255),w,b
  3627  00169C  0100               	movlb	0	; () banked
  3628  00169E  11DC               	iorwf	(buzz@freq+3)& (0+255),w,b
  3629  0016A0  A4D8               	btfss	status,2,c
  3630  0016A2  D007               	goto	l2490
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;songs.c: 29: myDelay_ms(duration);
  3634  0016A4  C0DD  F00F         	movff	buzz@duration,myDelay_ms@ms
  3635  0016A8  C0DE  F010         	movff	buzz@duration+1,myDelay_ms@ms+1
  3636  0016AC  EC08  F013         	call	_myDelay_ms	;wreg free
  3637                           
  3638                           ;songs.c: 30: return;
  3639  0016B0  0012               	return	
  3640  0016B2                     l2490:
  3641                           
  3642                           ;songs.c: 31: }
  3643                           ;songs.c: 32: unsigned int halfPeriod = 1e6 / 2 / freq;
  3644  0016B2  C0D9  F017         	movff	buzz@freq,___altoft@c
  3645  0016B6  C0DA  F018         	movff	buzz@freq+1,___altoft@c+1
  3646  0016BA  C0DB  F019         	movff	buzz@freq+2,___altoft@c+2
  3647  0016BE  C0DC  F01A         	movff	buzz@freq+3,___altoft@c+3
  3648  0016C2  EC49  F011         	call	___altoft	;wreg free
  3649  0016C6  C017  F024         	movff	?___altoft,___ftdiv@f2
  3650  0016CA  C018  F025         	movff	?___altoft+1,___ftdiv@f2+1
  3651  0016CE  C019  F026         	movff	?___altoft+2,___ftdiv@f2+2
  3652  0016D2  0E24               	movlw	36
  3653  0016D4  6E21               	movwf	___ftdiv@f1,c
  3654  0016D6  0EF4               	movlw	244
  3655  0016D8  6E22               	movwf	___ftdiv@f1+1,c
  3656  0016DA  0E48               	movlw	72
  3657  0016DC  6E23               	movwf	___ftdiv@f1+2,c
  3658  0016DE  ECD6  F00C         	call	___ftdiv	;wreg free
  3659  0016E2  C021  F030         	movff	?___ftdiv,___fttol@f1
  3660  0016E6  C022  F031         	movff	?___ftdiv+1,___fttol@f1+1
  3661  0016EA  C023  F032         	movff	?___ftdiv+2,___fttol@f1+2
  3662  0016EE  ECE2  F00B         	call	___fttol	;wreg free
  3663  0016F2  C030  F0E7         	movff	?___fttol,buzz@halfPeriod
  3664  0016F6  C031  F0E8         	movff	?___fttol+1,buzz@halfPeriod+1
  3665                           
  3666                           ;songs.c: 33: long repeats = (long)duration *1000 / (2 * halfPeriod);
  3667  0016FA  C0DD  F00F         	movff	buzz@duration,___lmul@multiplier
  3668  0016FE  C0DE  F010         	movff	buzz@duration+1,___lmul@multiplier+1
  3669  001702  6A11               	clrf	___lmul@multiplier+2,c
  3670  001704  6A12               	clrf	___lmul@multiplier+3,c
  3671  001706  0EE8               	movlw	232
  3672  001708  6E13               	movwf	___lmul@multiplicand,c
  3673  00170A  0E03               	movlw	3
  3674  00170C  6E14               	movwf	___lmul@multiplicand+1,c
  3675  00170E  0E00               	movlw	0
  3676  001710  6E15               	movwf	___lmul@multiplicand+2,c
  3677  001712  0E00               	movlw	0
  3678  001714  6E16               	movwf	___lmul@multiplicand+3,c
  3679  001716  EC24  F012         	call	___lmul	;wreg free
  3680  00171A  C00F  F01B         	movff	?___lmul,___aldiv@dividend
  3681  00171E  C010  F01C         	movff	?___lmul+1,___aldiv@dividend+1
  3682  001722  C011  F01D         	movff	?___lmul+2,___aldiv@dividend+2
  3683  001726  C012  F01E         	movff	?___lmul+3,___aldiv@dividend+3
  3684  00172A  C0E7  F043         	movff	buzz@halfPeriod,??_buzz
  3685  00172E  C0E8  F044         	movff	buzz@halfPeriod+1,??_buzz+1
  3686  001732  90D8               	bcf	status,0,c
  3687  001734  3643               	rlcf	??_buzz,f,c
  3688  001736  3644               	rlcf	??_buzz+1,f,c
  3689  001738  C043  F01F         	movff	??_buzz,___aldiv@divisor
  3690  00173C  C044  F020         	movff	??_buzz+1,___aldiv@divisor+1
  3691  001740  6A21               	clrf	___aldiv@divisor+2,c
  3692  001742  6A22               	clrf	___aldiv@divisor+3,c
  3693  001744  EC24  F00E         	call	___aldiv	;wreg free
  3694  001748  C01B  F0DF         	movff	?___aldiv,buzz@repeats
  3695  00174C  C01C  F0E0         	movff	?___aldiv+1,buzz@repeats+1
  3696  001750  C01D  F0E1         	movff	?___aldiv+2,buzz@repeats+2
  3697  001754  C01E  F0E2         	movff	?___aldiv+3,buzz@repeats+3
  3698                           
  3699                           ;songs.c: 34: for (long i=0; i<repeats; i++) {
  3700  001758  0E00               	movlw	0
  3701  00175A  0100               	movlb	0	; () banked
  3702  00175C  6FE3               	movwf	buzz@i& (0+255),b
  3703  00175E  0E00               	movlw	0
  3704  001760  6FE4               	movwf	(buzz@i+1)& (0+255),b
  3705  001762  0E00               	movlw	0
  3706  001764  6FE5               	movwf	(buzz@i+2)& (0+255),b
  3707  001766  0E00               	movlw	0
  3708  001768  6FE6               	movwf	(buzz@i+3)& (0+255),b
  3709  00176A  D015               	goto	l2500
  3710  00176C                     l273:
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;songs.c: 35: LATAbits.LATA3 = 1;
  3714  00176C  8689               	bsf	3977,3,c	;volatile
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;songs.c: 36: myDelay_us(halfPeriod);
  3718  00176E  C0E7  F03F         	movff	buzz@halfPeriod,myDelay_us@us
  3719  001772  C0E8  F040         	movff	buzz@halfPeriod+1,myDelay_us@us+1
  3720  001776  EC6B  F013         	call	_myDelay_us	;wreg free
  3721                           
  3722                           ;songs.c: 38: LATAbits.LATA3 = 0;
  3723  00177A  9689               	bcf	3977,3,c	;volatile
  3724                           
  3725                           ;songs.c: 39: myDelay_us(halfPeriod);
  3726  00177C  C0E7  F03F         	movff	buzz@halfPeriod,myDelay_us@us
  3727  001780  C0E8  F040         	movff	buzz@halfPeriod+1,myDelay_us@us+1
  3728  001784  EC6B  F013         	call	_myDelay_us	;wreg free
  3729  001788  0E01               	movlw	1
  3730  00178A  0100               	movlb	0	; () banked
  3731  00178C  27E3               	addwf	buzz@i& (0+255),f,b
  3732  00178E  0E00               	movlw	0
  3733  001790  23E4               	addwfc	(buzz@i+1)& (0+255),f,b
  3734  001792  23E5               	addwfc	(buzz@i+2)& (0+255),f,b
  3735  001794  23E6               	addwfc	(buzz@i+3)& (0+255),f,b
  3736  001796                     l2500:
  3737                           
  3738                           ; BSR set to: 0
  3739  001796  0100               	movlb	0	; () banked
  3740  001798  51DF               	movf	buzz@repeats& (0+255),w,b
  3741  00179A  0100               	movlb	0	; () banked
  3742  00179C  5DE3               	subwf	buzz@i& (0+255),w,b
  3743  00179E  0100               	movlb	0	; () banked
  3744  0017A0  51E0               	movf	(buzz@repeats+1)& (0+255),w,b
  3745  0017A2  0100               	movlb	0	; () banked
  3746  0017A4  59E4               	subwfb	(buzz@i+1)& (0+255),w,b
  3747  0017A6  0100               	movlb	0	; () banked
  3748  0017A8  51E1               	movf	(buzz@repeats+2)& (0+255),w,b
  3749  0017AA  0100               	movlb	0	; () banked
  3750  0017AC  59E5               	subwfb	(buzz@i+2)& (0+255),w,b
  3751  0017AE  0100               	movlb	0	; () banked
  3752  0017B0  51E6               	movf	(buzz@i+3)& (0+255),w,b
  3753  0017B2  0A80               	xorlw	128
  3754  0017B4  6E43               	movwf	??_buzz& (0+255),c
  3755  0017B6  0100               	movlb	0	; () banked
  3756  0017B8  51E2               	movf	(buzz@repeats+3)& (0+255),w,b
  3757  0017BA  0A80               	xorlw	128
  3758  0017BC  5843               	subwfb	??_buzz& (0+255),w,c
  3759  0017BE  B0D8               	btfsc	status,0,c
  3760  0017C0  0012               	return	
  3761  0017C2  D7D4               	goto	l273
  3762  0017C4                     __end_of_buzz:
  3763                           	opt stack 0
  3764                           tblptru	equ	0xFF8
  3765                           tblptrh	equ	0xFF7
  3766                           tblptrl	equ	0xFF6
  3767                           tablat	equ	0xFF5
  3768                           prodh	equ	0xFF4
  3769                           prodl	equ	0xFF3
  3770                           intcon	equ	0xFF2
  3771                           postinc0	equ	0xFEE
  3772                           wreg	equ	0xFE8
  3773                           postdec1	equ	0xFE5
  3774                           fsr1l	equ	0xFE1
  3775                           indf2	equ	0xFDF
  3776                           postinc2	equ	0xFDE
  3777                           postdec2	equ	0xFDD
  3778                           fsr2h	equ	0xFDA
  3779                           fsr2l	equ	0xFD9
  3780                           status	equ	0xFD8
  3781                           
  3782 ;; *************** function _myDelay_us *****************
  3783 ;; Defined at:
  3784 ;;		line 13 in file "songs.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;  us              2   62[COMRAM] unsigned int 
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;  i               2   64[COMRAM] unsigned int 
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  1    wreg      void 
  3791 ;; Registers used:
  3792 ;;		wreg, status,2, status,0
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3798 ;;      Params:         2       0       0       0       0       0       0       0       0
  3799 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3801 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3802 ;;Total ram usage:        4 bytes
  3803 ;; Hardware stack levels used:    1
  3804 ;; Hardware stack levels required when called:    1
  3805 ;; This function calls:
  3806 ;;		Nothing
  3807 ;; This function is called by:
  3808 ;;		_stepper_pulse
  3809 ;;		_go_through_cols
  3810 ;;		_buzz
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text16
  3815  0026D6                     __ptext16:
  3816                           	opt stack 0
  3817  0026D6                     _myDelay_us:
  3818                           	opt stack 27
  3819                           
  3820                           ;songs.c: 15: for (unsigned int i=0; i<us; i++)
  3821                           
  3822                           ;incstack = 0
  3823  0026D6  0E00               	movlw	0
  3824  0026D8  6E42               	movwf	myDelay_us@i+1,c
  3825  0026DA  0E00               	movlw	0
  3826  0026DC  6E41               	movwf	myDelay_us@i,c
  3827  0026DE  D006               	goto	l258
  3828  0026E0                     l1762:
  3829                           
  3830                           ;songs.c: 16: _delay((unsigned long)((1)*(47000000/4000000.0)));
  3831  0026E0  0E03               	movlw	3
  3832  0026E2                     u2717:
  3833  0026E2  2EE8               	decfsz	wreg,f,c
  3834  0026E4  D7FE               	goto	u2717
  3835  0026E6  D000               	nop2		;nop
  3836  0026E8  4A41               	infsnz	myDelay_us@i,f,c
  3837  0026EA  2A42               	incf	myDelay_us@i+1,f,c
  3838  0026EC                     l258:
  3839  0026EC  503F               	movf	myDelay_us@us,w,c
  3840  0026EE  5C41               	subwf	myDelay_us@i,w,c
  3841  0026F0  5040               	movf	myDelay_us@us+1,w,c
  3842  0026F2  5842               	subwfb	myDelay_us@i+1,w,c
  3843  0026F4  B0D8               	btfsc	status,0,c
  3844  0026F6  0012               	return	
  3845  0026F8  D7F3               	goto	l1762
  3846  0026FA                     __end_of_myDelay_us:
  3847                           	opt stack 0
  3848                           tblptru	equ	0xFF8
  3849                           tblptrh	equ	0xFF7
  3850                           tblptrl	equ	0xFF6
  3851                           tablat	equ	0xFF5
  3852                           prodh	equ	0xFF4
  3853                           prodl	equ	0xFF3
  3854                           intcon	equ	0xFF2
  3855                           postinc0	equ	0xFEE
  3856                           wreg	equ	0xFE8
  3857                           postdec1	equ	0xFE5
  3858                           fsr1l	equ	0xFE1
  3859                           indf2	equ	0xFDF
  3860                           postinc2	equ	0xFDE
  3861                           postdec2	equ	0xFDD
  3862                           fsr2h	equ	0xFDA
  3863                           fsr2l	equ	0xFD9
  3864                           status	equ	0xFD8
  3865                           
  3866 ;; *************** function _myDelay_ms *****************
  3867 ;; Defined at:
  3868 ;;		line 19 in file "songs.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  ms              2   14[COMRAM] unsigned int 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  i               2   17[COMRAM] unsigned int 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3882 ;;      Params:         2       0       0       0       0       0       0       0       0
  3883 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3884 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3885 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3886 ;;Total ram usage:        5 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    1
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_buzz
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text17
  3897  002610                     __ptext17:
  3898                           	opt stack 0
  3899  002610                     _myDelay_ms:
  3900                           	opt stack 26
  3901                           
  3902                           ;songs.c: 21: for (unsigned int i=0; i<ms; i++)
  3903                           
  3904                           ;incstack = 0
  3905  002610  0E00               	movlw	0
  3906  002612  6E13               	movwf	myDelay_ms@i+1,c
  3907  002614  0E00               	movlw	0
  3908  002616  6E12               	movwf	myDelay_ms@i,c
  3909  002618  D00A               	goto	l264
  3910  00261A                     l1768:
  3911                           
  3912                           ;songs.c: 22: _delay((unsigned long)((1)*(47000000/4000.0)));
  3913  00261A  0E10               	movlw	16
  3914  00261C  6E11               	movwf	??_myDelay_ms& (0+255),c
  3915  00261E  0E41               	movlw	65
  3916  002620                     u2727:
  3917  002620  2EE8               	decfsz	wreg,f,c
  3918  002622  D7FE               	goto	u2727
  3919  002624  2E11               	decfsz	??_myDelay_ms& (0+255),f,c
  3920  002626  D7FC               	goto	u2727
  3921  002628  F000               	nop	
  3922  00262A  4A12               	infsnz	myDelay_ms@i,f,c
  3923  00262C  2A13               	incf	myDelay_ms@i+1,f,c
  3924  00262E                     l264:
  3925  00262E  500F               	movf	myDelay_ms@ms,w,c
  3926  002630  5C12               	subwf	myDelay_ms@i,w,c
  3927  002632  5010               	movf	myDelay_ms@ms+1,w,c
  3928  002634  5813               	subwfb	myDelay_ms@i+1,w,c
  3929  002636  B0D8               	btfsc	status,0,c
  3930  002638  0012               	return	
  3931  00263A  D7EF               	goto	l1768
  3932  00263C                     __end_of_myDelay_ms:
  3933                           	opt stack 0
  3934                           tblptru	equ	0xFF8
  3935                           tblptrh	equ	0xFF7
  3936                           tblptrl	equ	0xFF6
  3937                           tablat	equ	0xFF5
  3938                           prodh	equ	0xFF4
  3939                           prodl	equ	0xFF3
  3940                           intcon	equ	0xFF2
  3941                           postinc0	equ	0xFEE
  3942                           wreg	equ	0xFE8
  3943                           postdec1	equ	0xFE5
  3944                           fsr1l	equ	0xFE1
  3945                           indf2	equ	0xFDF
  3946                           postinc2	equ	0xFDE
  3947                           postdec2	equ	0xFDD
  3948                           fsr2h	equ	0xFDA
  3949                           fsr2l	equ	0xFD9
  3950                           status	equ	0xFD8
  3951                           
  3952 ;; *************** function ___lmul *****************
  3953 ;; Defined at:
  3954 ;;		line 15 in file "/Applications/microchip/xc8/v1.36/sources/common/Umul32.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  multiplier      4   14[COMRAM] unsigned long 
  3957 ;;  multiplicand    4   18[COMRAM] unsigned long 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  product         4   22[COMRAM] unsigned long 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  4   14[COMRAM] unsigned long 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3969 ;;      Params:         8       0       0       0       0       0       0       0       0
  3970 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3972 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3973 ;;Total ram usage:       12 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    1
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_buzz
  3980 ;;		_rand
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text18
  3985  002448                     __ptext18:
  3986                           	opt stack 0
  3987  002448                     ___lmul:
  3988                           	opt stack 26
  3989                           
  3990                           ;incstack = 0
  3991  002448  0E00               	movlw	0
  3992  00244A  6E17               	movwf	___lmul@product,c
  3993  00244C  0E00               	movlw	0
  3994  00244E  6E18               	movwf	___lmul@product+1,c
  3995  002450  0E00               	movlw	0
  3996  002452  6E19               	movwf	___lmul@product+2,c
  3997  002454  0E00               	movlw	0
  3998  002456  6E1A               	movwf	___lmul@product+3,c
  3999  002458                     l1774:
  4000  002458  A00F               	btfss	___lmul@multiplier,0,c
  4001  00245A  D008               	goto	l1778
  4002  00245C  5013               	movf	___lmul@multiplicand,w,c
  4003  00245E  2617               	addwf	___lmul@product,f,c
  4004  002460  5014               	movf	___lmul@multiplicand+1,w,c
  4005  002462  2218               	addwfc	___lmul@product+1,f,c
  4006  002464  5015               	movf	___lmul@multiplicand+2,w,c
  4007  002466  2219               	addwfc	___lmul@product+2,f,c
  4008  002468  5016               	movf	___lmul@multiplicand+3,w,c
  4009  00246A  221A               	addwfc	___lmul@product+3,f,c
  4010  00246C                     l1778:
  4011  00246C  90D8               	bcf	status,0,c
  4012  00246E  3613               	rlcf	___lmul@multiplicand,f,c
  4013  002470  3614               	rlcf	___lmul@multiplicand+1,f,c
  4014  002472  3615               	rlcf	___lmul@multiplicand+2,f,c
  4015  002474  3616               	rlcf	___lmul@multiplicand+3,f,c
  4016  002476  90D8               	bcf	status,0,c
  4017  002478  3212               	rrcf	___lmul@multiplier+3,f,c
  4018  00247A  3211               	rrcf	___lmul@multiplier+2,f,c
  4019  00247C  3210               	rrcf	___lmul@multiplier+1,f,c
  4020  00247E  320F               	rrcf	___lmul@multiplier,f,c
  4021  002480  500F               	movf	___lmul@multiplier,w,c
  4022  002482  1010               	iorwf	___lmul@multiplier+1,w,c
  4023  002484  1011               	iorwf	___lmul@multiplier+2,w,c
  4024  002486  1012               	iorwf	___lmul@multiplier+3,w,c
  4025  002488  A4D8               	btfss	status,2,c
  4026  00248A  D7E6               	goto	l1774
  4027  00248C  C017  F00F         	movff	___lmul@product,?___lmul
  4028  002490  C018  F010         	movff	___lmul@product+1,?___lmul+1
  4029  002494  C019  F011         	movff	___lmul@product+2,?___lmul+2
  4030  002498  C01A  F012         	movff	___lmul@product+3,?___lmul+3
  4031  00249C  0012               	return		;funcret
  4032  00249E                     __end_of___lmul:
  4033                           	opt stack 0
  4034                           tblptru	equ	0xFF8
  4035                           tblptrh	equ	0xFF7
  4036                           tblptrl	equ	0xFF6
  4037                           tablat	equ	0xFF5
  4038                           prodh	equ	0xFF4
  4039                           prodl	equ	0xFF3
  4040                           intcon	equ	0xFF2
  4041                           postinc0	equ	0xFEE
  4042                           wreg	equ	0xFE8
  4043                           postdec1	equ	0xFE5
  4044                           fsr1l	equ	0xFE1
  4045                           indf2	equ	0xFDF
  4046                           postinc2	equ	0xFDE
  4047                           postdec2	equ	0xFDD
  4048                           fsr2h	equ	0xFDA
  4049                           fsr2l	equ	0xFD9
  4050                           status	equ	0xFD8
  4051                           
  4052 ;; *************** function ___fttol *****************
  4053 ;; Defined at:
  4054 ;;		line 44 in file "/Applications/microchip/xc8/v1.36/sources/common/fttol.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  f1              3   47[COMRAM] float 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  lval            4   57[COMRAM] unsigned long 
  4059 ;;  exp1            1   61[COMRAM] unsigned char 
  4060 ;;  sign1           1   56[COMRAM] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  4   47[COMRAM] long 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4070 ;;      Params:         4       0       0       0       0       0       0       0       0
  4071 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4072 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4073 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4074 ;;Total ram usage:       15 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    1
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_stepper_pulse
  4081 ;;		_buzz
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           	psect	text19
  4086  0017C4                     __ptext19:
  4087                           	opt stack 0
  4088  0017C4                     ___fttol:
  4089                           	opt stack 26
  4090                           
  4091                           ;incstack = 0
  4092  0017C4  C032  F034         	movff	___fttol@f1+2,??___fttol
  4093  0017C8  6A35               	clrf	(??___fttol+1)& (0+255),c
  4094  0017CA  6A36               	clrf	(??___fttol+2)& (0+255),c
  4095  0017CC  3431               	rlcf	___fttol@f1+1,w,c
  4096  0017CE  3634               	rlcf	??___fttol& (0+255),f,c
  4097  0017D0  E301               	bnc	u1491
  4098  0017D2  8035               	bsf	(??___fttol+1)& (0+255),0,c
  4099  0017D4                     u1491:
  4100  0017D4  5034               	movf	??___fttol,w,c
  4101  0017D6  6E3E               	movwf	___fttol@exp1,c
  4102  0017D8  503E               	movf	___fttol@exp1,w,c
  4103  0017DA  A4D8               	btfss	status,2,c
  4104  0017DC  D009               	goto	l1894
  4105  0017DE  0E00               	movlw	0
  4106  0017E0  6E30               	movwf	?___fttol,c
  4107  0017E2  0E00               	movlw	0
  4108  0017E4  6E31               	movwf	?___fttol+1,c
  4109  0017E6  0E00               	movlw	0
  4110  0017E8  6E32               	movwf	?___fttol+2,c
  4111  0017EA  0E00               	movlw	0
  4112  0017EC  6E33               	movwf	?___fttol+3,c
  4113  0017EE  0012               	return	
  4114  0017F0                     l1894:
  4115  0017F0  0E17               	movlw	23
  4116  0017F2  6E34               	movwf	??___fttol& (0+255),c
  4117  0017F4  C030  F035         	movff	___fttol@f1,??___fttol+1
  4118  0017F8  C031  F036         	movff	___fttol@f1+1,??___fttol+2
  4119  0017FC  C032  F037         	movff	___fttol@f1+2,??___fttol+3
  4120  001800  2834               	incf	??___fttol,w,c
  4121  001802  6E38               	movwf	(??___fttol+4)& (0+255),c
  4122  001804  D004               	goto	u1510
  4123  001806                     u1515:
  4124  001806  90D8               	bcf	status,0,c
  4125  001808  3237               	rrcf	??___fttol+3,f,c
  4126  00180A  3236               	rrcf	??___fttol+2,f,c
  4127  00180C  3235               	rrcf	??___fttol+1,f,c
  4128  00180E                     u1510:
  4129  00180E  2E38               	decfsz	(??___fttol+4)& (0+255),f,c
  4130  001810  D7FA               	goto	u1515
  4131  001812  5035               	movf	??___fttol+1,w,c
  4132  001814  6E39               	movwf	___fttol@sign1,c
  4133  001816  8E31               	bsf	___fttol@f1+1,7,c
  4134  001818  0EFF               	movlw	255
  4135  00181A  1630               	andwf	___fttol@f1,f,c
  4136  00181C  0EFF               	movlw	255
  4137  00181E  1631               	andwf	___fttol@f1+1,f,c
  4138  001820  0E00               	movlw	0
  4139  001822  1632               	andwf	___fttol@f1+2,f,c
  4140  001824  5030               	movf	___fttol@f1,w,c
  4141  001826  6E3A               	movwf	___fttol@lval,c
  4142  001828  5031               	movf	___fttol@f1+1,w,c
  4143  00182A  6E3B               	movwf	___fttol@lval+1,c
  4144  00182C  5032               	movf	___fttol@f1+2,w,c
  4145  00182E  6E3C               	movwf	___fttol@lval+2,c
  4146  001830  6A3D               	clrf	___fttol@lval+3,c
  4147  001832  0E8E               	movlw	142
  4148  001834  5E3E               	subwf	___fttol@exp1,f,c
  4149  001836  AE3E               	btfss	___fttol@exp1,7,c
  4150  001838  D016               	goto	l1916
  4151  00183A  503E               	movf	___fttol@exp1,w,c
  4152  00183C  0A80               	xorlw	128
  4153  00183E  0F8F               	addlw	143
  4154  001840  B0D8               	btfsc	status,0,c
  4155  001842  D009               	goto	l1912
  4156  001844  0E00               	movlw	0
  4157  001846  6E30               	movwf	?___fttol,c
  4158  001848  0E00               	movlw	0
  4159  00184A  6E31               	movwf	?___fttol+1,c
  4160  00184C  0E00               	movlw	0
  4161  00184E  6E32               	movwf	?___fttol+2,c
  4162  001850  0E00               	movlw	0
  4163  001852  6E33               	movwf	?___fttol+3,c
  4164  001854  0012               	return	
  4165  001856                     l1912:
  4166  001856  90D8               	bcf	status,0,c
  4167  001858  323D               	rrcf	___fttol@lval+3,f,c
  4168  00185A  323C               	rrcf	___fttol@lval+2,f,c
  4169  00185C  323B               	rrcf	___fttol@lval+1,f,c
  4170  00185E  323A               	rrcf	___fttol@lval,f,c
  4171  001860  3E3E               	incfsz	___fttol@exp1,f,c
  4172  001862  D7F9               	goto	l1912
  4173  001864  D015               	goto	l1926
  4174  001866                     l1916:
  4175  001866  0E17               	movlw	23
  4176  001868  643E               	cpfsgt	___fttol@exp1,c
  4177  00186A  D00F               	goto	l1924
  4178  00186C  0E00               	movlw	0
  4179  00186E  6E30               	movwf	?___fttol,c
  4180  001870  0E00               	movlw	0
  4181  001872  6E31               	movwf	?___fttol+1,c
  4182  001874  0E00               	movlw	0
  4183  001876  6E32               	movwf	?___fttol+2,c
  4184  001878  0E00               	movlw	0
  4185  00187A  6E33               	movwf	?___fttol+3,c
  4186  00187C  0012               	return	
  4187  00187E                     l1922:
  4188  00187E  90D8               	bcf	status,0,c
  4189  001880  363A               	rlcf	___fttol@lval,f,c
  4190  001882  363B               	rlcf	___fttol@lval+1,f,c
  4191  001884  363C               	rlcf	___fttol@lval+2,f,c
  4192  001886  363D               	rlcf	___fttol@lval+3,f,c
  4193  001888  063E               	decf	___fttol@exp1,f,c
  4194  00188A                     l1924:
  4195  00188A  503E               	movf	___fttol@exp1,w,c
  4196  00188C  A4D8               	btfss	status,2,c
  4197  00188E  D7F7               	goto	l1922
  4198  001890                     l1926:
  4199  001890  5039               	movf	___fttol@sign1,w,c
  4200  001892  B4D8               	btfsc	status,2,c
  4201  001894  D008               	goto	l1930
  4202  001896  1E3D               	comf	___fttol@lval+3,f,c
  4203  001898  1E3C               	comf	___fttol@lval+2,f,c
  4204  00189A  1E3B               	comf	___fttol@lval+1,f,c
  4205  00189C  6C3A               	negf	___fttol@lval,c
  4206  00189E  0E00               	movlw	0
  4207  0018A0  223B               	addwfc	___fttol@lval+1,f,c
  4208  0018A2  223C               	addwfc	___fttol@lval+2,f,c
  4209  0018A4  223D               	addwfc	___fttol@lval+3,f,c
  4210  0018A6                     l1930:
  4211  0018A6  C03A  F030         	movff	___fttol@lval,?___fttol
  4212  0018AA  C03B  F031         	movff	___fttol@lval+1,?___fttol+1
  4213  0018AE  C03C  F032         	movff	___fttol@lval+2,?___fttol+2
  4214  0018B2  C03D  F033         	movff	___fttol@lval+3,?___fttol+3
  4215  0018B6  0012               	return	
  4216  0018B8                     __end_of___fttol:
  4217                           	opt stack 0
  4218                           tblptru	equ	0xFF8
  4219                           tblptrh	equ	0xFF7
  4220                           tblptrl	equ	0xFF6
  4221                           tablat	equ	0xFF5
  4222                           prodh	equ	0xFF4
  4223                           prodl	equ	0xFF3
  4224                           intcon	equ	0xFF2
  4225                           postinc0	equ	0xFEE
  4226                           wreg	equ	0xFE8
  4227                           postdec1	equ	0xFE5
  4228                           fsr1l	equ	0xFE1
  4229                           indf2	equ	0xFDF
  4230                           postinc2	equ	0xFDE
  4231                           postdec2	equ	0xFDD
  4232                           fsr2h	equ	0xFDA
  4233                           fsr2l	equ	0xFD9
  4234                           status	equ	0xFD8
  4235                           
  4236 ;; *************** function ___ftdiv *****************
  4237 ;; Defined at:
  4238 ;;		line 54 in file "/Applications/microchip/xc8/v1.36/sources/common/ftdiv.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  f1              3   32[COMRAM] float 
  4241 ;;  f2              3   35[COMRAM] float 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  f3              3   42[COMRAM] float 
  4244 ;;  sign            1   46[COMRAM] unsigned char 
  4245 ;;  exp             1   45[COMRAM] unsigned char 
  4246 ;;  cntr            1   41[COMRAM] unsigned char 
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  3   32[COMRAM] float 
  4249 ;; Registers used:
  4250 ;;		wreg, status,2, status,0, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4256 ;;      Params:         6       0       0       0       0       0       0       0       0
  4257 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4258 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4259 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4260 ;;Total ram usage:       15 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    2
  4263 ;; This function calls:
  4264 ;;		___ftpack
  4265 ;; This function is called by:
  4266 ;;		_fsm
  4267 ;;		_stepper_pulse
  4268 ;;		_buzz
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text20
  4273  0019AC                     __ptext20:
  4274                           	opt stack 0
  4275  0019AC                     ___ftdiv:
  4276                           	opt stack 25
  4277                           
  4278                           ;incstack = 0
  4279  0019AC  C023  F027         	movff	___ftdiv@f1+2,??___ftdiv
  4280  0019B0  6A28               	clrf	(??___ftdiv+1)& (0+255),c
  4281  0019B2  6A29               	clrf	(??___ftdiv+2)& (0+255),c
  4282  0019B4  3422               	rlcf	___ftdiv@f1+1,w,c
  4283  0019B6  3627               	rlcf	??___ftdiv& (0+255),f,c
  4284  0019B8  E301               	bnc	u1441
  4285  0019BA  8028               	bsf	(??___ftdiv+1)& (0+255),0,c
  4286  0019BC                     u1441:
  4287  0019BC  5027               	movf	??___ftdiv,w,c
  4288  0019BE  6E2E               	movwf	___ftdiv@exp,c
  4289  0019C0  502E               	movf	___ftdiv@exp,w,c
  4290  0019C2  A4D8               	btfss	status,2,c
  4291  0019C4  D007               	goto	l1848
  4292  0019C6  0E00               	movlw	0
  4293  0019C8  6E21               	movwf	?___ftdiv,c
  4294  0019CA  0E00               	movlw	0
  4295  0019CC  6E22               	movwf	?___ftdiv+1,c
  4296  0019CE  0E00               	movlw	0
  4297  0019D0  6E23               	movwf	?___ftdiv+2,c
  4298  0019D2  0012               	return	
  4299  0019D4                     l1848:
  4300  0019D4  C026  F027         	movff	___ftdiv@f2+2,??___ftdiv
  4301  0019D8  6A28               	clrf	(??___ftdiv+1)& (0+255),c
  4302  0019DA  6A29               	clrf	(??___ftdiv+2)& (0+255),c
  4303  0019DC  3425               	rlcf	___ftdiv@f2+1,w,c
  4304  0019DE  3627               	rlcf	??___ftdiv& (0+255),f,c
  4305  0019E0  E301               	bnc	u1461
  4306  0019E2  8028               	bsf	(??___ftdiv+1)& (0+255),0,c
  4307  0019E4                     u1461:
  4308  0019E4  5027               	movf	??___ftdiv,w,c
  4309  0019E6  6E2F               	movwf	___ftdiv@sign,c
  4310  0019E8  502F               	movf	___ftdiv@sign,w,c
  4311  0019EA  A4D8               	btfss	status,2,c
  4312  0019EC  D007               	goto	l1854
  4313  0019EE  0E00               	movlw	0
  4314  0019F0  6E21               	movwf	?___ftdiv,c
  4315  0019F2  0E00               	movlw	0
  4316  0019F4  6E22               	movwf	?___ftdiv+1,c
  4317  0019F6  0E00               	movlw	0
  4318  0019F8  6E23               	movwf	?___ftdiv+2,c
  4319  0019FA  0012               	return	
  4320  0019FC                     l1854:
  4321  0019FC  0E00               	movlw	0
  4322  0019FE  6E2B               	movwf	___ftdiv@f3,c
  4323  001A00  0E00               	movlw	0
  4324  001A02  6E2C               	movwf	___ftdiv@f3+1,c
  4325  001A04  0E00               	movlw	0
  4326  001A06  6E2D               	movwf	___ftdiv@f3+2,c
  4327  001A08  502F               	movf	___ftdiv@sign,w,c
  4328  001A0A  0F89               	addlw	137
  4329  001A0C  5E2E               	subwf	___ftdiv@exp,f,c
  4330  001A0E  C023  F02F         	movff	___ftdiv@f1+2,___ftdiv@sign
  4331  001A12  5026               	movf	___ftdiv@f2+2,w,c
  4332  001A14  1A2F               	xorwf	___ftdiv@sign,f,c
  4333  001A16  0E80               	movlw	128
  4334  001A18  162F               	andwf	___ftdiv@sign,f,c
  4335  001A1A  8E22               	bsf	___ftdiv@f1+1,7,c
  4336  001A1C  0EFF               	movlw	255
  4337  001A1E  1621               	andwf	___ftdiv@f1,f,c
  4338  001A20  0EFF               	movlw	255
  4339  001A22  1622               	andwf	___ftdiv@f1+1,f,c
  4340  001A24  0E00               	movlw	0
  4341  001A26  1623               	andwf	___ftdiv@f1+2,f,c
  4342  001A28  8E25               	bsf	___ftdiv@f2+1,7,c
  4343  001A2A  0EFF               	movlw	255
  4344  001A2C  1624               	andwf	___ftdiv@f2,f,c
  4345  001A2E  0EFF               	movlw	255
  4346  001A30  1625               	andwf	___ftdiv@f2+1,f,c
  4347  001A32  0E00               	movlw	0
  4348  001A34  1626               	andwf	___ftdiv@f2+2,f,c
  4349  001A36  0E18               	movlw	24
  4350  001A38  6E2A               	movwf	___ftdiv@cntr,c
  4351  001A3A                     l1874:
  4352  001A3A  90D8               	bcf	status,0,c
  4353  001A3C  362B               	rlcf	___ftdiv@f3,f,c
  4354  001A3E  362C               	rlcf	___ftdiv@f3+1,f,c
  4355  001A40  362D               	rlcf	___ftdiv@f3+2,f,c
  4356  001A42  5024               	movf	___ftdiv@f2,w,c
  4357  001A44  5C21               	subwf	___ftdiv@f1,w,c
  4358  001A46  5025               	movf	___ftdiv@f2+1,w,c
  4359  001A48  5822               	subwfb	___ftdiv@f1+1,w,c
  4360  001A4A  5026               	movf	___ftdiv@f2+2,w,c
  4361  001A4C  5823               	subwfb	___ftdiv@f1+2,w,c
  4362  001A4E  A0D8               	btfss	status,0,c
  4363  001A50  D007               	goto	l569
  4364  001A52  5024               	movf	___ftdiv@f2,w,c
  4365  001A54  5E21               	subwf	___ftdiv@f1,f,c
  4366  001A56  5025               	movf	___ftdiv@f2+1,w,c
  4367  001A58  5A22               	subwfb	___ftdiv@f1+1,f,c
  4368  001A5A  5026               	movf	___ftdiv@f2+2,w,c
  4369  001A5C  5A23               	subwfb	___ftdiv@f1+2,f,c
  4370  001A5E  802B               	bsf	___ftdiv@f3,0,c
  4371  001A60                     l569:
  4372  001A60  90D8               	bcf	status,0,c
  4373  001A62  3621               	rlcf	___ftdiv@f1,f,c
  4374  001A64  3622               	rlcf	___ftdiv@f1+1,f,c
  4375  001A66  3623               	rlcf	___ftdiv@f1+2,f,c
  4376  001A68  2E2A               	decfsz	___ftdiv@cntr,f,c
  4377  001A6A  D7E7               	goto	l1874
  4378  001A6C  C02B  F00F         	movff	___ftdiv@f3,___ftpack@arg
  4379  001A70  C02C  F010         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4380  001A74  C02D  F011         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4381  001A78  C02E  F012         	movff	___ftdiv@exp,___ftpack@exp
  4382  001A7C  C02F  F013         	movff	___ftdiv@sign,___ftpack@sign
  4383  001A80  EC4B  F00F         	call	___ftpack	;wreg free
  4384  001A84  C00F  F021         	movff	?___ftpack,?___ftdiv
  4385  001A88  C010  F022         	movff	?___ftpack+1,?___ftdiv+1
  4386  001A8C  C011  F023         	movff	?___ftpack+2,?___ftdiv+2
  4387  001A90  0012               	return	
  4388  001A92                     __end_of___ftdiv:
  4389                           	opt stack 0
  4390                           tblptru	equ	0xFF8
  4391                           tblptrh	equ	0xFF7
  4392                           tblptrl	equ	0xFF6
  4393                           tablat	equ	0xFF5
  4394                           prodh	equ	0xFF4
  4395                           prodl	equ	0xFF3
  4396                           intcon	equ	0xFF2
  4397                           postinc0	equ	0xFEE
  4398                           wreg	equ	0xFE8
  4399                           postdec1	equ	0xFE5
  4400                           fsr1l	equ	0xFE1
  4401                           indf2	equ	0xFDF
  4402                           postinc2	equ	0xFDE
  4403                           postdec2	equ	0xFDD
  4404                           fsr2h	equ	0xFDA
  4405                           fsr2l	equ	0xFD9
  4406                           status	equ	0xFD8
  4407                           
  4408 ;; *************** function ___altoft *****************
  4409 ;; Defined at:
  4410 ;;		line 42 in file "/Applications/microchip/xc8/v1.36/sources/common/altoft.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  c               4   22[COMRAM] long 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  sign            1   31[COMRAM] unsigned char 
  4415 ;;  exp             1   30[COMRAM] unsigned char 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  3   22[COMRAM] float 
  4418 ;; Registers used:
  4419 ;;		wreg, status,2, status,0, cstack
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4425 ;;      Params:         4       0       0       0       0       0       0       0       0
  4426 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4427 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4428 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4429 ;;Total ram usage:       10 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; Hardware stack levels required when called:    2
  4432 ;; This function calls:
  4433 ;;		___ftpack
  4434 ;; This function is called by:
  4435 ;;		_buzz
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text21
  4440  002292                     __ptext21:
  4441                           	opt stack 0
  4442  002292                     ___altoft:
  4443                           	opt stack 25
  4444                           
  4445                           ;incstack = 0
  4446  002292  0E00               	movlw	0
  4447  002294  6E20               	movwf	___altoft@sign,c
  4448  002296  0E8E               	movlw	142
  4449  002298  6E1F               	movwf	___altoft@exp,c
  4450  00229A  AE1A               	btfss	___altoft@c+3,7,c
  4451  00229C  D011               	goto	l1836
  4452  00229E  1E1A               	comf	___altoft@c+3,f,c
  4453  0022A0  1E19               	comf	___altoft@c+2,f,c
  4454  0022A2  1E18               	comf	___altoft@c+1,f,c
  4455  0022A4  6C17               	negf	___altoft@c,c
  4456  0022A6  0E00               	movlw	0
  4457  0022A8  2218               	addwfc	___altoft@c+1,f,c
  4458  0022AA  2219               	addwfc	___altoft@c+2,f,c
  4459  0022AC  221A               	addwfc	___altoft@c+3,f,c
  4460  0022AE  0E01               	movlw	1
  4461  0022B0  6E20               	movwf	___altoft@sign,c
  4462  0022B2  D006               	goto	l1836
  4463  0022B4                     l1834:
  4464  0022B4  90D8               	bcf	status,0,c
  4465  0022B6  321A               	rrcf	___altoft@c+3,f,c
  4466  0022B8  3219               	rrcf	___altoft@c+2,f,c
  4467  0022BA  3218               	rrcf	___altoft@c+1,f,c
  4468  0022BC  3217               	rrcf	___altoft@c,f,c
  4469  0022BE  2A1F               	incf	___altoft@exp,f,c
  4470  0022C0                     l1836:
  4471  0022C0  0E00               	movlw	0
  4472  0022C2  1417               	andwf	___altoft@c,w,c
  4473  0022C4  6E1B               	movwf	??___altoft& (0+255),c
  4474  0022C6  0E00               	movlw	0
  4475  0022C8  1418               	andwf	___altoft@c+1,w,c
  4476  0022CA  6E1C               	movwf	(??___altoft+1)& (0+255),c
  4477  0022CC  0E00               	movlw	0
  4478  0022CE  1419               	andwf	___altoft@c+2,w,c
  4479  0022D0  6E1D               	movwf	(??___altoft+2)& (0+255),c
  4480  0022D2  0EFF               	movlw	255
  4481  0022D4  141A               	andwf	___altoft@c+3,w,c
  4482  0022D6  6E1E               	movwf	(??___altoft+3)& (0+255),c
  4483  0022D8  501B               	movf	??___altoft,w,c
  4484  0022DA  101C               	iorwf	??___altoft+1,w,c
  4485  0022DC  101D               	iorwf	??___altoft+2,w,c
  4486  0022DE  101E               	iorwf	??___altoft+3,w,c
  4487  0022E0  A4D8               	btfss	status,2,c
  4488  0022E2  D7E8               	goto	l1834
  4489  0022E4  C017  F00F         	movff	___altoft@c,___ftpack@arg
  4490  0022E8  C018  F010         	movff	___altoft@c+1,___ftpack@arg+1
  4491  0022EC  C019  F011         	movff	___altoft@c+2,___ftpack@arg+2
  4492  0022F0  C01F  F012         	movff	___altoft@exp,___ftpack@exp
  4493  0022F4  C020  F013         	movff	___altoft@sign,___ftpack@sign
  4494  0022F8  EC4B  F00F         	call	___ftpack	;wreg free
  4495  0022FC  C00F  F017         	movff	?___ftpack,?___altoft
  4496  002300  C010  F018         	movff	?___ftpack+1,?___altoft+1
  4497  002304  C011  F019         	movff	?___ftpack+2,?___altoft+2
  4498  002308  0012               	return	
  4499  00230A                     __end_of___altoft:
  4500                           	opt stack 0
  4501                           tblptru	equ	0xFF8
  4502                           tblptrh	equ	0xFF7
  4503                           tblptrl	equ	0xFF6
  4504                           tablat	equ	0xFF5
  4505                           prodh	equ	0xFF4
  4506                           prodl	equ	0xFF3
  4507                           intcon	equ	0xFF2
  4508                           postinc0	equ	0xFEE
  4509                           wreg	equ	0xFE8
  4510                           postdec1	equ	0xFE5
  4511                           fsr1l	equ	0xFE1
  4512                           indf2	equ	0xFDF
  4513                           postinc2	equ	0xFDE
  4514                           postdec2	equ	0xFDD
  4515                           fsr2h	equ	0xFDA
  4516                           fsr2l	equ	0xFD9
  4517                           status	equ	0xFD8
  4518                           
  4519 ;; *************** function ___aldiv *****************
  4520 ;; Defined at:
  4521 ;;		line 8 in file "/Applications/microchip/xc8/v1.36/sources/common/aldiv.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  dividend        4   26[COMRAM] long 
  4524 ;;  divisor         4   30[COMRAM] long 
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;  quotient        4   36[COMRAM] long 
  4527 ;;  sign            1   35[COMRAM] unsigned char 
  4528 ;;  counter         1   34[COMRAM] unsigned char 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  4   26[COMRAM] long 
  4531 ;; Registers used:
  4532 ;;		wreg, status,2, status,0
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4538 ;;      Params:         8       0       0       0       0       0       0       0       0
  4539 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4541 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4542 ;;Total ram usage:       14 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; Hardware stack levels required when called:    1
  4545 ;; This function calls:
  4546 ;;		Nothing
  4547 ;; This function is called by:
  4548 ;;		_buzz
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           	psect	text22
  4553  001C48                     __ptext22:
  4554                           	opt stack 0
  4555  001C48                     ___aldiv:
  4556                           	opt stack 26
  4557                           
  4558                           ;incstack = 0
  4559  001C48  0E00               	movlw	0
  4560  001C4A  6E24               	movwf	___aldiv@sign,c
  4561  001C4C  AE22               	btfss	___aldiv@divisor+3,7,c
  4562  001C4E  D00A               	goto	l1790
  4563  001C50  1E22               	comf	___aldiv@divisor+3,f,c
  4564  001C52  1E21               	comf	___aldiv@divisor+2,f,c
  4565  001C54  1E20               	comf	___aldiv@divisor+1,f,c
  4566  001C56  6C1F               	negf	___aldiv@divisor,c
  4567  001C58  0E00               	movlw	0
  4568  001C5A  2220               	addwfc	___aldiv@divisor+1,f,c
  4569  001C5C  2221               	addwfc	___aldiv@divisor+2,f,c
  4570  001C5E  2222               	addwfc	___aldiv@divisor+3,f,c
  4571  001C60  0E01               	movlw	1
  4572  001C62  6E24               	movwf	___aldiv@sign,c
  4573  001C64                     l1790:
  4574  001C64  AE1E               	btfss	___aldiv@dividend+3,7,c
  4575  001C66  D00A               	goto	l1796
  4576  001C68  1E1E               	comf	___aldiv@dividend+3,f,c
  4577  001C6A  1E1D               	comf	___aldiv@dividend+2,f,c
  4578  001C6C  1E1C               	comf	___aldiv@dividend+1,f,c
  4579  001C6E  6C1B               	negf	___aldiv@dividend,c
  4580  001C70  0E00               	movlw	0
  4581  001C72  221C               	addwfc	___aldiv@dividend+1,f,c
  4582  001C74  221D               	addwfc	___aldiv@dividend+2,f,c
  4583  001C76  221E               	addwfc	___aldiv@dividend+3,f,c
  4584  001C78  0E01               	movlw	1
  4585  001C7A  1A24               	xorwf	___aldiv@sign,f,c
  4586  001C7C                     l1796:
  4587  001C7C  0E00               	movlw	0
  4588  001C7E  6E25               	movwf	___aldiv@quotient,c
  4589  001C80  0E00               	movlw	0
  4590  001C82  6E26               	movwf	___aldiv@quotient+1,c
  4591  001C84  0E00               	movlw	0
  4592  001C86  6E27               	movwf	___aldiv@quotient+2,c
  4593  001C88  0E00               	movlw	0
  4594  001C8A  6E28               	movwf	___aldiv@quotient+3,c
  4595  001C8C  501F               	movf	___aldiv@divisor,w,c
  4596  001C8E  1020               	iorwf	___aldiv@divisor+1,w,c
  4597  001C90  1021               	iorwf	___aldiv@divisor+2,w,c
  4598  001C92  1022               	iorwf	___aldiv@divisor+3,w,c
  4599  001C94  B4D8               	btfsc	status,2,c
  4600  001C96  D02A               	goto	l1818
  4601  001C98  0E01               	movlw	1
  4602  001C9A  6E23               	movwf	___aldiv@counter,c
  4603  001C9C  D006               	goto	l1804
  4604  001C9E                     l1802:
  4605  001C9E  90D8               	bcf	status,0,c
  4606  001CA0  361F               	rlcf	___aldiv@divisor,f,c
  4607  001CA2  3620               	rlcf	___aldiv@divisor+1,f,c
  4608  001CA4  3621               	rlcf	___aldiv@divisor+2,f,c
  4609  001CA6  3622               	rlcf	___aldiv@divisor+3,f,c
  4610  001CA8  2A23               	incf	___aldiv@counter,f,c
  4611  001CAA                     l1804:
  4612  001CAA  AE22               	btfss	___aldiv@divisor+3,7,c
  4613  001CAC  D7F8               	goto	l1802
  4614  001CAE                     l1806:
  4615  001CAE  90D8               	bcf	status,0,c
  4616  001CB0  3625               	rlcf	___aldiv@quotient,f,c
  4617  001CB2  3626               	rlcf	___aldiv@quotient+1,f,c
  4618  001CB4  3627               	rlcf	___aldiv@quotient+2,f,c
  4619  001CB6  3628               	rlcf	___aldiv@quotient+3,f,c
  4620  001CB8  501F               	movf	___aldiv@divisor,w,c
  4621  001CBA  5C1B               	subwf	___aldiv@dividend,w,c
  4622  001CBC  5020               	movf	___aldiv@divisor+1,w,c
  4623  001CBE  581C               	subwfb	___aldiv@dividend+1,w,c
  4624  001CC0  5021               	movf	___aldiv@divisor+2,w,c
  4625  001CC2  581D               	subwfb	___aldiv@dividend+2,w,c
  4626  001CC4  5022               	movf	___aldiv@divisor+3,w,c
  4627  001CC6  581E               	subwfb	___aldiv@dividend+3,w,c
  4628  001CC8  A0D8               	btfss	status,0,c
  4629  001CCA  D009               	goto	l1814
  4630  001CCC  501F               	movf	___aldiv@divisor,w,c
  4631  001CCE  5E1B               	subwf	___aldiv@dividend,f,c
  4632  001CD0  5020               	movf	___aldiv@divisor+1,w,c
  4633  001CD2  5A1C               	subwfb	___aldiv@dividend+1,f,c
  4634  001CD4  5021               	movf	___aldiv@divisor+2,w,c
  4635  001CD6  5A1D               	subwfb	___aldiv@dividend+2,f,c
  4636  001CD8  5022               	movf	___aldiv@divisor+3,w,c
  4637  001CDA  5A1E               	subwfb	___aldiv@dividend+3,f,c
  4638  001CDC  8025               	bsf	___aldiv@quotient,0,c
  4639  001CDE                     l1814:
  4640  001CDE  90D8               	bcf	status,0,c
  4641  001CE0  3222               	rrcf	___aldiv@divisor+3,f,c
  4642  001CE2  3221               	rrcf	___aldiv@divisor+2,f,c
  4643  001CE4  3220               	rrcf	___aldiv@divisor+1,f,c
  4644  001CE6  321F               	rrcf	___aldiv@divisor,f,c
  4645  001CE8  2E23               	decfsz	___aldiv@counter,f,c
  4646  001CEA  D7E1               	goto	l1806
  4647  001CEC                     l1818:
  4648  001CEC  5024               	movf	___aldiv@sign,w,c
  4649  001CEE  B4D8               	btfsc	status,2,c
  4650  001CF0  D008               	goto	l1822
  4651  001CF2  1E28               	comf	___aldiv@quotient+3,f,c
  4652  001CF4  1E27               	comf	___aldiv@quotient+2,f,c
  4653  001CF6  1E26               	comf	___aldiv@quotient+1,f,c
  4654  001CF8  6C25               	negf	___aldiv@quotient,c
  4655  001CFA  0E00               	movlw	0
  4656  001CFC  2226               	addwfc	___aldiv@quotient+1,f,c
  4657  001CFE  2227               	addwfc	___aldiv@quotient+2,f,c
  4658  001D00  2228               	addwfc	___aldiv@quotient+3,f,c
  4659  001D02                     l1822:
  4660  001D02  C025  F01B         	movff	___aldiv@quotient,?___aldiv
  4661  001D06  C026  F01C         	movff	___aldiv@quotient+1,?___aldiv+1
  4662  001D0A  C027  F01D         	movff	___aldiv@quotient+2,?___aldiv+2
  4663  001D0E  C028  F01E         	movff	___aldiv@quotient+3,?___aldiv+3
  4664  001D12  0012               	return	
  4665  001D14                     __end_of___aldiv:
  4666                           	opt stack 0
  4667                           tblptru	equ	0xFF8
  4668                           tblptrh	equ	0xFF7
  4669                           tblptrl	equ	0xFF6
  4670                           tablat	equ	0xFF5
  4671                           prodh	equ	0xFF4
  4672                           prodl	equ	0xFF3
  4673                           intcon	equ	0xFF2
  4674                           postinc0	equ	0xFEE
  4675                           wreg	equ	0xFE8
  4676                           postdec1	equ	0xFE5
  4677                           fsr1l	equ	0xFE1
  4678                           indf2	equ	0xFDF
  4679                           postinc2	equ	0xFDE
  4680                           postdec2	equ	0xFDD
  4681                           fsr2h	equ	0xFDA
  4682                           fsr2l	equ	0xFD9
  4683                           status	equ	0xFD8
  4684                           
  4685 ;; *************** function ___wmul *****************
  4686 ;; Defined at:
  4687 ;;		line 15 in file "/Applications/microchip/xc8/v1.36/sources/common/Umul16.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  multiplier      2   14[COMRAM] unsigned int 
  4690 ;;  multiplicand    2   16[COMRAM] unsigned int 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  product         2   18[COMRAM] unsigned int 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  2   14[COMRAM] unsigned int 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0, prodl, prodh
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4702 ;;      Params:         4       0       0       0       0       0       0       0       0
  4703 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4704 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4705 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4706 ;;Total ram usage:        6 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    1
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_nothingElseMatters
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text23
  4717  00268C                     __ptext23:
  4718                           	opt stack 0
  4719  00268C                     ___wmul:
  4720                           	opt stack 27
  4721                           
  4722                           ;incstack = 0
  4723  00268C  500F               	movf	___wmul@multiplier,w,c
  4724  00268E  0211               	mulwf	___wmul@multiplicand,c
  4725  002690  CFF3 F013          	movff	prodl,___wmul@product
  4726  002694  CFF4 F014          	movff	prodh,___wmul@product+1
  4727  002698  500F               	movf	___wmul@multiplier,w,c
  4728  00269A  0212               	mulwf	___wmul@multiplicand+1,c
  4729  00269C  50F3               	movf	prodl,w,c
  4730  00269E  2614               	addwf	___wmul@product+1,f,c
  4731  0026A0  5010               	movf	___wmul@multiplier+1,w,c
  4732  0026A2  0211               	mulwf	___wmul@multiplicand,c
  4733  0026A4  50F3               	movf	prodl,w,c
  4734  0026A6  2614               	addwf	___wmul@product+1,f,c
  4735  0026A8  C013  F00F         	movff	___wmul@product,?___wmul
  4736  0026AC  C014  F010         	movff	___wmul@product+1,?___wmul+1
  4737  0026B0  0012               	return	
  4738  0026B2                     __end_of___wmul:
  4739                           	opt stack 0
  4740                           tblptru	equ	0xFF8
  4741                           tblptrh	equ	0xFF7
  4742                           tblptrl	equ	0xFF6
  4743                           tablat	equ	0xFF5
  4744                           prodh	equ	0xFF4
  4745                           prodl	equ	0xFF3
  4746                           intcon	equ	0xFF2
  4747                           postinc0	equ	0xFEE
  4748                           wreg	equ	0xFE8
  4749                           postdec1	equ	0xFE5
  4750                           fsr1l	equ	0xFE1
  4751                           indf2	equ	0xFDF
  4752                           postinc2	equ	0xFDE
  4753                           postdec2	equ	0xFDD
  4754                           fsr2h	equ	0xFDA
  4755                           fsr2l	equ	0xFD9
  4756                           status	equ	0xFD8
  4757                           
  4758 ;; *************** function ___lbtoft *****************
  4759 ;; Defined at:
  4760 ;;		line 27 in file "/Applications/microchip/xc8/v1.36/sources/common/lbtoft.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  c               1    wreg     unsigned char 
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;  c               1   25[COMRAM] unsigned char 
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  3   22[COMRAM] float 
  4767 ;; Registers used:
  4768 ;;		wreg, status,2, status,0, cstack
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4774 ;;      Params:         3       0       0       0       0       0       0       0       0
  4775 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4776 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4777 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4778 ;;Total ram usage:        4 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:    2
  4781 ;; This function calls:
  4782 ;;		___ftpack
  4783 ;; This function is called by:
  4784 ;;		_fsm
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           	psect	text24
  4789  0026FA                     __ptext24:
  4790                           	opt stack 0
  4791  0026FA                     ___lbtoft:
  4792                           	opt stack 27
  4793                           
  4794                           ;incstack = 0
  4795                           ;___lbtoft@c stored from wreg
  4796  0026FA  6E1A               	movwf	___lbtoft@c,c
  4797  0026FC  501A               	movf	___lbtoft@c,w,c
  4798  0026FE  6E0F               	movwf	___ftpack@arg,c
  4799  002700  6A10               	clrf	___ftpack@arg+1,c
  4800  002702  6A11               	clrf	___ftpack@arg+2,c
  4801  002704  0E8E               	movlw	142
  4802  002706  6E12               	movwf	___ftpack@exp,c
  4803  002708  0E00               	movlw	0
  4804  00270A  6E13               	movwf	___ftpack@sign,c
  4805  00270C  EC4B  F00F         	call	___ftpack	;wreg free
  4806  002710  C00F  F017         	movff	?___ftpack,?___lbtoft
  4807  002714  C010  F018         	movff	?___ftpack+1,?___lbtoft+1
  4808  002718  C011  F019         	movff	?___ftpack+2,?___lbtoft+2
  4809  00271C  0012               	return	
  4810  00271E                     __end_of___lbtoft:
  4811                           	opt stack 0
  4812                           tblptru	equ	0xFF8
  4813                           tblptrh	equ	0xFF7
  4814                           tblptrl	equ	0xFF6
  4815                           tablat	equ	0xFF5
  4816                           prodh	equ	0xFF4
  4817                           prodl	equ	0xFF3
  4818                           intcon	equ	0xFF2
  4819                           postinc0	equ	0xFEE
  4820                           wreg	equ	0xFE8
  4821                           postdec1	equ	0xFE5
  4822                           fsr1l	equ	0xFE1
  4823                           indf2	equ	0xFDF
  4824                           postinc2	equ	0xFDE
  4825                           postdec2	equ	0xFDD
  4826                           fsr2h	equ	0xFDA
  4827                           fsr2l	equ	0xFD9
  4828                           status	equ	0xFD8
  4829                           
  4830 ;; *************** function ___ftmul *****************
  4831 ;; Defined at:
  4832 ;;		line 62 in file "/Applications/microchip/xc8/v1.36/sources/common/ftmul.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;  f1              3   32[COMRAM] float 
  4835 ;;  f2              3   35[COMRAM] float 
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;  f3_as_produc    3   42[COMRAM] unsigned um
  4838 ;;  sign            1   46[COMRAM] unsigned char 
  4839 ;;  cntr            1   45[COMRAM] unsigned char 
  4840 ;;  exp             1   41[COMRAM] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  3   32[COMRAM] float 
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4850 ;;      Params:         6       0       0       0       0       0       0       0       0
  4851 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4852 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4853 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4854 ;;Total ram usage:       15 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; Hardware stack levels required when called:    2
  4857 ;; This function calls:
  4858 ;;		___ftpack
  4859 ;; This function is called by:
  4860 ;;		_fsm
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	text25
  4865  0018B8                     __ptext25:
  4866                           	opt stack 0
  4867  0018B8                     ___ftmul:
  4868                           	opt stack 27
  4869                           
  4870                           ;incstack = 0
  4871  0018B8  C023  F027         	movff	___ftmul@f1+2,??___ftmul
  4872  0018BC  6A28               	clrf	(??___ftmul+1)& (0+255),c
  4873  0018BE  6A29               	clrf	(??___ftmul+2)& (0+255),c
  4874  0018C0  3422               	rlcf	___ftmul@f1+1,w,c
  4875  0018C2  3627               	rlcf	??___ftmul& (0+255),f,c
  4876  0018C4  E301               	bnc	u1951
  4877  0018C6  8028               	bsf	(??___ftmul+1)& (0+255),0,c
  4878  0018C8                     u1951:
  4879  0018C8  5027               	movf	??___ftmul,w,c
  4880  0018CA  6E2A               	movwf	___ftmul@exp,c
  4881  0018CC  502A               	movf	___ftmul@exp,w,c
  4882  0018CE  A4D8               	btfss	status,2,c
  4883  0018D0  D007               	goto	l2156
  4884  0018D2  0E00               	movlw	0
  4885  0018D4  6E21               	movwf	?___ftmul,c
  4886  0018D6  0E00               	movlw	0
  4887  0018D8  6E22               	movwf	?___ftmul+1,c
  4888  0018DA  0E00               	movlw	0
  4889  0018DC  6E23               	movwf	?___ftmul+2,c
  4890  0018DE  0012               	return	
  4891  0018E0                     l2156:
  4892  0018E0  C026  F027         	movff	___ftmul@f2+2,??___ftmul
  4893  0018E4  6A28               	clrf	(??___ftmul+1)& (0+255),c
  4894  0018E6  6A29               	clrf	(??___ftmul+2)& (0+255),c
  4895  0018E8  3425               	rlcf	___ftmul@f2+1,w,c
  4896  0018EA  3627               	rlcf	??___ftmul& (0+255),f,c
  4897  0018EC  E301               	bnc	u1971
  4898  0018EE  8028               	bsf	(??___ftmul+1)& (0+255),0,c
  4899  0018F0                     u1971:
  4900  0018F0  5027               	movf	??___ftmul,w,c
  4901  0018F2  6E2F               	movwf	___ftmul@sign,c
  4902  0018F4  502F               	movf	___ftmul@sign,w,c
  4903  0018F6  A4D8               	btfss	status,2,c
  4904  0018F8  D007               	goto	l2162
  4905  0018FA  0E00               	movlw	0
  4906  0018FC  6E21               	movwf	?___ftmul,c
  4907  0018FE  0E00               	movlw	0
  4908  001900  6E22               	movwf	?___ftmul+1,c
  4909  001902  0E00               	movlw	0
  4910  001904  6E23               	movwf	?___ftmul+2,c
  4911  001906  0012               	return	
  4912  001908                     l2162:
  4913  001908  502F               	movf	___ftmul@sign,w,c
  4914  00190A  0F7B               	addlw	123
  4915  00190C  262A               	addwf	___ftmul@exp,f,c
  4916  00190E  C023  F02F         	movff	___ftmul@f1+2,___ftmul@sign
  4917  001912  5026               	movf	___ftmul@f2+2,w,c
  4918  001914  1A2F               	xorwf	___ftmul@sign,f,c
  4919  001916  0E80               	movlw	128
  4920  001918  162F               	andwf	___ftmul@sign,f,c
  4921  00191A  8E22               	bsf	___ftmul@f1+1,7,c
  4922  00191C  8E25               	bsf	___ftmul@f2+1,7,c
  4923  00191E  0EFF               	movlw	255
  4924  001920  1624               	andwf	___ftmul@f2,f,c
  4925  001922  0EFF               	movlw	255
  4926  001924  1625               	andwf	___ftmul@f2+1,f,c
  4927  001926  0E00               	movlw	0
  4928  001928  1626               	andwf	___ftmul@f2+2,f,c
  4929  00192A  0E00               	movlw	0
  4930  00192C  6E2B               	movwf	___ftmul@f3_as_product,c
  4931  00192E  0E00               	movlw	0
  4932  001930  6E2C               	movwf	___ftmul@f3_as_product+1,c
  4933  001932  0E00               	movlw	0
  4934  001934  6E2D               	movwf	___ftmul@f3_as_product+2,c
  4935  001936  0E07               	movlw	7
  4936  001938  6E2E               	movwf	___ftmul@cntr,c
  4937  00193A                     l2176:
  4938  00193A  A021               	btfss	___ftmul@f1,0,c
  4939  00193C  D006               	goto	l2180
  4940  00193E  5024               	movf	___ftmul@f2,w,c
  4941  001940  262B               	addwf	___ftmul@f3_as_product,f,c
  4942  001942  5025               	movf	___ftmul@f2+1,w,c
  4943  001944  222C               	addwfc	___ftmul@f3_as_product+1,f,c
  4944  001946  5026               	movf	___ftmul@f2+2,w,c
  4945  001948  222D               	addwfc	___ftmul@f3_as_product+2,f,c
  4946  00194A                     l2180:
  4947  00194A  90D8               	bcf	status,0,c
  4948  00194C  3223               	rrcf	___ftmul@f1+2,f,c
  4949  00194E  3222               	rrcf	___ftmul@f1+1,f,c
  4950  001950  3221               	rrcf	___ftmul@f1,f,c
  4951  001952  90D8               	bcf	status,0,c
  4952  001954  3624               	rlcf	___ftmul@f2,f,c
  4953  001956  3625               	rlcf	___ftmul@f2+1,f,c
  4954  001958  3626               	rlcf	___ftmul@f2+2,f,c
  4955  00195A  2E2E               	decfsz	___ftmul@cntr,f,c
  4956  00195C  D7EE               	goto	l2176
  4957  00195E  0E09               	movlw	9
  4958  001960  6E2E               	movwf	___ftmul@cntr,c
  4959  001962                     l2186:
  4960  001962  A021               	btfss	___ftmul@f1,0,c
  4961  001964  D006               	goto	l2190
  4962  001966  5024               	movf	___ftmul@f2,w,c
  4963  001968  262B               	addwf	___ftmul@f3_as_product,f,c
  4964  00196A  5025               	movf	___ftmul@f2+1,w,c
  4965  00196C  222C               	addwfc	___ftmul@f3_as_product+1,f,c
  4966  00196E  5026               	movf	___ftmul@f2+2,w,c
  4967  001970  222D               	addwfc	___ftmul@f3_as_product+2,f,c
  4968  001972                     l2190:
  4969  001972  90D8               	bcf	status,0,c
  4970  001974  3223               	rrcf	___ftmul@f1+2,f,c
  4971  001976  3222               	rrcf	___ftmul@f1+1,f,c
  4972  001978  3221               	rrcf	___ftmul@f1,f,c
  4973  00197A  90D8               	bcf	status,0,c
  4974  00197C  322D               	rrcf	___ftmul@f3_as_product+2,f,c
  4975  00197E  322C               	rrcf	___ftmul@f3_as_product+1,f,c
  4976  001980  322B               	rrcf	___ftmul@f3_as_product,f,c
  4977  001982  2E2E               	decfsz	___ftmul@cntr,f,c
  4978  001984  D7EE               	goto	l2186
  4979  001986  C02B  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  4980  00198A  C02C  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4981  00198E  C02D  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4982  001992  C02A  F012         	movff	___ftmul@exp,___ftpack@exp
  4983  001996  C02F  F013         	movff	___ftmul@sign,___ftpack@sign
  4984  00199A  EC4B  F00F         	call	___ftpack	;wreg free
  4985  00199E  C00F  F021         	movff	?___ftpack,?___ftmul
  4986  0019A2  C010  F022         	movff	?___ftpack+1,?___ftmul+1
  4987  0019A6  C011  F023         	movff	?___ftpack+2,?___ftmul+2
  4988  0019AA  0012               	return	
  4989  0019AC                     __end_of___ftmul:
  4990                           	opt stack 0
  4991                           tblptru	equ	0xFF8
  4992                           tblptrh	equ	0xFF7
  4993                           tblptrl	equ	0xFF6
  4994                           tablat	equ	0xFF5
  4995                           prodh	equ	0xFF4
  4996                           prodl	equ	0xFF3
  4997                           intcon	equ	0xFF2
  4998                           postinc0	equ	0xFEE
  4999                           wreg	equ	0xFE8
  5000                           postdec1	equ	0xFE5
  5001                           fsr1l	equ	0xFE1
  5002                           indf2	equ	0xFDF
  5003                           postinc2	equ	0xFDE
  5004                           postdec2	equ	0xFDD
  5005                           fsr2h	equ	0xFDA
  5006                           fsr2l	equ	0xFD9
  5007                           status	equ	0xFD8
  5008                           
  5009 ;; *************** function ___ftge *****************
  5010 ;; Defined at:
  5011 ;;		line 4 in file "/Applications/microchip/xc8/v1.36/sources/common/ftge.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  ff1             3   59[COMRAM] float 
  5014 ;;  ff2             3   62[COMRAM] float 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;		None
  5017 ;; Return value:  Size  Location     Type
  5018 ;;		None               void
  5019 ;; Registers used:
  5020 ;;		wreg, status,2, status,0
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5026 ;;      Params:         6       0       0       0       0       0       0       0       0
  5027 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5028 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5029 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5030 ;;Total ram usage:        9 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    1
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		_fsm
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           	psect	text26
  5041  00207C                     __ptext26:
  5042                           	opt stack 0
  5043  00207C                     ___ftge:
  5044                           	opt stack 28
  5045                           
  5046                           ;incstack = 0
  5047  00207C  AE3E               	btfss	___ftge@ff1+2,7,c
  5048  00207E  D016               	goto	l2250
  5049  002080  C03C  F042         	movff	___ftge@ff1,??___ftge
  5050  002084  C03D  F043         	movff	___ftge@ff1+1,??___ftge+1
  5051  002088  C03E  F044         	movff	___ftge@ff1+2,??___ftge+2
  5052  00208C  1E42               	comf	??___ftge,f,c
  5053  00208E  1E43               	comf	??___ftge+1,f,c
  5054  002090  1E44               	comf	??___ftge+2,f,c
  5055  002092  2A42               	incf	??___ftge,f,c
  5056  002094  0E00               	movlw	0
  5057  002096  2243               	addwfc	??___ftge+1,f,c
  5058  002098  2244               	addwfc	??___ftge+2,f,c
  5059  00209A  0E00               	movlw	0
  5060  00209C  2442               	addwf	??___ftge,w,c
  5061  00209E  6E3C               	movwf	___ftge@ff1,c
  5062  0020A0  0E00               	movlw	0
  5063  0020A2  2043               	addwfc	??___ftge+1,w,c
  5064  0020A4  6E3D               	movwf	___ftge@ff1+1,c
  5065  0020A6  0E80               	movlw	128
  5066  0020A8  2044               	addwfc	??___ftge+2,w,c
  5067  0020AA  6E3E               	movwf	___ftge@ff1+2,c
  5068  0020AC                     l2250:
  5069  0020AC  AE41               	btfss	___ftge@ff2+2,7,c
  5070  0020AE  D016               	goto	l2254
  5071  0020B0  C03F  F042         	movff	___ftge@ff2,??___ftge
  5072  0020B4  C040  F043         	movff	___ftge@ff2+1,??___ftge+1
  5073  0020B8  C041  F044         	movff	___ftge@ff2+2,??___ftge+2
  5074  0020BC  1E42               	comf	??___ftge,f,c
  5075  0020BE  1E43               	comf	??___ftge+1,f,c
  5076  0020C0  1E44               	comf	??___ftge+2,f,c
  5077  0020C2  2A42               	incf	??___ftge,f,c
  5078  0020C4  0E00               	movlw	0
  5079  0020C6  2243               	addwfc	??___ftge+1,f,c
  5080  0020C8  2244               	addwfc	??___ftge+2,f,c
  5081  0020CA  0E00               	movlw	0
  5082  0020CC  2442               	addwf	??___ftge,w,c
  5083  0020CE  6E3F               	movwf	___ftge@ff2,c
  5084  0020D0  0E00               	movlw	0
  5085  0020D2  2043               	addwfc	??___ftge+1,w,c
  5086  0020D4  6E40               	movwf	___ftge@ff2+1,c
  5087  0020D6  0E80               	movlw	128
  5088  0020D8  2044               	addwfc	??___ftge+2,w,c
  5089  0020DA  6E41               	movwf	___ftge@ff2+2,c
  5090  0020DC                     l2254:
  5091  0020DC  0E00               	movlw	0
  5092  0020DE  1A3C               	xorwf	___ftge@ff1,f,c
  5093  0020E0  0E00               	movlw	0
  5094  0020E2  1A3D               	xorwf	___ftge@ff1+1,f,c
  5095  0020E4  0E80               	movlw	128
  5096  0020E6  1A3E               	xorwf	___ftge@ff1+2,f,c
  5097  0020E8  0E00               	movlw	0
  5098  0020EA  1A3F               	xorwf	___ftge@ff2,f,c
  5099  0020EC  0E00               	movlw	0
  5100  0020EE  1A40               	xorwf	___ftge@ff2+1,f,c
  5101  0020F0  0E80               	movlw	128
  5102  0020F2  1A41               	xorwf	___ftge@ff2+2,f,c
  5103  0020F4  503F               	movf	___ftge@ff2,w,c
  5104  0020F6  5C3C               	subwf	___ftge@ff1,w,c
  5105  0020F8  5040               	movf	___ftge@ff2+1,w,c
  5106  0020FA  583D               	subwfb	___ftge@ff1+1,w,c
  5107  0020FC  5041               	movf	___ftge@ff2+2,w,c
  5108  0020FE  583E               	subwfb	___ftge@ff1+2,w,c
  5109  002100  B0D8               	btfsc	status,0,c
  5110  002102  D002               	goto	l2260
  5111  002104  90D8               	bcf	status,0,c
  5112  002106  0012               	return	
  5113  002108                     l2260:
  5114  002108  80D8               	bsf	status,0,c
  5115  00210A  0012               	return	
  5116  00210C                     __end_of___ftge:
  5117                           	opt stack 0
  5118                           tblptru	equ	0xFF8
  5119                           tblptrh	equ	0xFF7
  5120                           tblptrl	equ	0xFF6
  5121                           tablat	equ	0xFF5
  5122                           prodh	equ	0xFF4
  5123                           prodl	equ	0xFF3
  5124                           intcon	equ	0xFF2
  5125                           postinc0	equ	0xFEE
  5126                           wreg	equ	0xFE8
  5127                           postdec1	equ	0xFE5
  5128                           fsr1l	equ	0xFE1
  5129                           indf2	equ	0xFDF
  5130                           postinc2	equ	0xFDE
  5131                           postdec2	equ	0xFDD
  5132                           fsr2h	equ	0xFDA
  5133                           fsr2l	equ	0xFD9
  5134                           status	equ	0xFD8
  5135                           
  5136 ;; *************** function ___ftadd *****************
  5137 ;; Defined at:
  5138 ;;		line 86 in file "/Applications/microchip/xc8/v1.36/sources/common/ftadd.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  f1              3   47[COMRAM] float 
  5141 ;;  f2              3   50[COMRAM] float 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  exp1            1   58[COMRAM] unsigned char 
  5144 ;;  exp2            1   57[COMRAM] unsigned char 
  5145 ;;  sign            1   56[COMRAM] unsigned char 
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  3   47[COMRAM] float 
  5148 ;; Registers used:
  5149 ;;		wreg, status,2, status,0, cstack
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5155 ;;      Params:         6       0       0       0       0       0       0       0       0
  5156 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5157 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5158 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5159 ;;Total ram usage:       12 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; Hardware stack levels required when called:    2
  5162 ;; This function calls:
  5163 ;;		___ftpack
  5164 ;; This function is called by:
  5165 ;;		_fsm
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text27
  5170  0014E4                     __ptext27:
  5171                           	opt stack 0
  5172  0014E4                     ___ftadd:
  5173                           	opt stack 27
  5174                           
  5175                           ;incstack = 0
  5176  0014E4  C032  F036         	movff	___ftadd@f1+2,??___ftadd
  5177  0014E8  6A37               	clrf	(??___ftadd+1)& (0+255),c
  5178  0014EA  6A38               	clrf	(??___ftadd+2)& (0+255),c
  5179  0014EC  3431               	rlcf	___ftadd@f1+1,w,c
  5180  0014EE  3636               	rlcf	??___ftadd& (0+255),f,c
  5181  0014F0  E301               	bnc	u1741
  5182  0014F2  8037               	bsf	(??___ftadd+1)& (0+255),0,c
  5183  0014F4                     u1741:
  5184  0014F4  5036               	movf	??___ftadd,w,c
  5185  0014F6  6E3B               	movwf	___ftadd@exp1,c
  5186  0014F8  C035  F036         	movff	___ftadd@f2+2,??___ftadd
  5187  0014FC  6A37               	clrf	(??___ftadd+1)& (0+255),c
  5188  0014FE  6A38               	clrf	(??___ftadd+2)& (0+255),c
  5189  001500  3434               	rlcf	___ftadd@f2+1,w,c
  5190  001502  3636               	rlcf	??___ftadd& (0+255),f,c
  5191  001504  E301               	bnc	u1751
  5192  001506  8037               	bsf	(??___ftadd+1)& (0+255),0,c
  5193  001508                     u1751:
  5194  001508  5036               	movf	??___ftadd,w,c
  5195  00150A  6E3A               	movwf	___ftadd@exp2,c
  5196  00150C  503B               	movf	___ftadd@exp1,w,c
  5197  00150E  B4D8               	btfsc	status,2,c
  5198  001510  D00B               	goto	l534
  5199  001512  503A               	movf	___ftadd@exp2,w,c
  5200  001514  5C3B               	subwf	___ftadd@exp1,w,c
  5201  001516  B0D8               	btfsc	status,0,c
  5202  001518  D00E               	goto	l2088
  5203  00151A  503B               	movf	___ftadd@exp1,w,c
  5204  00151C  0800               	sublw	0
  5205  00151E  243A               	addwf	___ftadd@exp2,w,c
  5206  001520  6E36               	movwf	??___ftadd& (0+255),c
  5207  001522  0E18               	movlw	24
  5208  001524  6436               	cpfsgt	??___ftadd,c
  5209  001526  D007               	goto	l2088
  5210  001528                     l534:
  5211  001528  C033  F030         	movff	___ftadd@f2,?___ftadd
  5212  00152C  C034  F031         	movff	___ftadd@f2+1,?___ftadd+1
  5213  001530  C035  F032         	movff	___ftadd@f2+2,?___ftadd+2
  5214  001534  0012               	return	
  5215  001536                     l2088:
  5216  001536  503A               	movf	___ftadd@exp2,w,c
  5217  001538  B4D8               	btfsc	status,2,c
  5218  00153A  D00B               	goto	l538
  5219  00153C  503B               	movf	___ftadd@exp1,w,c
  5220  00153E  5C3A               	subwf	___ftadd@exp2,w,c
  5221  001540  B0D8               	btfsc	status,0,c
  5222  001542  D00E               	goto	l2094
  5223  001544  503A               	movf	___ftadd@exp2,w,c
  5224  001546  0800               	sublw	0
  5225  001548  243B               	addwf	___ftadd@exp1,w,c
  5226  00154A  6E36               	movwf	??___ftadd& (0+255),c
  5227  00154C  0E18               	movlw	24
  5228  00154E  6436               	cpfsgt	??___ftadd,c
  5229  001550  D007               	goto	l2094
  5230  001552                     l538:
  5231  001552  C030  F030         	movff	___ftadd@f1,?___ftadd
  5232  001556  C031  F031         	movff	___ftadd@f1+1,?___ftadd+1
  5233  00155A  C032  F032         	movff	___ftadd@f1+2,?___ftadd+2
  5234  00155E  0012               	return	
  5235  001560                     l2094:
  5236  001560  0E06               	movlw	6
  5237  001562  6E39               	movwf	___ftadd@sign,c
  5238  001564  BE32               	btfsc	___ftadd@f1+2,7,c
  5239  001566  8E39               	bsf	___ftadd@sign,7,c
  5240  001568  BE35               	btfsc	___ftadd@f2+2,7,c
  5241  00156A  8C39               	bsf	___ftadd@sign,6,c
  5242  00156C  8E31               	bsf	___ftadd@f1+1,7,c
  5243  00156E  0EFF               	movlw	255
  5244  001570  1630               	andwf	___ftadd@f1,f,c
  5245  001572  0EFF               	movlw	255
  5246  001574  1631               	andwf	___ftadd@f1+1,f,c
  5247  001576  0E00               	movlw	0
  5248  001578  1632               	andwf	___ftadd@f1+2,f,c
  5249  00157A  8E34               	bsf	___ftadd@f2+1,7,c
  5250  00157C  0EFF               	movlw	255
  5251  00157E  1633               	andwf	___ftadd@f2,f,c
  5252  001580  0EFF               	movlw	255
  5253  001582  1634               	andwf	___ftadd@f2+1,f,c
  5254  001584  0E00               	movlw	0
  5255  001586  1635               	andwf	___ftadd@f2+2,f,c
  5256  001588  503A               	movf	___ftadd@exp2,w,c
  5257  00158A  5C3B               	subwf	___ftadd@exp1,w,c
  5258  00158C  B0D8               	btfsc	status,0,c
  5259  00158E  D01B               	goto	l2120
  5260  001590                     l2110:
  5261  001590  90D8               	bcf	status,0,c
  5262  001592  3633               	rlcf	___ftadd@f2,f,c
  5263  001594  3634               	rlcf	___ftadd@f2+1,f,c
  5264  001596  3635               	rlcf	___ftadd@f2+2,f,c
  5265  001598  063A               	decf	___ftadd@exp2,f,c
  5266  00159A  503B               	movf	___ftadd@exp1,w,c
  5267  00159C  183A               	xorwf	___ftadd@exp2,w,c
  5268  00159E  B4D8               	btfsc	status,2,c
  5269  0015A0  D00D               	goto	l2118
  5270  0015A2  0639               	decf	___ftadd@sign,f,c
  5271  0015A4  C039  F036         	movff	___ftadd@sign,??___ftadd
  5272  0015A8  0E07               	movlw	7
  5273  0015AA  1636               	andwf	??___ftadd,f,c
  5274  0015AC  B4D8               	btfsc	status,2,c
  5275  0015AE  D006               	goto	l2118
  5276  0015B0  D7EF               	goto	l2110
  5277  0015B2                     l2116:
  5278  0015B2  90D8               	bcf	status,0,c
  5279  0015B4  3232               	rrcf	___ftadd@f1+2,f,c
  5280  0015B6  3231               	rrcf	___ftadd@f1+1,f,c
  5281  0015B8  3230               	rrcf	___ftadd@f1,f,c
  5282  0015BA  2A3B               	incf	___ftadd@exp1,f,c
  5283  0015BC                     l2118:
  5284  0015BC  503A               	movf	___ftadd@exp2,w,c
  5285  0015BE  183B               	xorwf	___ftadd@exp1,w,c
  5286  0015C0  B4D8               	btfsc	status,2,c
  5287  0015C2  D01F               	goto	l549
  5288  0015C4  D7F6               	goto	l2116
  5289  0015C6                     l2120:
  5290  0015C6  503B               	movf	___ftadd@exp1,w,c
  5291  0015C8  5C3A               	subwf	___ftadd@exp2,w,c
  5292  0015CA  B0D8               	btfsc	status,0,c
  5293  0015CC  D01A               	goto	l549
  5294  0015CE                     l2122:
  5295  0015CE  90D8               	bcf	status,0,c
  5296  0015D0  3630               	rlcf	___ftadd@f1,f,c
  5297  0015D2  3631               	rlcf	___ftadd@f1+1,f,c
  5298  0015D4  3632               	rlcf	___ftadd@f1+2,f,c
  5299  0015D6  063B               	decf	___ftadd@exp1,f,c
  5300  0015D8  503B               	movf	___ftadd@exp1,w,c
  5301  0015DA  183A               	xorwf	___ftadd@exp2,w,c
  5302  0015DC  B4D8               	btfsc	status,2,c
  5303  0015DE  D00D               	goto	l2130
  5304  0015E0  0639               	decf	___ftadd@sign,f,c
  5305  0015E2  C039  F036         	movff	___ftadd@sign,??___ftadd
  5306  0015E6  0E07               	movlw	7
  5307  0015E8  1636               	andwf	??___ftadd,f,c
  5308  0015EA  B4D8               	btfsc	status,2,c
  5309  0015EC  D006               	goto	l2130
  5310  0015EE  D7EF               	goto	l2122
  5311  0015F0                     l2128:
  5312  0015F0  90D8               	bcf	status,0,c
  5313  0015F2  3235               	rrcf	___ftadd@f2+2,f,c
  5314  0015F4  3234               	rrcf	___ftadd@f2+1,f,c
  5315  0015F6  3233               	rrcf	___ftadd@f2,f,c
  5316  0015F8  2A3A               	incf	___ftadd@exp2,f,c
  5317  0015FA                     l2130:
  5318  0015FA  503A               	movf	___ftadd@exp2,w,c
  5319  0015FC  183B               	xorwf	___ftadd@exp1,w,c
  5320  0015FE  A4D8               	btfss	status,2,c
  5321  001600  D7F7               	goto	l2128
  5322  001602                     l549:
  5323  001602  AE39               	btfss	___ftadd@sign,7,c
  5324  001604  D00C               	goto	l558
  5325  001606  0EFF               	movlw	255
  5326  001608  1A30               	xorwf	___ftadd@f1,f,c
  5327  00160A  0EFF               	movlw	255
  5328  00160C  1A31               	xorwf	___ftadd@f1+1,f,c
  5329  00160E  0EFF               	movlw	255
  5330  001610  1A32               	xorwf	___ftadd@f1+2,f,c
  5331  001612  0E01               	movlw	1
  5332  001614  2630               	addwf	___ftadd@f1,f,c
  5333  001616  0E00               	movlw	0
  5334  001618  2231               	addwfc	___ftadd@f1+1,f,c
  5335  00161A  0E00               	movlw	0
  5336  00161C  2232               	addwfc	___ftadd@f1+2,f,c
  5337  00161E                     l558:
  5338  00161E  AC39               	btfss	___ftadd@sign,6,c
  5339  001620  D00C               	goto	l2136
  5340  001622  0EFF               	movlw	255
  5341  001624  1A33               	xorwf	___ftadd@f2,f,c
  5342  001626  0EFF               	movlw	255
  5343  001628  1A34               	xorwf	___ftadd@f2+1,f,c
  5344  00162A  0EFF               	movlw	255
  5345  00162C  1A35               	xorwf	___ftadd@f2+2,f,c
  5346  00162E  0E01               	movlw	1
  5347  001630  2633               	addwf	___ftadd@f2,f,c
  5348  001632  0E00               	movlw	0
  5349  001634  2234               	addwfc	___ftadd@f2+1,f,c
  5350  001636  0E00               	movlw	0
  5351  001638  2235               	addwfc	___ftadd@f2+2,f,c
  5352  00163A                     l2136:
  5353  00163A  0E00               	movlw	0
  5354  00163C  6E39               	movwf	___ftadd@sign,c
  5355  00163E  5030               	movf	___ftadd@f1,w,c
  5356  001640  2633               	addwf	___ftadd@f2,f,c
  5357  001642  5031               	movf	___ftadd@f1+1,w,c
  5358  001644  2234               	addwfc	___ftadd@f2+1,f,c
  5359  001646  5032               	movf	___ftadd@f1+2,w,c
  5360  001648  2235               	addwfc	___ftadd@f2+2,f,c
  5361  00164A  AE35               	btfss	___ftadd@f2+2,7,c
  5362  00164C  D00E               	goto	l2146
  5363  00164E  0EFF               	movlw	255
  5364  001650  1A33               	xorwf	___ftadd@f2,f,c
  5365  001652  0EFF               	movlw	255
  5366  001654  1A34               	xorwf	___ftadd@f2+1,f,c
  5367  001656  0EFF               	movlw	255
  5368  001658  1A35               	xorwf	___ftadd@f2+2,f,c
  5369  00165A  0E01               	movlw	1
  5370  00165C  2633               	addwf	___ftadd@f2,f,c
  5371  00165E  0E00               	movlw	0
  5372  001660  2234               	addwfc	___ftadd@f2+1,f,c
  5373  001662  0E00               	movlw	0
  5374  001664  2235               	addwfc	___ftadd@f2+2,f,c
  5375  001666  0E01               	movlw	1
  5376  001668  6E39               	movwf	___ftadd@sign,c
  5377  00166A                     l2146:
  5378  00166A  C033  F00F         	movff	___ftadd@f2,___ftpack@arg
  5379  00166E  C034  F010         	movff	___ftadd@f2+1,___ftpack@arg+1
  5380  001672  C035  F011         	movff	___ftadd@f2+2,___ftpack@arg+2
  5381  001676  C03B  F012         	movff	___ftadd@exp1,___ftpack@exp
  5382  00167A  C039  F013         	movff	___ftadd@sign,___ftpack@sign
  5383  00167E  EC4B  F00F         	call	___ftpack	;wreg free
  5384  001682  C00F  F030         	movff	?___ftpack,?___ftadd
  5385  001686  C010  F031         	movff	?___ftpack+1,?___ftadd+1
  5386  00168A  C011  F032         	movff	?___ftpack+2,?___ftadd+2
  5387  00168E  0012               	return	
  5388  001690                     __end_of___ftadd:
  5389                           	opt stack 0
  5390                           tblptru	equ	0xFF8
  5391                           tblptrh	equ	0xFF7
  5392                           tblptrl	equ	0xFF6
  5393                           tablat	equ	0xFF5
  5394                           prodh	equ	0xFF4
  5395                           prodl	equ	0xFF3
  5396                           intcon	equ	0xFF2
  5397                           postinc0	equ	0xFEE
  5398                           wreg	equ	0xFE8
  5399                           postdec1	equ	0xFE5
  5400                           fsr1l	equ	0xFE1
  5401                           indf2	equ	0xFDF
  5402                           postinc2	equ	0xFDE
  5403                           postdec2	equ	0xFDD
  5404                           fsr2h	equ	0xFDA
  5405                           fsr2l	equ	0xFD9
  5406                           status	equ	0xFD8
  5407                           
  5408 ;; *************** function ___awtoft *****************
  5409 ;; Defined at:
  5410 ;;		line 32 in file "/Applications/microchip/xc8/v1.36/sources/common/awtoft.c"
  5411 ;; Parameters:    Size  Location     Type
  5412 ;;  c               2   28[COMRAM] int 
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;  sign            1   31[COMRAM] unsigned char 
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  3   28[COMRAM] float 
  5417 ;; Registers used:
  5418 ;;		wreg, status,2, status,0, cstack
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5424 ;;      Params:         3       0       0       0       0       0       0       0       0
  5425 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5426 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5427 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5428 ;;Total ram usage:        4 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; Hardware stack levels required when called:    2
  5431 ;; This function calls:
  5432 ;;		___ftpack
  5433 ;; This function is called by:
  5434 ;;		_fsm
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text28
  5439  0025D8                     __ptext28:
  5440                           	opt stack 0
  5441  0025D8                     ___awtoft:
  5442                           	opt stack 27
  5443                           
  5444                           ;incstack = 0
  5445  0025D8  0E00               	movlw	0
  5446  0025DA  6E20               	movwf	___awtoft@sign,c
  5447  0025DC  AE1E               	btfss	___awtoft@c+1,7,c
  5448  0025DE  D006               	goto	l2242
  5449  0025E0  6C1D               	negf	___awtoft@c,c
  5450  0025E2  1E1E               	comf	___awtoft@c+1,f,c
  5451  0025E4  B0D8               	btfsc	status,0,c
  5452  0025E6  2A1E               	incf	___awtoft@c+1,f,c
  5453  0025E8  0E01               	movlw	1
  5454  0025EA  6E20               	movwf	___awtoft@sign,c
  5455  0025EC                     l2242:
  5456  0025EC  C01D  F00F         	movff	___awtoft@c,___ftpack@arg
  5457  0025F0  C01E  F010         	movff	___awtoft@c+1,___ftpack@arg+1
  5458  0025F4  6A11               	clrf	___ftpack@arg+2,c
  5459  0025F6  0E8E               	movlw	142
  5460  0025F8  6E12               	movwf	___ftpack@exp,c
  5461  0025FA  C020  F013         	movff	___awtoft@sign,___ftpack@sign
  5462  0025FE  EC4B  F00F         	call	___ftpack	;wreg free
  5463  002602  C00F  F01D         	movff	?___ftpack,?___awtoft
  5464  002606  C010  F01E         	movff	?___ftpack+1,?___awtoft+1
  5465  00260A  C011  F01F         	movff	?___ftpack+2,?___awtoft+2
  5466  00260E  0012               	return	
  5467  002610                     __end_of___awtoft:
  5468                           	opt stack 0
  5469                           tblptru	equ	0xFF8
  5470                           tblptrh	equ	0xFF7
  5471                           tblptrl	equ	0xFF6
  5472                           tablat	equ	0xFF5
  5473                           prodh	equ	0xFF4
  5474                           prodl	equ	0xFF3
  5475                           intcon	equ	0xFF2
  5476                           postinc0	equ	0xFEE
  5477                           wreg	equ	0xFE8
  5478                           postdec1	equ	0xFE5
  5479                           fsr1l	equ	0xFE1
  5480                           indf2	equ	0xFDF
  5481                           postinc2	equ	0xFDE
  5482                           postdec2	equ	0xFDD
  5483                           fsr2h	equ	0xFDA
  5484                           fsr2l	equ	0xFD9
  5485                           status	equ	0xFD8
  5486                           
  5487 ;; *************** function ___ftpack *****************
  5488 ;; Defined at:
  5489 ;;		line 62 in file "/Applications/microchip/xc8/v1.36/sources/common/float.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  arg             3   14[COMRAM] unsigned um
  5492 ;;  exp             1   17[COMRAM] unsigned char 
  5493 ;;  sign            1   18[COMRAM] unsigned char 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;		None
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  3   14[COMRAM] float 
  5498 ;; Registers used:
  5499 ;;		wreg, status,2, status,0
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5505 ;;      Params:         5       0       0       0       0       0       0       0       0
  5506 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5507 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5508 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5509 ;;Total ram usage:        8 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    1
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		___altoft
  5516 ;;		___awtoft
  5517 ;;		___ftadd
  5518 ;;		___ftdiv
  5519 ;;		___ftmul
  5520 ;;		___lbtoft
  5521 ;;		___lwtoft
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text29
  5526  001E96                     __ptext29:
  5527                           	opt stack 0
  5528  001E96                     ___ftpack:
  5529                           	opt stack 27
  5530                           
  5531                           ;incstack = 0
  5532  001E96  5012               	movf	___ftpack@exp,w,c
  5533  001E98  B4D8               	btfsc	status,2,c
  5534  001E9A  D005               	goto	l1728
  5535  001E9C  500F               	movf	___ftpack@arg,w,c
  5536  001E9E  1010               	iorwf	___ftpack@arg+1,w,c
  5537  001EA0  1011               	iorwf	___ftpack@arg+2,w,c
  5538  001EA2  A4D8               	btfss	status,2,c
  5539  001EA4  D00C               	goto	l1734
  5540  001EA6                     l1728:
  5541  001EA6  0E00               	movlw	0
  5542  001EA8  6E0F               	movwf	?___ftpack,c
  5543  001EAA  0E00               	movlw	0
  5544  001EAC  6E10               	movwf	?___ftpack+1,c
  5545  001EAE  0E00               	movlw	0
  5546  001EB0  6E11               	movwf	?___ftpack+2,c
  5547  001EB2  0012               	return	
  5548  001EB4                     l1732:
  5549  001EB4  2A12               	incf	___ftpack@exp,f,c
  5550  001EB6  90D8               	bcf	status,0,c
  5551  001EB8  3211               	rrcf	___ftpack@arg+2,f,c
  5552  001EBA  3210               	rrcf	___ftpack@arg+1,f,c
  5553  001EBC  320F               	rrcf	___ftpack@arg,f,c
  5554  001EBE                     l1734:
  5555  001EBE  0E00               	movlw	0
  5556  001EC0  140F               	andwf	___ftpack@arg,w,c
  5557  001EC2  6E14               	movwf	??___ftpack& (0+255),c
  5558  001EC4  0E00               	movlw	0
  5559  001EC6  1410               	andwf	___ftpack@arg+1,w,c
  5560  001EC8  6E15               	movwf	(??___ftpack+1)& (0+255),c
  5561  001ECA  0EFE               	movlw	254
  5562  001ECC  1411               	andwf	___ftpack@arg+2,w,c
  5563  001ECE  6E16               	movwf	(??___ftpack+2)& (0+255),c
  5564  001ED0  5014               	movf	??___ftpack,w,c
  5565  001ED2  1015               	iorwf	??___ftpack+1,w,c
  5566  001ED4  1016               	iorwf	??___ftpack+2,w,c
  5567  001ED6  B4D8               	btfsc	status,2,c
  5568  001ED8  D00C               	goto	l1740
  5569  001EDA  D7EC               	goto	l1732
  5570  001EDC                     l1736:
  5571  001EDC  2A12               	incf	___ftpack@exp,f,c
  5572  001EDE  0E01               	movlw	1
  5573  001EE0  260F               	addwf	___ftpack@arg,f,c
  5574  001EE2  0E00               	movlw	0
  5575  001EE4  2210               	addwfc	___ftpack@arg+1,f,c
  5576  001EE6  0E00               	movlw	0
  5577  001EE8  2211               	addwfc	___ftpack@arg+2,f,c
  5578  001EEA  90D8               	bcf	status,0,c
  5579  001EEC  3211               	rrcf	___ftpack@arg+2,f,c
  5580  001EEE  3210               	rrcf	___ftpack@arg+1,f,c
  5581  001EF0  320F               	rrcf	___ftpack@arg,f,c
  5582  001EF2                     l1740:
  5583  001EF2  0E00               	movlw	0
  5584  001EF4  140F               	andwf	___ftpack@arg,w,c
  5585  001EF6  6E14               	movwf	??___ftpack& (0+255),c
  5586  001EF8  0E00               	movlw	0
  5587  001EFA  1410               	andwf	___ftpack@arg+1,w,c
  5588  001EFC  6E15               	movwf	(??___ftpack+1)& (0+255),c
  5589  001EFE  0EFF               	movlw	255
  5590  001F00  1411               	andwf	___ftpack@arg+2,w,c
  5591  001F02  6E16               	movwf	(??___ftpack+2)& (0+255),c
  5592  001F04  5014               	movf	??___ftpack,w,c
  5593  001F06  1015               	iorwf	??___ftpack+1,w,c
  5594  001F08  1016               	iorwf	??___ftpack+2,w,c
  5595  001F0A  B4D8               	btfsc	status,2,c
  5596  001F0C  D006               	goto	l1744
  5597  001F0E  D7E6               	goto	l1736
  5598  001F10                     l1742:
  5599  001F10  0612               	decf	___ftpack@exp,f,c
  5600  001F12  90D8               	bcf	status,0,c
  5601  001F14  360F               	rlcf	___ftpack@arg,f,c
  5602  001F16  3610               	rlcf	___ftpack@arg+1,f,c
  5603  001F18  3611               	rlcf	___ftpack@arg+2,f,c
  5604  001F1A                     l1744:
  5605  001F1A  BE10               	btfsc	___ftpack@arg+1,7,c
  5606  001F1C  D003               	goto	l511
  5607  001F1E  0E02               	movlw	2
  5608  001F20  6012               	cpfslt	___ftpack@exp,c
  5609  001F22  D7F6               	goto	l1742
  5610  001F24                     l511:
  5611  001F24  A012               	btfss	___ftpack@exp,0,c
  5612  001F26  9E10               	bcf	___ftpack@arg+1,7,c
  5613  001F28  90D8               	bcf	status,0,c
  5614  001F2A  3212               	rrcf	___ftpack@exp,f,c
  5615  001F2C  5012               	movf	___ftpack@exp,w,c
  5616  001F2E  1211               	iorwf	___ftpack@arg+2,f,c
  5617  001F30  5013               	movf	___ftpack@sign,w,c
  5618  001F32  A4D8               	btfss	status,2,c
  5619  001F34  8E11               	bsf	___ftpack@arg+2,7,c
  5620  001F36  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  5621  001F3A  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  5622  001F3E  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  5623  001F42  0012               	return	
  5624  001F44                     __end_of___ftpack:
  5625                           	opt stack 0
  5626                           tblptru	equ	0xFF8
  5627                           tblptrh	equ	0xFF7
  5628                           tblptrl	equ	0xFF6
  5629                           tablat	equ	0xFF5
  5630                           prodh	equ	0xFF4
  5631                           prodl	equ	0xFF3
  5632                           intcon	equ	0xFF2
  5633                           postinc0	equ	0xFEE
  5634                           wreg	equ	0xFE8
  5635                           postdec1	equ	0xFE5
  5636                           fsr1l	equ	0xFE1
  5637                           indf2	equ	0xFDF
  5638                           postinc2	equ	0xFDE
  5639                           postdec2	equ	0xFDD
  5640                           fsr2h	equ	0xFDA
  5641                           fsr2l	equ	0xFD9
  5642                           status	equ	0xFD8
  5643                           
  5644 ;; *************** function ___awmod *****************
  5645 ;; Defined at:
  5646 ;;		line 8 in file "/Applications/microchip/xc8/v1.36/sources/common/awmod.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  dividend        2   28[COMRAM] int 
  5649 ;;  divisor         2   30[COMRAM] int 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  sign            1   33[COMRAM] unsigned char 
  5652 ;;  counter         1   32[COMRAM] unsigned char 
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  2   28[COMRAM] int 
  5655 ;; Registers used:
  5656 ;;		wreg, status,2, status,0
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5662 ;;      Params:         4       0       0       0       0       0       0       0       0
  5663 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5664 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5665 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5666 ;;Total ram usage:        6 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    1
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_fsm
  5673 ;;		_PWM_ISR
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text30
  5678  00230A                     __ptext30:
  5679                           	opt stack 0
  5680  00230A                     ___awmod:
  5681                           	opt stack 28
  5682                           
  5683                           ;incstack = 0
  5684  00230A  0E00               	movlw	0
  5685  00230C  6E22               	movwf	___awmod@sign,c
  5686  00230E  AE1E               	btfss	___awmod@dividend+1,7,c
  5687  002310  D006               	goto	l2206
  5688  002312  6C1D               	negf	___awmod@dividend,c
  5689  002314  1E1E               	comf	___awmod@dividend+1,f,c
  5690  002316  B0D8               	btfsc	status,0,c
  5691  002318  2A1E               	incf	___awmod@dividend+1,f,c
  5692  00231A  0E01               	movlw	1
  5693  00231C  6E22               	movwf	___awmod@sign,c
  5694  00231E                     l2206:
  5695  00231E  AE20               	btfss	___awmod@divisor+1,7,c
  5696  002320  D004               	goto	l2210
  5697  002322  6C1F               	negf	___awmod@divisor,c
  5698  002324  1E20               	comf	___awmod@divisor+1,f,c
  5699  002326  B0D8               	btfsc	status,0,c
  5700  002328  2A20               	incf	___awmod@divisor+1,f,c
  5701  00232A                     l2210:
  5702  00232A  501F               	movf	___awmod@divisor,w,c
  5703  00232C  1020               	iorwf	___awmod@divisor+1,w,c
  5704  00232E  B4D8               	btfsc	status,2,c
  5705  002330  D018               	goto	l2226
  5706  002332  0E01               	movlw	1
  5707  002334  6E21               	movwf	___awmod@counter,c
  5708  002336  D004               	goto	l2216
  5709  002338                     l2214:
  5710  002338  90D8               	bcf	status,0,c
  5711  00233A  361F               	rlcf	___awmod@divisor,f,c
  5712  00233C  3620               	rlcf	___awmod@divisor+1,f,c
  5713  00233E  2A21               	incf	___awmod@counter,f,c
  5714  002340                     l2216:
  5715  002340  AE20               	btfss	___awmod@divisor+1,7,c
  5716  002342  D7FA               	goto	l2214
  5717  002344                     l2218:
  5718  002344  501F               	movf	___awmod@divisor,w,c
  5719  002346  5C1D               	subwf	___awmod@dividend,w,c
  5720  002348  5020               	movf	___awmod@divisor+1,w,c
  5721  00234A  581E               	subwfb	___awmod@dividend+1,w,c
  5722  00234C  A0D8               	btfss	status,0,c
  5723  00234E  D004               	goto	l2222
  5724  002350  501F               	movf	___awmod@divisor,w,c
  5725  002352  5E1D               	subwf	___awmod@dividend,f,c
  5726  002354  5020               	movf	___awmod@divisor+1,w,c
  5727  002356  5A1E               	subwfb	___awmod@dividend+1,f,c
  5728  002358                     l2222:
  5729  002358  90D8               	bcf	status,0,c
  5730  00235A  3220               	rrcf	___awmod@divisor+1,f,c
  5731  00235C  321F               	rrcf	___awmod@divisor,f,c
  5732  00235E  2E21               	decfsz	___awmod@counter,f,c
  5733  002360  D7F1               	goto	l2218
  5734  002362                     l2226:
  5735  002362  5022               	movf	___awmod@sign,w,c
  5736  002364  B4D8               	btfsc	status,2,c
  5737  002366  D004               	goto	l2230
  5738  002368  6C1D               	negf	___awmod@dividend,c
  5739  00236A  1E1E               	comf	___awmod@dividend+1,f,c
  5740  00236C  B0D8               	btfsc	status,0,c
  5741  00236E  2A1E               	incf	___awmod@dividend+1,f,c
  5742  002370                     l2230:
  5743  002370  C01D  F01D         	movff	___awmod@dividend,?___awmod
  5744  002374  C01E  F01E         	movff	___awmod@dividend+1,?___awmod+1
  5745  002378  0012               	return	
  5746  00237A                     __end_of___awmod:
  5747                           	opt stack 0
  5748                           tblptru	equ	0xFF8
  5749                           tblptrh	equ	0xFF7
  5750                           tblptrl	equ	0xFF6
  5751                           tablat	equ	0xFF5
  5752                           prodh	equ	0xFF4
  5753                           prodl	equ	0xFF3
  5754                           intcon	equ	0xFF2
  5755                           postinc0	equ	0xFEE
  5756                           wreg	equ	0xFE8
  5757                           postdec1	equ	0xFE5
  5758                           fsr1l	equ	0xFE1
  5759                           indf2	equ	0xFDF
  5760                           postinc2	equ	0xFDE
  5761                           postdec2	equ	0xFDD
  5762                           fsr2h	equ	0xFDA
  5763                           fsr2l	equ	0xFD9
  5764                           status	equ	0xFD8
  5765                           
  5766 ;; *************** function _interrupt_handler *****************
  5767 ;; Defined at:
  5768 ;;		line 76 in file "config.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;		None
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;		None
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  1    wreg      void 
  5775 ;; Registers used:
  5776 ;;		None
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5782 ;;      Params:         0       0       0       0       0       0       0       0       0
  5783 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5784 ;;      Temps:         14       0       0       0       0       0       0       0       0
  5785 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5786 ;;Total ram usage:       14 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		Interrupt level 2
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           	psect	intcode
  5796  001008                     __pintcode:
  5797                           	opt stack 0
  5798  001008                     _interrupt_handler:
  5799                           	opt stack 25
  5800                           
  5801                           ;incstack = 0
  5802  001008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5803  00100A  CFFA F001          	movff	pclath,??_interrupt_handler
  5804  00100E  CFFB F002          	movff	pclatu,??_interrupt_handler+1
  5805  001012  EDBD  F011         	call	int_func,f	;refresh shadow registers
  5806                           pclatu	equ	0xFFB
  5807                           pclath	equ	0xFFA
  5808                           tblptru	equ	0xFF8
  5809                           tblptrh	equ	0xFF7
  5810                           tblptrl	equ	0xFF6
  5811                           tablat	equ	0xFF5
  5812                           prodh	equ	0xFF4
  5813                           prodl	equ	0xFF3
  5814                           intcon	equ	0xFF2
  5815                           postinc0	equ	0xFEE
  5816                           wreg	equ	0xFE8
  5817                           postdec1	equ	0xFE5
  5818                           fsr1l	equ	0xFE1
  5819                           indf2	equ	0xFDF
  5820                           postinc2	equ	0xFDE
  5821                           postdec2	equ	0xFDD
  5822                           fsr2h	equ	0xFDA
  5823                           fsr2l	equ	0xFD9
  5824                           status	equ	0xFD8
  5825                           
  5826                           	psect	intcode_body
  5827  00237A                     __pintcode_body:
  5828                           	opt stack 25
  5829  00237A                     int_func:
  5830                           	opt stack 25
  5831  00237A  0006               	pop		; remove dummy address from shadow register refresh
  5832  00237C  CFE9 F003          	movff	fsr0l,??_interrupt_handler+2
  5833  002380  CFEA F004          	movff	fsr0h,??_interrupt_handler+3
  5834  002384  CFE1 F005          	movff	fsr1l,??_interrupt_handler+4
  5835  002388  CFE2 F006          	movff	fsr1h,??_interrupt_handler+5
  5836  00238C  CFD9 F007          	movff	fsr2l,??_interrupt_handler+6
  5837  002390  CFDA F008          	movff	fsr2h,??_interrupt_handler+7
  5838  002394  CFF3 F009          	movff	prodl,??_interrupt_handler+8
  5839  002398  CFF4 F00A          	movff	prodh,??_interrupt_handler+9
  5840  00239C  CFF6 F00B          	movff	tblptrl,??_interrupt_handler+10
  5841  0023A0  CFF7 F00C          	movff	tblptrh,??_interrupt_handler+11
  5842  0023A4  CFF8 F00D          	movff	tblptru,??_interrupt_handler+12
  5843  0023A8  CFF5 F00E          	movff	tablat,??_interrupt_handler+13
  5844  0023AC  C00E  FFF5         	movff	??_interrupt_handler+13,tablat
  5845  0023B0  C00D  FFF8         	movff	??_interrupt_handler+12,tblptru
  5846  0023B4  C00C  FFF7         	movff	??_interrupt_handler+11,tblptrh
  5847  0023B8  C00B  FFF6         	movff	??_interrupt_handler+10,tblptrl
  5848  0023BC  C00A  FFF4         	movff	??_interrupt_handler+9,prodh
  5849  0023C0  C009  FFF3         	movff	??_interrupt_handler+8,prodl
  5850  0023C4  C008  FFDA         	movff	??_interrupt_handler+7,fsr2h
  5851  0023C8  C007  FFD9         	movff	??_interrupt_handler+6,fsr2l
  5852  0023CC  C006  FFE2         	movff	??_interrupt_handler+5,fsr1h
  5853  0023D0  C005  FFE1         	movff	??_interrupt_handler+4,fsr1l
  5854  0023D4  C004  FFEA         	movff	??_interrupt_handler+3,fsr0h
  5855  0023D8  C003  FFE9         	movff	??_interrupt_handler+2,fsr0l
  5856  0023DC  C002  FFFB         	movff	??_interrupt_handler+1,pclatu
  5857  0023E0  C001  FFFA         	movff	??_interrupt_handler,pclath
  5858  0023E4  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5859  0023E6  0011               	retfie		f
  5860  0023E8                     __end_of_interrupt_handler:
  5861                           	opt stack 0
  5862                           pclatu	equ	0xFFB
  5863                           pclath	equ	0xFFA
  5864                           tblptru	equ	0xFF8
  5865                           tblptrh	equ	0xFF7
  5866                           tblptrl	equ	0xFF6
  5867                           tablat	equ	0xFF5
  5868                           prodh	equ	0xFF4
  5869                           prodl	equ	0xFF3
  5870                           intcon	equ	0xFF2
  5871                           postinc0	equ	0xFEE
  5872                           fsr0h	equ	0xFEA
  5873                           fsr0l	equ	0xFE9
  5874                           wreg	equ	0xFE8
  5875                           postdec1	equ	0xFE5
  5876                           fsr1h	equ	0xFE2
  5877                           fsr1l	equ	0xFE1
  5878                           indf2	equ	0xFDF
  5879                           postinc2	equ	0xFDE
  5880                           postdec2	equ	0xFDD
  5881                           fsr2h	equ	0xFDA
  5882                           fsr2l	equ	0xFD9
  5883                           status	equ	0xFD8
  5884                           pclatu	equ	0xFFB
  5885                           pclath	equ	0xFFA
  5886                           tblptru	equ	0xFF8
  5887                           tblptrh	equ	0xFF7
  5888                           tblptrl	equ	0xFF6
  5889                           tablat	equ	0xFF5
  5890                           prodh	equ	0xFF4
  5891                           prodl	equ	0xFF3
  5892                           intcon	equ	0xFF2
  5893                           postinc0	equ	0xFEE
  5894                           fsr0h	equ	0xFEA
  5895                           fsr0l	equ	0xFE9
  5896                           wreg	equ	0xFE8
  5897                           postdec1	equ	0xFE5
  5898                           fsr1h	equ	0xFE2
  5899                           fsr1l	equ	0xFE1
  5900                           indf2	equ	0xFDF
  5901                           postinc2	equ	0xFDE
  5902                           postdec2	equ	0xFDD
  5903                           fsr2h	equ	0xFDA
  5904                           fsr2l	equ	0xFD9
  5905                           status	equ	0xFD8
  5906                           
  5907                           	psect	rparam
  5908  0000                     pclatu	equ	0xFFB
  5909                           pclath	equ	0xFFA
  5910                           tblptru	equ	0xFF8
  5911                           tblptrh	equ	0xFF7
  5912                           tblptrl	equ	0xFF6
  5913                           tablat	equ	0xFF5
  5914                           prodh	equ	0xFF4
  5915                           prodl	equ	0xFF3
  5916                           intcon	equ	0xFF2
  5917                           postinc0	equ	0xFEE
  5918                           fsr0h	equ	0xFEA
  5919                           fsr0l	equ	0xFE9
  5920                           wreg	equ	0xFE8
  5921                           postdec1	equ	0xFE5
  5922                           fsr1h	equ	0xFE2
  5923                           fsr1l	equ	0xFE1
  5924                           indf2	equ	0xFDF
  5925                           postinc2	equ	0xFDE
  5926                           postdec2	equ	0xFDD
  5927                           fsr2h	equ	0xFDA
  5928                           fsr2l	equ	0xFD9
  5929                           status	equ	0xFD8
  5930                           
  5931                           	psect	temp
  5932  000051                     btemp:
  5933                           	opt stack 0
  5934  000051                     	ds	1
  5935  0000                     int$flags	set	btemp
  5936                           pclatu	equ	0xFFB
  5937                           pclath	equ	0xFFA
  5938                           tblptru	equ	0xFF8
  5939                           tblptrh	equ	0xFF7
  5940                           tblptrl	equ	0xFF6
  5941                           tablat	equ	0xFF5
  5942                           prodh	equ	0xFF4
  5943                           prodl	equ	0xFF3
  5944                           intcon	equ	0xFF2
  5945                           postinc0	equ	0xFEE
  5946                           fsr0h	equ	0xFEA
  5947                           fsr0l	equ	0xFE9
  5948                           wreg	equ	0xFE8
  5949                           postdec1	equ	0xFE5
  5950                           fsr1h	equ	0xFE2
  5951                           fsr1l	equ	0xFE1
  5952                           indf2	equ	0xFDF
  5953                           postinc2	equ	0xFDE
  5954                           postdec2	equ	0xFDD
  5955                           fsr2h	equ	0xFDA
  5956                           fsr2l	equ	0xFD9
  5957                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    6
    Data        624
    BSS         28
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     71      80
    BANK0           160     23     153
    BANK1           256      0     212
    BANK2           256      0     156
    BANK3           256      0     156
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _multiplex->_go_through_cols
    _go_through_cols->_myDelay_us
    _init->___lwtoft
    _hardware_init->_OpenTimer0
    ___lwtoft->___ftpack
    _fsm->_stepper_pulse
    _superMario->_buzz
    _stepper_pulse->_myDelay_us
    _rand->___lmul
    _nothingElseMatters->_buzz
    _buzz->_myDelay_us
    _myDelay_us->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___altoft
    ___altoft->___ftpack
    ___aldiv->___lmul
    ___lbtoft->___ftpack
    ___ftmul->___awtoft
    ___ftge->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul
    ___awtoft->_rand
    ___awmod->_rand

Critical Paths under _interrupt_handler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_fsm
    _fsm->_nothingElseMatters
    _fsm->_superMario
    _superMario->_buzz
    _nothingElseMatters->_buzz

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_handler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_handler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_handler in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   51256
                                _fsm
                               _init
                          _multiplex
 ---------------------------------------------------------------------------------
 (1) _multiplex                                            0     0      0     454
                    _go_through_cols
 ---------------------------------------------------------------------------------
 (2) _go_through_cols                                      4     4      0     454
                                             66 COMRAM     4     4      0
                         _myDelay_us
 ---------------------------------------------------------------------------------
 (1) _init                                                 3     3      0    2317
                                             25 COMRAM     3     3      0
                           ___lwtoft
                      _hardware_init
 ---------------------------------------------------------------------------------
 (2) _hardware_init                                        0     0      0      44
                         _OpenTimer0
 ---------------------------------------------------------------------------------
 (3) _OpenTimer0                                           3     3      0      44
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2273
                                             22 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _fsm                                                  5     5      0   48485
                                             18 BANK0      5     5      0
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                           ___lbtoft
                            ___lwmod
                               _buzz
                 _nothingElseMatters
                               _rand
                         _setAllLeds
                      _stepper_pulse
                         _superMario
 ---------------------------------------------------------------------------------
 (2) _superMario                                           4     2      2    9194
                                             68 COMRAM     2     0      2
                                             16 BANK0      2     2      0
                            ___lwdiv
                               _buzz
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _stepper_pulse                                        5     2      3    4670
                                             66 COMRAM     5     2      3
                            ___ftdiv
                            ___fttol
                            ___lwmod
                         _myDelay_us
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     415
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _setAllLeds                                           2     2      0      90
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     450
                                             26 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _nothingElseMatters                                   4     2      2    9191
                                             68 COMRAM     2     0      2
                                             16 BANK0      2     2      0
                             ___wmul
                               _buzz
 ---------------------------------------------------------------------------------
 (3) _buzz                                                18    12      6    8765
                                             66 COMRAM     2     2      0
                                              0 BANK0     16    10      6
                            ___aldiv
                           ___altoft
                            ___ftdiv
                            ___fttol
                             ___lmul
                            ___lwdiv (ARG)
                             ___wmul (ARG)
                         _myDelay_ms
                         _myDelay_us
 ---------------------------------------------------------------------------------
 (3) _myDelay_us                                           4     2      2     366
                                             62 COMRAM     4     2      2
                            ___ftdiv (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _myDelay_ms                                           5     3      2     110
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     450
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     444
                                             47 COMRAM    15    11      4
                           ___altoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    3209
                                             32 COMRAM    15     9      6
                           ___altoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    2389
                                             22 COMRAM    10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     428
                                             26 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2209
                                             22 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2871
                                             32 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     392
                                             59 COMRAM     9     3      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3615
                                             47 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2534
                                             28 COMRAM     4     1      3
                           ___ftpack
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2187
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     552
                                             28 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupt_handler                                   14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fsm
     ___awmod
       _rand (ARG)
         ___lmul
     ___awtoft
       ___ftpack
       _rand (ARG)
         ___lmul
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
         _rand (ARG)
           ___lmul
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           _rand (ARG)
             ___lmul
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
         _rand (ARG)
           ___lmul
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _rand (ARG)
             ___lmul
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _rand (ARG)
               ___lmul
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           _rand (ARG)
             ___lmul
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
         _rand (ARG)
           ___lmul
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
     ___lwmod
     _buzz
       ___aldiv
         ___lmul (ARG)
       ___altoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___lmul
       ___lwdiv (ARG)
       ___wmul (ARG)
       _myDelay_ms (ARG)
       _myDelay_us (ARG)
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
     _nothingElseMatters
       ___wmul
       _buzz
         ___aldiv
           ___lmul (ARG)
         ___altoft
           ___ftpack
         ___ftdiv
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___lmul
         ___lwdiv (ARG)
         ___wmul (ARG)
         _myDelay_ms (ARG)
         _myDelay_us (ARG)
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _rand
       ___lmul
     _setAllLeds
     _stepper_pulse
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___lwmod
       _myDelay_us
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
     _superMario
       ___lwdiv
       _buzz
         ___aldiv
           ___lmul (ARG)
         ___altoft
           ___ftpack
         ___ftdiv
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___lmul
         ___lwdiv (ARG)
         ___wmul (ARG)
         _myDelay_ms (ARG)
         _myDelay_us (ARG)
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
   _init
     ___lwtoft
       ___ftpack
     _hardware_init
       _OpenTimer0
   _multiplex
     _go_through_cols
       _myDelay_us
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      9C      11       60.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      9C       9       60.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D4       7       82.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     17      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     47      50       1       85.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2F5      20        0.0%
DATA                 0      0     2F5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Apr 21 12:23:20 2016

                   ___altoft@exp 001F                    ___altoft@sign 0020  
       __size_of_go_through_cols 008E              ___wmul@multiplicand 0011  
                   ___ftadd@exp1 003B                     ___ftadd@exp2 003A  
                   ___ftadd@sign 0039                              l211 1AA4  
                            l212 1AA6                              l208 14E2  
                            l511 1F24                              l264 262E  
                            l168 10BE                              l273 176C  
                            l177 114E                              l258 26EC  
                            l196 121A                              l534 1528  
                            l538 1552                              l549 1602  
                            l558 161E                              l569 1A60  
                            l689 253A                              l699 25CE  
                            _fsm 1022                     ___awmod@sign 0022  
                            prod 000FF3                              wreg 000FE8  
                    _total_steps 101F                     ___ftdiv@cntr 002A  
                   ___ftdiv@sign 002F                             l2002 25C4  
                           l2020 1B24                             l2110 1590  
                           l2120 15C6                             l2032 2674  
                           l2210 232A                             l2130 15FA  
                           l2122 15CE                             l2116 15B2  
                           l2028 266C                             l2230 2370  
                           l2222 2358                             l2214 2338  
                           l2206 231E                             l2118 15BC  
                           l2216 2340                             l2136 163A  
                           l2128 15F0                             l2218 2344  
                           l2226 2362                             l2242 25EC  
                           l2146 166A                             l2250 20AC  
                           l2162 1908                             l2260 2108  
                           l2180 194A                             l2156 18E0  
                           l2500 1796                             l2094 1560  
                           l2254 20DC                             l2190 1972  
                           l2088 1536                             l2176 193A  
                           l2512 1024                             l2186 1962  
                           l1802 1C9E                             l2602 11D8  
                           l1740 1EF2                             l1732 1EB4  
                           l1804 1CAA                             l2620 126A  
                           l2612 11F8                             l2604 11E0  
                           l1742 1F10                             l1734 1EBE  
                           l1822 1D02                             l1814 1CDE  
                           l1806 1CAE                             l2630 12A0  
                           l2518 1058                             l1744 1F1A  
                           l1736 1EDC                             l1728 1EA6  
                           l1912 1856                             l2640 13F4  
                           l2616 121E                             l2608 11E6  
                           l1818 1CEC                             l1834 22B4  
                           l1930 18A6                             l1922 187E  
                           l1762 26E0                             l2490 16B2  
                           l2626 1296                             l2554 10F8  
                           l2546 10D4                             l1836 22C0  
                           l1924 188A                             l1916 1866  
                           l2644 1414                             l2636 13EE  
                           l1790 1C64                             l1854 19FC  
                           l1926 1890                             l1774 2458  
                           l2654 1454                             l2646 141C  
                           l2558 110A                             l2670 14A0  
                           l1848 19D4                             l1768 261A  
                           l2592 11AE                             l2584 1184  
                           l2576 116A                             l2568 1136  
                           l1874 1A3A                             l1778 246C  
                           l2666 1498                             l2586 118C  
                           l2578 1172                             l2674 2722  
                           l1796 1C7C                             l2596 11B8  
                           l1894 17F0                             l1974 2508  
                           l1976 2510                             l1994 25A4  
                           l1986 2530                             l1978 2514  
                           ?_fsm 0001                             l1996 25AC  
                           l1998 25B0                             u2115 1DA4  
                           u1510 180E                             u1441 19BC  
                           u1515 1806                             u1461 19E4  
                           u2440 103C                             u1570 24D6  
                           u1491 17D4                             u1660 1AA0  
                           u1741 14F4                             u2446 103E  
                           u1751 1508                             u2551 1144  
                           u2640 1210                             u1578 24D8  
                           u2571 1160                             u2717 26E2  
                           u1951 18C8                             u2727 2620  
                           u1971 18F0                             _LEDs 00C0  
                           _main 271E                     ___ftpack@arg 000F  
                           _init 1D14                             _buzz 1690  
                           _rand 2544                     ___ftpack@exp 0012  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             fsm@i 00EE  
                           btemp 0051           __size_of_stepper_pulse 00E2  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                             start 1016  
                   ___ftmul@cntr 002E                     ___param_bank 000010  
                   ___ftmul@sign 002F                     ___fttol@exp1 003E  
                          ??_fsm 0048                     ___fttol@lval 003A  
                __end_of___aldiv 1D14                            ?_main 0001  
                          ?_init 0001                            ?_buzz 00D9  
                          ?_rand 001B                  __end_of___ftadd 1690  
                __end_of___awmod 237A                  __end_of___ftdiv 1A92  
                __end_of___ftmul 19AC                  __end_of___fttol 18B8  
                __end_of___lwdiv 2544                  __end_of___lwmod 25D8  
                ??_hardware_init 0012                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE              ___lmul@multiplicand 0013  
                  ___awtoft@sign 0020                            _randx 0048  
                  ___ftpack@sign 0013       __end_of_nothingElseMatters 2292  
                          buzz@i 00E3                            tablat 000FF5  
                          status 000FD8                  __initialization 1DD6  
                   __end_of_main 272C                     __end_of_init 1DD6  
                   __end_of_buzz 17C4                     __end_of_rand 2596  
                  _steps_per_led 00F3                           ??_main 0048  
                  ___fttol@sign1 0039                           ??_init 001A  
                         ??_buzz 0043                           ??_rand 001D  
                  _stepper_pulse 1A92                    __activetblptr 000002  
              ??_go_through_cols 0043                           _ADCON1 000FC1  
               __end_of___altoft 230A                 __end_of___awtoft 2610  
               __end_of___ftpack 1F44                 __end_of___lbtoft 271E  
                     _OpenTimer0 249E                 __end_of___lwtoft 26D6  
                    myDelay_ms@i 0012                      myDelay_us@i 0041  
                         ___ftge 207C                           ___lmul 2448  
                      ??___aldiv 0023                           ___wmul 268C  
                      ??___ftadd 0036                        ??___awmod 0021  
                      ??___ftdiv 0027                        ??___ftmul 0027  
                      ??___fttol 0034                        ??___lwdiv 0013  
                      ??___lwmod 0013                      buzz@repeats 00DF  
                         clear_0 1DDC                  ___awmod@divisor 001F  
                         _target 00D7                   ?_stepper_pulse 0043  
                ___awmod@counter 0021            ___ftmul@f3_as_product 002B  
                   __pdataCOMRAM 0048            go_through_cols@offset 0046  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                  _last_new_note 101B                       __accesstop 0060  
        __end_of__initialization 1E88                       ___altoft@c 0017  
                     ___ftadd@f1 0030                       ___ftadd@f2 0033  
                     ___ftge@ff1 003C                       ___ftge@ff2 003F  
                  ___rparam_used 000001                       ___ftdiv@f1 0021  
                     ___ftdiv@f2 0024                       ___ftdiv@f3 002B  
                     ___awtoft@c 001D                       ___lbtoft@c 001A  
                     ___ftmul@f1 0021                       ___ftmul@f2 0024  
                  _last_win_note 101D                       ___fttol@f1 0030  
                 __pcstackCOMRAM 0001                     __pidataBANK0 23E8  
                   __pidataBANK1 1B74                     __pidataBANK2 1F44  
                   __pidataBANK3 1FE0                       ___lwtoft@c 0017  
                    setAllLeds@i 0010                       __pbssBANK0 00C0  
                    ?_OpenTimer0 0001                    _current_state 00D6  
_nothingElseMattersFullDurations 0148                       __pnvCOMRAM 004F  
                        ?___ftge 003C                          ?___lmul 000F  
                        ?___wmul 000F                  ??_stepper_pulse 0046  
                      ?___altoft 0017                   ___lmul@product 0017  
                      ?___awtoft 001D                        ?___ftpack 000F  
                      ?___lbtoft 0017                       _hard_speed 00F0  
                      ?___lwtoft 0017               __size_of_multiplex 002A  
                   myDelay_ms@ms 000F                     myDelay_us@us 003F  
              _stepper_direction 004F                          __Hparam 0000  
                        __Lparam 0000               _nothingElseMatters 2216  
                        ___aldiv 1C48                       _myDelay_ms 2610  
                     _myDelay_us 26D6                  __size_of___ftge 0090  
                __size_of___lmul 0056                          ___ftadd 14E4  
                _go_through_cols 210C                          ___awmod 230A  
                        ___ftdiv 19AC                  __size_of___wmul 0026  
                        ___ftmul 18B8                          ___fttol 17C4  
                        ___lwdiv 24F2                          ___lwmod 2596  
                   __psmallconst 101A                       ??___altoft 001B  
                        __pcinit 1DD6                       ??___awtoft 0020  
                     ??___ftpack 0014                       ??___lbtoft 001A  
                   buzz@duration 00DD                          __ramtop 0800  
            __size_of_OpenTimer0 0054                          __ptext0 271E  
                        __ptext1 263C                          __ptext2 210C  
                        __ptext3 1D14                          __ptext4 272C  
                        __ptext5 249E                          __ptext6 26B2  
                        __ptext7 1022                          __ptext8 219A  
                        __ptext9 24F2              ?_nothingElseMatters 0045  
                     ??___lwtoft 001A                        _T0CONbits 000FD5  
                      _T1CONbits 000FCD                          _counter 004D  
                   __size_of_fsm 04C2                 ___awmod@dividend 001D  
               ___aldiv@dividend 001B            __end_of_hardware_init 2738  
                     _setAllLeds 2666                   __pintcode_body 237A  
           end_of_initialization 1E88                    __Lmediumconst 0000  
           ??_nothingElseMatters 00E9                          int_func 237A  
        nothingElseMatters@index 0045           _imperialMarchDurations 0100  
              __end_of_multiplex 2666               _imperialMarchNotes 0060  
               ___aldiv@quotient 0025                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE              _superMarioDurations 0300  
                      _PORTAbits 000F80                        _PORTBbits 000F81  
                      _TRISAbits 000F92                        _TRISBbits 000F93  
                      _TRISCbits 000F94               stepper_pulse@speed 0043  
                    ___ftdiv@exp 002E          __end_of_go_through_cols 219A  
                     _superMario 219A                 _state_to_recover 004E  
                    ___ftmul@exp 002A                      ?_myDelay_ms 000F  
                    ?_myDelay_us 003F                   __end_of___ftge 210C  
                 __end_of___lmul 249E                   __end_of___wmul 26B2  
                  __pidataCOMRAM 2738              start_initialization 1DD6  
                    ?_setAllLeds 0001                      __end_of_fsm 14E4  
                   ??_OpenTimer0 000F                   buzz@halfPeriod 00E7  
                       ??___ftge 0042                         ??___lmul 0017  
                       ??___wmul 0013                      __pdataBANK0 0060  
                    __pdataBANK1 0100                      __pdataBANK2 0200  
                    __pdataBANK3 0300               __end_of_OpenTimer0 24F2  
              __size_of___altoft 0078                __size_of___awtoft 0038  
              __size_of___ftpack 00AE                __size_of___lbtoft 0024  
                    __pbssCOMRAM 004C                __size_of___lwtoft 0024  
                  __pcstackBANK0 00D9              __size_of_myDelay_ms 002C  
            __size_of_myDelay_us 0024                        __pnvBANK0 00F0  
               ?_go_through_cols 0001                      ?_superMario 0045  
               ___lwdiv@dividend 000F              __size_of_setAllLeds 0026  
                      __pintcode 1008                         ?___aldiv 001B  
                       ?___ftadd 0030                         ?___awmod 001D  
                       ?___ftdiv 0021                         ?___ftmul 0021  
                       ?___fttol 0030                         ?___lwdiv 000F  
                       ?___lwmod 000F            __end_of_stepper_pulse 1B74  
            OpenTimer0@intEnable 0011                _interrupt_handler 1008  
                    __smallconst 101A               ?_interrupt_handler 0001  
               _hard_speed_timer 00F6                 ___lwdiv@quotient 0013  
            ??_interrupt_handler 0001                  ___aldiv@divisor 001F  
                ___aldiv@counter 0023                   ___wmul@product 0013  
                       _LATAbits 000F89                         _LATBbits 000F8A  
                       _LATCbits 000F8B                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                         _PIR1bits 000F9E  
    _nothingElseMattersFullNotes 018E                  setAllLeds@value 000F  
    _nothingElseMattersDurations 00A8                        _prev_hall 00F8  
                      _multiplex 263C        __end_of_interrupt_handler 23E8  
              ___wmul@multiplier 000F                         _PWM_duty 004C  
            __size_of_superMario 007C                ___lmul@multiplier 000F  
                      copy_data0 1DFC                        copy_data1 1E1C  
                      copy_data2 1E3C                        copy_data3 1E5C  
                      copy_data4 1E7C            __end_of_last_new_note 101D  
    __size_of_nothingElseMatters 007C                         __Hrparam 0000  
          __end_of_last_win_note 101F                         __Lrparam 0000  
                   ??_myDelay_ms 0011           __size_of_hardware_init 000C  
                   ??_myDelay_us 0041                 __size_of___aldiv 00CC  
                     ?_multiplex 0001                 __size_of___ftadd 01AC  
               __size_of___awmod 0070                 __size_of___ftdiv 00E6  
                       ___altoft 2292                 __size_of___ftmul 00F4  
               __size_of___fttol 00F4                 __size_of___lwdiv 0052  
               __size_of___lwmod 0042                         ___awtoft 25D8  
                       ___ftpack 1E96                         ___lbtoft 26FA  
                       _fsm$1627 00EB                         ___lwtoft 26B2  
                   ??_setAllLeds 000F                  ___lwdiv@divisor 0011  
                ___lwdiv@counter 0015                         __ptext10 1A92  
                       __ptext11 2596                         __ptext20 19AC  
                       __ptext12 2666                         __ptext21 2292  
                       __ptext13 2544                         __ptext30 230A  
                       __ptext22 1C48                         __ptext14 2216  
                       __ptext23 268C                         __ptext15 1690  
                       __ptext24 26FA                         __ptext16 26D6  
                       __ptext25 18B8                         __ptext17 2610  
                       __ptext26 207C                         __ptext18 2448  
                       __ptext27 14E4                         __ptext19 17C4  
                       __ptext28 25D8                         __ptext29 1E96  
             __end_of_myDelay_ms 263C               __end_of_myDelay_us 26FA  
                  __size_of_main 000E                    __size_of_init 00C2  
                  __size_of_buzz 0134                    __size_of_rand 0052  
                       _note_new 00D0                         _note_win 00D2  
                       fsm@i_972 00EF                         int$flags 0051  
             __end_of_setAllLeds 268C                         _position 00D4  
     __size_of_interrupt_handler 13E0                  superMario@index 0045  
                     _INTCONbits 000FF2                         buzz@freq 00D9  
                  _hardware_init 272C                  _superMarioNotes 0200  
                       intlevel2 0000                 ___lwmod@dividend 000F  
            __end_of_total_steps 1021                     ??_superMario 00E9  
                   _was_released 00D8                      ??_multiplex 0047  
        _nothingElseMattersNotes 00B4                  ___lwmod@divisor 0011  
                ___lwmod@counter 0013                     ___aldiv@sign 0024  
                 ?_hardware_init 0001               __end_of_superMario 2216  
