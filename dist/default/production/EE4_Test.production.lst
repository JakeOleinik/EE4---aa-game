

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Apr 21 12:55:52 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	idataBANK2,global,class=CODE,delta=1
     9                           	psect	idataBANK3,global,class=CODE,delta=1
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
    11                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           	psect	idataCOMRAM
    62  002868                     __pidataCOMRAM:
    63                           	opt stack 0
    64                           
    65                           ;initializer for _randx
    66  002868  0001               	dw	1
    67  00286A  0000               	dw	0
    68                           
    69                           	psect	idataBANK0
    70  002518                     __pidataBANK0:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _imperialMarchNotes
    74  002518  01B8               	dw	440
    75  00251A  0000               	dw	0
    76  00251C  01B8               	dw	440
    77  00251E  0000               	dw	0
    78  002520  01B8               	dw	440
    79  002522  0000               	dw	0
    80  002524  015D               	dw	349
    81  002526  0000               	dw	0
    82  002528  020B               	dw	523
    83  00252A  0000               	dw	0
    84  00252C  01B8               	dw	440
    85  00252E  0000               	dw	0
    86  002530  015D               	dw	349
    87  002532  0000               	dw	0
    88  002534  020B               	dw	523
    89  002536  0000               	dw	0
    90  002538  01B8               	dw	440
    91  00253A  0000               	dw	0
    92  00253C  0293               	dw	659
    93  00253E  0000               	dw	0
    94  002540  0293               	dw	659
    95  002542  0000               	dw	0
    96  002544  0293               	dw	659
    97  002546  0000               	dw	0
    98  002548  02BA               	dw	698
    99  00254A  0000               	dw	0
   100  00254C  020B               	dw	523
   101  00254E  0000               	dw	0
   102  002550  01B8               	dw	440
   103  002552  0000               	dw	0
   104  002554  015D               	dw	349
   105  002556  0000               	dw	0
   106  002558  020B               	dw	523
   107  00255A  0000               	dw	0
   108  00255C  01B8               	dw	440
   109  00255E  0000               	dw	0
   110                           
   111                           ;initializer for _nothingElseMattersDurations
   112  002560  0002               	dw	2
   113  002562  0002               	dw	2
   114  002564  0002               	dw	2
   115  002566  0002               	dw	2
   116  002568  0002               	dw	2
   117  00256A  0002               	dw	2
   118                           
   119                           ;initializer for _nothingElseMattersNotes
   120  00256C  00A5               	dw	165
   121  00256E  00C4               	dw	196
   122  002570  00F5               	dw	245
   123  002572  014A               	dw	330
   124  002574  00F5               	dw	245
   125  002576  00C4               	dw	196
   126                           
   127                           	psect	idataBANK1
   128  001BE8                     __pidataBANK1:
   129                           	opt stack 0
   130                           
   131                           ;initializer for _imperialMarchDurations
   132  001BE8  0032               	dw	50
   133  001BEA  0014               	dw	20
   134  001BEC  0032               	dw	50
   135  001BEE  0014               	dw	20
   136  001BF0  0032               	dw	50
   137  001BF2  0014               	dw	20
   138  001BF4  0028               	dw	40
   139  001BF6  0005               	dw	5
   140  001BF8  0014               	dw	20
   141  001BFA  0005               	dw	5
   142  001BFC  003C               	dw	60
   143  001BFE  000A               	dw	10
   144  001C00  0028               	dw	40
   145  001C02  0005               	dw	5
   146  001C04  0014               	dw	20
   147  001C06  0005               	dw	5
   148  001C08  003C               	dw	60
   149  001C0A  0050               	dw	80
   150  001C0C  0032               	dw	50
   151  001C0E  0014               	dw	20
   152  001C10  0032               	dw	50
   153  001C12  0014               	dw	20
   154  001C14  0032               	dw	50
   155  001C16  0014               	dw	20
   156  001C18  0028               	dw	40
   157  001C1A  0005               	dw	5
   158  001C1C  0014               	dw	20
   159  001C1E  0005               	dw	5
   160  001C20  003C               	dw	60
   161  001C22  000A               	dw	10
   162  001C24  0028               	dw	40
   163  001C26  0005               	dw	5
   164  001C28  0014               	dw	20
   165  001C2A  0005               	dw	5
   166  001C2C  003C               	dw	60
   167  001C2E  0050               	dw	80
   168                           
   169                           ;initializer for _nothingElseMattersFullDurations
   170  001C30  0004               	dw	4
   171  001C32  0004               	dw	4
   172  001C34  0004               	dw	4
   173  001C36  0004               	dw	4
   174  001C38  0004               	dw	4
   175  001C3A  0004               	dw	4
   176  001C3C  0004               	dw	4
   177  001C3E  0004               	dw	4
   178  001C40  0004               	dw	4
   179  001C42  0004               	dw	4
   180  001C44  0004               	dw	4
   181  001C46  0004               	dw	4
   182  001C48  0004               	dw	4
   183  001C4A  0004               	dw	4
   184  001C4C  0004               	dw	4
   185  001C4E  0004               	dw	4
   186  001C50  0004               	dw	4
   187  001C52  0004               	dw	4
   188  001C54  0004               	dw	4
   189  001C56  0004               	dw	4
   190  001C58  0004               	dw	4
   191  001C5A  0004               	dw	4
   192  001C5C  0004               	dw	4
   193  001C5E  0004               	dw	4
   194  001C60  0010               	dw	16
   195  001C62  0002               	dw	2
   196  001C64  0008               	dw	8
   197  001C66  0008               	dw	8
   198  001C68  0002               	dw	2
   199  001C6A  0004               	dw	4
   200  001C6C  0004               	dw	4
   201  001C6E  0004               	dw	4
   202  001C70  0004               	dw	4
   203  001C72  0004               	dw	4
   204  001C74  0004               	dw	4
   205                           
   206                           ;initializer for _nothingElseMattersFullNotes
   207  001C76  00A5               	dw	165
   208  001C78  00C4               	dw	196
   209  001C7A  00F5               	dw	245
   210  001C7C  014A               	dw	330
   211  001C7E  00F5               	dw	245
   212  001C80  00C4               	dw	196
   213  001C82  00A5               	dw	165
   214  001C84  00C4               	dw	196
   215  001C86  00F5               	dw	245
   216  001C88  014A               	dw	330
   217  001C8A  00F5               	dw	245
   218  001C8C  00C4               	dw	196
   219  001C8E  00A5               	dw	165
   220  001C90  00C4               	dw	196
   221  001C92  00F5               	dw	245
   222  001C94  014A               	dw	330
   223  001C96  00F5               	dw	245
   224  001C98  00C4               	dw	196
   225  001C9A  00A5               	dw	165
   226  001C9C  00C4               	dw	196
   227  001C9E  00F5               	dw	245
   228  001CA0  014A               	dw	330
   229  001CA2  00F5               	dw	245
   230  001CA4  01EE               	dw	494
   231  001CA6  014A               	dw	330
   232  001CA8  01EE               	dw	494
   233  001CAA  014A               	dw	330
   234  001CAC  00A5               	dw	165
   235  001CAE  01EE               	dw	494
   236  001CB0  0106               	dw	262
   237  001CB2  01EE               	dw	494
   238  001CB4  01B8               	dw	440
   239  001CB6  01EE               	dw	494
   240  001CB8  01B8               	dw	440
   241  001CBA  014A               	dw	330
   242                           
   243                           	psect	idataBANK2
   244  002080                     __pidataBANK2:
   245                           	opt stack 0
   246                           
   247                           ;initializer for _superMarioNotes
   248  002080  0A4D               	dw	2637
   249  002082  0A4D               	dw	2637
   250  002084  0000               	dw	0
   251  002086  0A4D               	dw	2637
   252  002088  0000               	dw	0
   253  00208A  082D               	dw	2093
   254  00208C  0A4D               	dw	2637
   255  00208E  0000               	dw	0
   256  002090  0C40               	dw	3136
   257  002092  0000               	dw	0
   258  002094  0000               	dw	0
   259  002096  0000               	dw	0
   260  002098  0620               	dw	1568
   261  00209A  0000               	dw	0
   262  00209C  0000               	dw	0
   263  00209E  0000               	dw	0
   264  0020A0  082D               	dw	2093
   265  0020A2  0000               	dw	0
   266  0020A4  0000               	dw	0
   267  0020A6  0620               	dw	1568
   268  0020A8  0000               	dw	0
   269  0020AA  0000               	dw	0
   270  0020AC  0527               	dw	1319
   271  0020AE  0000               	dw	0
   272  0020B0  0000               	dw	0
   273  0020B2  06E0               	dw	1760
   274  0020B4  0000               	dw	0
   275  0020B6  07B8               	dw	1976
   276  0020B8  0000               	dw	0
   277  0020BA  0749               	dw	1865
   278  0020BC  06E0               	dw	1760
   279  0020BE  0000               	dw	0
   280  0020C0  0620               	dw	1568
   281  0020C2  0A4D               	dw	2637
   282  0020C4  0C40               	dw	3136
   283  0020C6  0DC0               	dw	3520
   284  0020C8  0000               	dw	0
   285  0020CA  0AEA               	dw	2794
   286  0020CC  0C40               	dw	3136
   287  0020CE  0000               	dw	0
   288  0020D0  0A4D               	dw	2637
   289  0020D2  0000               	dw	0
   290  0020D4  082D               	dw	2093
   291  0020D6  092D               	dw	2349
   292  0020D8  07B8               	dw	1976
   293  0020DA  0000               	dw	0
   294  0020DC  0000               	dw	0
   295  0020DE  082D               	dw	2093
   296  0020E0  0000               	dw	0
   297  0020E2  0000               	dw	0
   298  0020E4  0620               	dw	1568
   299  0020E6  0000               	dw	0
   300  0020E8  0000               	dw	0
   301  0020EA  0527               	dw	1319
   302  0020EC  0000               	dw	0
   303  0020EE  0000               	dw	0
   304  0020F0  06E0               	dw	1760
   305  0020F2  0000               	dw	0
   306  0020F4  07B8               	dw	1976
   307  0020F6  0000               	dw	0
   308  0020F8  0749               	dw	1865
   309  0020FA  06E0               	dw	1760
   310  0020FC  0000               	dw	0
   311  0020FE  0620               	dw	1568
   312  002100  0A4D               	dw	2637
   313  002102  0C40               	dw	3136
   314  002104  0DC0               	dw	3520
   315  002106  0000               	dw	0
   316  002108  0AEA               	dw	2794
   317  00210A  0C40               	dw	3136
   318  00210C  0000               	dw	0
   319  00210E  0A4D               	dw	2637
   320  002110  0000               	dw	0
   321  002112  082D               	dw	2093
   322  002114  092D               	dw	2349
   323  002116  07B8               	dw	1976
   324  002118  0000               	dw	0
   325  00211A  0000               	dw	0
   326                           
   327                           	psect	idataBANK3
   328  00211C                     __pidataBANK3:
   329                           	opt stack 0
   330                           
   331                           ;initializer for _superMarioDurations
   332  00211C  000C               	dw	12
   333  00211E  000C               	dw	12
   334  002120  000C               	dw	12
   335  002122  000C               	dw	12
   336  002124  000C               	dw	12
   337  002126  000C               	dw	12
   338  002128  000C               	dw	12
   339  00212A  000C               	dw	12
   340  00212C  000C               	dw	12
   341  00212E  000C               	dw	12
   342  002130  000C               	dw	12
   343  002132  000C               	dw	12
   344  002134  000C               	dw	12
   345  002136  000C               	dw	12
   346  002138  000C               	dw	12
   347  00213A  000C               	dw	12
   348  00213C  000C               	dw	12
   349  00213E  000C               	dw	12
   350  002140  000C               	dw	12
   351  002142  000C               	dw	12
   352  002144  000C               	dw	12
   353  002146  000C               	dw	12
   354  002148  000C               	dw	12
   355  00214A  000C               	dw	12
   356  00214C  000C               	dw	12
   357  00214E  000C               	dw	12
   358  002150  000C               	dw	12
   359  002152  000C               	dw	12
   360  002154  000C               	dw	12
   361  002156  000C               	dw	12
   362  002158  000C               	dw	12
   363  00215A  000C               	dw	12
   364  00215C  0009               	dw	9
   365  00215E  0009               	dw	9
   366  002160  0009               	dw	9
   367  002162  000C               	dw	12
   368  002164  000C               	dw	12
   369  002166  000C               	dw	12
   370  002168  000C               	dw	12
   371  00216A  000C               	dw	12
   372  00216C  000C               	dw	12
   373  00216E  000C               	dw	12
   374  002170  000C               	dw	12
   375  002172  000C               	dw	12
   376  002174  000C               	dw	12
   377  002176  000C               	dw	12
   378  002178  000C               	dw	12
   379  00217A  000C               	dw	12
   380  00217C  000C               	dw	12
   381  00217E  000C               	dw	12
   382  002180  000C               	dw	12
   383  002182  000C               	dw	12
   384  002184  000C               	dw	12
   385  002186  000C               	dw	12
   386  002188  000C               	dw	12
   387  00218A  000C               	dw	12
   388  00218C  000C               	dw	12
   389  00218E  000C               	dw	12
   390  002190  000C               	dw	12
   391  002192  000C               	dw	12
   392  002194  000C               	dw	12
   393  002196  000C               	dw	12
   394  002198  000C               	dw	12
   395  00219A  0009               	dw	9
   396  00219C  0009               	dw	9
   397  00219E  0009               	dw	9
   398  0021A0  000C               	dw	12
   399  0021A2  000C               	dw	12
   400  0021A4  000C               	dw	12
   401  0021A6  000C               	dw	12
   402  0021A8  000C               	dw	12
   403  0021AA  000C               	dw	12
   404  0021AC  000C               	dw	12
   405  0021AE  000C               	dw	12
   406  0021B0  000C               	dw	12
   407  0021B2  000C               	dw	12
   408  0021B4  000C               	dw	12
   409  0021B6  000C               	dw	12
   410                           
   411                           	psect	smallconst
   412  00101A                     __psmallconst:
   413                           	opt stack 0
   414  00101A  00                 	db	0
   415  00101B                     _last_new_note:
   416                           	opt stack 0
   417  00101B  0006               	dw	6
   418  00101D                     __end_of_last_new_note:
   419                           	opt stack 0
   420  00101D                     _last_win_note:
   421                           	opt stack 0
   422  00101D  004E               	dw	78
   423  00101F                     __end_of_last_win_note:
   424                           	opt stack 0
   425  00101F                     _total_steps:
   426                           	opt stack 0
   427  00101F  0320               	dw	800
   428  001021                     __end_of_total_steps:
   429                           	opt stack 0
   430  001021  00                 	db	0	; dummy byte at the end
   431  0000                     
   432                           	psect	nvCOMRAM
   433  00004F                     __pnvCOMRAM:
   434                           	opt stack 0
   435  00004F                     _stepper_direction:
   436                           	opt stack 0
   437  00004F                     	ds	2
   438                           
   439                           	psect	nvBANK0
   440  0000F0                     __pnvBANK0:
   441                           	opt stack 0
   442  0000F0                     _hard_speed:
   443                           	opt stack 0
   444  0000F0                     	ds	3
   445  0000F3                     _steps_per_led:
   446                           	opt stack 0
   447  0000F3                     	ds	3
   448  0000F6                     _hard_speed_timer:
   449                           	opt stack 0
   450  0000F6                     	ds	2
   451  0000F8                     _prev_hall:
   452                           	opt stack 0
   453  0000F8                     	ds	1
   454  0000                     _ADCON1	set	4033
   455  0000                     _INTCONbits	set	4082
   456  0000                     _IPR1bits	set	3999
   457  0000                     _LATAbits	set	3977
   458  0000                     _LATBbits	set	3978
   459  0000                     _LATCbits	set	3979
   460  0000                     _PIE1bits	set	3997
   461  0000                     _PIR1bits	set	3998
   462  0000                     _PORTAbits	set	3968
   463  0000                     _PORTBbits	set	3969
   464  0000                     _T0CONbits	set	4053
   465  0000                     _T1CONbits	set	4045
   466  0000                     _TMR0H	set	4055
   467  0000                     _TMR0L	set	4054
   468  0000                     _TMR1H	set	4047
   469  0000                     _TMR1L	set	4046
   470  0000                     _TRISAbits	set	3986
   471  0000                     _TRISBbits	set	3987
   472  0000                     _TRISCbits	set	3988
   473                           
   474                           ; #config settings
   475                           
   476                           	psect	cinit
   477  001F12                     __pcinit:
   478                           	opt stack 0
   479  001F12                     start_initialization:
   480                           	opt stack 0
   481  001F12                     __initialization:
   482                           	opt stack 0
   483                           
   484                           ; Clear objects allocated to BANK0 (25 bytes)
   485  001F12  EE00  F0C0         	lfsr	0,__pbssBANK0
   486  001F16  0E19               	movlw	25
   487  001F18                     clear_0:
   488  001F18  6AEE               	clrf	postinc0,c
   489  001F1A  06E8               	decf	wreg,f,c
   490  001F1C  E1FD               	bnz	clear_0
   491                           
   492                           ; Clear objects allocated to COMRAM (3 bytes)
   493  001F1E  6A4E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   494  001F20  6A4D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   495  001F22  6A4C               	clrf	__pbssCOMRAM& (0+255),c
   496                           
   497                           ; Initialize objects allocated to BANK3 (156 bytes)
   498                           ; load TBLPTR registers with __pidataBANK3
   499  001F24  0E1C               	movlw	low __pidataBANK3
   500  001F26  6EF6               	movwf	tblptrl,c
   501  001F28  0E21               	movlw	high __pidataBANK3
   502  001F2A  6EF7               	movwf	tblptrh,c
   503  001F2C  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   504  001F2E  6EF8               	movwf	tblptru,c
   505  001F30  EE03  F000         	lfsr	0,__pdataBANK3
   506  001F34  EE10 F09C          	lfsr	1,156
   507  001F38                     copy_data0:
   508  001F38  0009               	tblrd		*+
   509  001F3A  CFF5 FFEE          	movff	tablat,postinc0
   510  001F3E  50E5               	movf	postdec1,w,c
   511  001F40  50E1               	movf	fsr1l,w,c
   512  001F42  E1FA               	bnz	copy_data0
   513                           
   514                           ; Initialize objects allocated to BANK2 (156 bytes)
   515                           ; load TBLPTR registers with __pidataBANK2
   516  001F44  0E80               	movlw	low __pidataBANK2
   517  001F46  6EF6               	movwf	tblptrl,c
   518  001F48  0E20               	movlw	high __pidataBANK2
   519  001F4A  6EF7               	movwf	tblptrh,c
   520  001F4C  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   521  001F4E  6EF8               	movwf	tblptru,c
   522  001F50  EE02  F000         	lfsr	0,__pdataBANK2
   523  001F54  EE10 F09C          	lfsr	1,156
   524  001F58                     copy_data1:
   525  001F58  0009               	tblrd		*+
   526  001F5A  CFF5 FFEE          	movff	tablat,postinc0
   527  001F5E  50E5               	movf	postdec1,w,c
   528  001F60  50E1               	movf	fsr1l,w,c
   529  001F62  E1FA               	bnz	copy_data1
   530                           
   531                           ; Initialize objects allocated to BANK1 (212 bytes)
   532                           ; load TBLPTR registers with __pidataBANK1
   533  001F64  0EE8               	movlw	low __pidataBANK1
   534  001F66  6EF6               	movwf	tblptrl,c
   535  001F68  0E1B               	movlw	high __pidataBANK1
   536  001F6A  6EF7               	movwf	tblptrh,c
   537  001F6C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   538  001F6E  6EF8               	movwf	tblptru,c
   539  001F70  EE01  F000         	lfsr	0,__pdataBANK1
   540  001F74  EE10 F0D4          	lfsr	1,212
   541  001F78                     copy_data2:
   542  001F78  0009               	tblrd		*+
   543  001F7A  CFF5 FFEE          	movff	tablat,postinc0
   544  001F7E  50E5               	movf	postdec1,w,c
   545  001F80  50E1               	movf	fsr1l,w,c
   546  001F82  E1FA               	bnz	copy_data2
   547                           
   548                           ; Initialize objects allocated to BANK0 (96 bytes)
   549                           ; load TBLPTR registers with __pidataBANK0
   550  001F84  0E18               	movlw	low __pidataBANK0
   551  001F86  6EF6               	movwf	tblptrl,c
   552  001F88  0E25               	movlw	high __pidataBANK0
   553  001F8A  6EF7               	movwf	tblptrh,c
   554  001F8C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   555  001F8E  6EF8               	movwf	tblptru,c
   556  001F90  EE00  F060         	lfsr	0,__pdataBANK0
   557  001F94  EE10 F060          	lfsr	1,96
   558  001F98                     copy_data3:
   559  001F98  0009               	tblrd		*+
   560  001F9A  CFF5 FFEE          	movff	tablat,postinc0
   561  001F9E  50E5               	movf	postdec1,w,c
   562  001FA0  50E1               	movf	fsr1l,w,c
   563  001FA2  E1FA               	bnz	copy_data3
   564                           
   565                           ; Initialize objects allocated to COMRAM (4 bytes)
   566                           ; load TBLPTR registers with __pidataCOMRAM
   567  001FA4  0E68               	movlw	low __pidataCOMRAM
   568  001FA6  6EF6               	movwf	tblptrl,c
   569  001FA8  0E28               	movlw	high __pidataCOMRAM
   570  001FAA  6EF7               	movwf	tblptrh,c
   571  001FAC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   572  001FAE  6EF8               	movwf	tblptru,c
   573  001FB0  EE00  F048         	lfsr	0,__pdataCOMRAM
   574  001FB4  EE10 F004          	lfsr	1,4
   575  001FB8                     copy_data4:
   576  001FB8  0009               	tblrd		*+
   577  001FBA  CFF5 FFEE          	movff	tablat,postinc0
   578  001FBE  50E5               	movf	postdec1,w,c
   579  001FC0  50E1               	movf	fsr1l,w,c
   580  001FC2  E1FA               	bnz	copy_data4
   581  001FC4                     end_of_initialization:
   582                           	opt stack 0
   583  001FC4                     __end_of__initialization:
   584                           	opt stack 0
   585  001FC4  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   586  001FC6  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   587  001FC8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   588  001FCA  6EF8               	movwf	tblptru,c
   589  001FCC  0100               	movlb	0
   590  001FCE  EF27  F014         	goto	_main	;jump to C main() function
   591                           tblptru	equ	0xFF8
   592                           tblptrh	equ	0xFF7
   593                           tblptrl	equ	0xFF6
   594                           tablat	equ	0xFF5
   595                           postinc0	equ	0xFEE
   596                           wreg	equ	0xFE8
   597                           postdec1	equ	0xFE5
   598                           fsr1l	equ	0xFE1
   599                           
   600                           	psect	bssCOMRAM
   601  00004C                     __pbssCOMRAM:
   602                           	opt stack 0
   603  00004C                     _PWM_duty:
   604                           	opt stack 0
   605  00004C                     	ds	1
   606  00004D                     _counter:
   607                           	opt stack 0
   608  00004D                     	ds	1
   609  00004E                     _state_to_recover:
   610                           	opt stack 0
   611  00004E                     	ds	1
   612                           tblptru	equ	0xFF8
   613                           tblptrh	equ	0xFF7
   614                           tblptrl	equ	0xFF6
   615                           tablat	equ	0xFF5
   616                           postinc0	equ	0xFEE
   617                           wreg	equ	0xFE8
   618                           postdec1	equ	0xFE5
   619                           fsr1l	equ	0xFE1
   620                           
   621                           	psect	dataCOMRAM
   622  000048                     __pdataCOMRAM:
   623                           	opt stack 0
   624  000048                     _randx:
   625                           	opt stack 0
   626  000048                     	ds	4
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           postinc0	equ	0xFEE
   632                           wreg	equ	0xFE8
   633                           postdec1	equ	0xFE5
   634                           fsr1l	equ	0xFE1
   635                           
   636                           	psect	bssBANK0
   637  0000C0                     __pbssBANK0:
   638                           	opt stack 0
   639  0000C0                     _LEDs:
   640                           	opt stack 0
   641  0000C0                     	ds	16
   642  0000D0                     _note_new:
   643                           	opt stack 0
   644  0000D0                     	ds	2
   645  0000D2                     _note_win:
   646                           	opt stack 0
   647  0000D2                     	ds	2
   648  0000D4                     _position:
   649                           	opt stack 0
   650  0000D4                     	ds	2
   651  0000D6                     _current_state:
   652                           	opt stack 0
   653  0000D6                     	ds	1
   654  0000D7                     _target:
   655                           	opt stack 0
   656  0000D7                     	ds	1
   657  0000D8                     _was_released:
   658                           	opt stack 0
   659  0000D8                     	ds	1
   660                           tblptru	equ	0xFF8
   661                           tblptrh	equ	0xFF7
   662                           tblptrl	equ	0xFF6
   663                           tablat	equ	0xFF5
   664                           postinc0	equ	0xFEE
   665                           wreg	equ	0xFE8
   666                           postdec1	equ	0xFE5
   667                           fsr1l	equ	0xFE1
   668                           
   669                           	psect	dataBANK0
   670  000060                     __pdataBANK0:
   671                           	opt stack 0
   672  000060                     _imperialMarchNotes:
   673                           	opt stack 0
   674  000060                     	ds	72
   675  0000A8                     _nothingElseMattersDurations:
   676                           	opt stack 0
   677  0000A8                     	ds	12
   678  0000B4                     _nothingElseMattersNotes:
   679                           	opt stack 0
   680  0000B4                     	ds	12
   681                           tblptru	equ	0xFF8
   682                           tblptrh	equ	0xFF7
   683                           tblptrl	equ	0xFF6
   684                           tablat	equ	0xFF5
   685                           postinc0	equ	0xFEE
   686                           wreg	equ	0xFE8
   687                           postdec1	equ	0xFE5
   688                           fsr1l	equ	0xFE1
   689                           
   690                           	psect	dataBANK1
   691  000100                     __pdataBANK1:
   692                           	opt stack 0
   693  000100                     _imperialMarchDurations:
   694                           	opt stack 0
   695  000100                     	ds	72
   696  000148                     _nothingElseMattersFullDurations:
   697                           	opt stack 0
   698  000148                     	ds	70
   699  00018E                     _nothingElseMattersFullNotes:
   700                           	opt stack 0
   701  00018E                     	ds	70
   702                           tblptru	equ	0xFF8
   703                           tblptrh	equ	0xFF7
   704                           tblptrl	equ	0xFF6
   705                           tablat	equ	0xFF5
   706                           postinc0	equ	0xFEE
   707                           wreg	equ	0xFE8
   708                           postdec1	equ	0xFE5
   709                           fsr1l	equ	0xFE1
   710                           
   711                           	psect	dataBANK2
   712  000200                     __pdataBANK2:
   713                           	opt stack 0
   714  000200                     _superMarioNotes:
   715                           	opt stack 0
   716  000200                     	ds	156
   717                           tblptru	equ	0xFF8
   718                           tblptrh	equ	0xFF7
   719                           tblptrl	equ	0xFF6
   720                           tablat	equ	0xFF5
   721                           postinc0	equ	0xFEE
   722                           wreg	equ	0xFE8
   723                           postdec1	equ	0xFE5
   724                           fsr1l	equ	0xFE1
   725                           
   726                           	psect	dataBANK3
   727  000300                     __pdataBANK3:
   728                           	opt stack 0
   729  000300                     _superMarioDurations:
   730                           	opt stack 0
   731  000300                     	ds	156
   732                           tblptru	equ	0xFF8
   733                           tblptrh	equ	0xFF7
   734                           tblptrl	equ	0xFF6
   735                           tablat	equ	0xFF5
   736                           postinc0	equ	0xFEE
   737                           wreg	equ	0xFE8
   738                           postdec1	equ	0xFE5
   739                           fsr1l	equ	0xFE1
   740                           
   741                           	psect	cstackBANK0
   742  0000D9                     __pcstackBANK0:
   743                           	opt stack 0
   744  0000D9                     ___ftadd@sign:
   745                           	opt stack 0
   746  0000D9                     buzz@freq:
   747                           	opt stack 0
   748                           
   749                           ; 4 bytes @ 0x0
   750  0000D9                     	ds	1
   751  0000DA                     ___ftadd@exp2:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0x1
   755  0000DA                     	ds	1
   756  0000DB                     ___ftadd@exp1:
   757                           	opt stack 0
   758                           
   759                           ; 1 bytes @ 0x2
   760  0000DB                     	ds	1
   761  0000DC                     ___ftge@ff1:
   762                           	opt stack 0
   763                           
   764                           ; 3 bytes @ 0x3
   765  0000DC                     	ds	1
   766  0000DD                     buzz@duration:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x4
   770  0000DD                     	ds	2
   771  0000DF                     ___ftge@ff2:
   772                           	opt stack 0
   773  0000DF                     buzz@repeats:
   774                           	opt stack 0
   775                           
   776                           ; 4 bytes @ 0x6
   777  0000DF                     	ds	3
   778  0000E2                     ??___ftge:
   779                           
   780                           ; 1 bytes @ 0x9
   781  0000E2                     	ds	1
   782  0000E3                     buzz@i:
   783                           	opt stack 0
   784                           
   785                           ; 4 bytes @ 0xA
   786  0000E3                     	ds	4
   787  0000E7                     buzz@halfPeriod:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0xE
   791  0000E7                     	ds	2
   792  0000E9                     ??_nothingElseMatters:
   793  0000E9                     ??_superMario:
   794                           
   795                           ; 1 bytes @ 0x10
   796  0000E9                     	ds	2
   797  0000EB                     _fsm$1627:
   798                           	opt stack 0
   799                           
   800                           ; 3 bytes @ 0x12
   801  0000EB                     	ds	3
   802  0000EE                     fsm@i:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0x15
   806  0000EE                     	ds	1
   807  0000EF                     fsm@i_972:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x16
   811  0000EF                     	ds	1
   812                           tblptru	equ	0xFF8
   813                           tblptrh	equ	0xFF7
   814                           tblptrl	equ	0xFF6
   815                           tablat	equ	0xFF5
   816                           postinc0	equ	0xFEE
   817                           wreg	equ	0xFE8
   818                           postdec1	equ	0xFE5
   819                           fsr1l	equ	0xFE1
   820                           
   821                           	psect	cstackCOMRAM
   822  000001                     __pcstackCOMRAM:
   823                           	opt stack 0
   824  000001                     ??_interrupt_handler:
   825  000001                     
   826                           ; 1 bytes @ 0x0
   827  000001                     	ds	14
   828  00000F                     ??_OpenTimer0:
   829  00000F                     ?___wmul:
   830                           	opt stack 0
   831  00000F                     ?___lwdiv:
   832                           	opt stack 0
   833  00000F                     ?___lwmod:
   834                           	opt stack 0
   835  00000F                     ?___ftpack:
   836                           	opt stack 0
   837  00000F                     ?___lmul:
   838                           	opt stack 0
   839  00000F                     setAllLeds@value:
   840                           	opt stack 0
   841  00000F                     myDelay_ms@ms:
   842                           	opt stack 0
   843  00000F                     ___wmul@multiplier:
   844                           	opt stack 0
   845  00000F                     ___lwdiv@dividend:
   846                           	opt stack 0
   847  00000F                     ___lwmod@dividend:
   848                           	opt stack 0
   849  00000F                     ___ftpack@arg:
   850                           	opt stack 0
   851  00000F                     ___lmul@multiplier:
   852                           	opt stack 0
   853                           
   854                           ; 4 bytes @ 0xE
   855  00000F                     	ds	1
   856  000010                     setAllLeds@i:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0xF
   860  000010                     	ds	1
   861  000011                     ??_myDelay_ms:
   862  000011                     OpenTimer0@intEnable:
   863                           	opt stack 0
   864  000011                     ___wmul@multiplicand:
   865                           	opt stack 0
   866  000011                     ___lwdiv@divisor:
   867                           	opt stack 0
   868  000011                     ___lwmod@divisor:
   869                           	opt stack 0
   870                           
   871                           ; 2 bytes @ 0x10
   872  000011                     	ds	1
   873  000012                     ___ftpack@exp:
   874                           	opt stack 0
   875  000012                     myDelay_ms@i:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0x11
   879  000012                     	ds	1
   880  000013                     ___ftpack@sign:
   881                           	opt stack 0
   882  000013                     ___lwmod@counter:
   883                           	opt stack 0
   884  000013                     ___wmul@product:
   885                           	opt stack 0
   886  000013                     ___lwdiv@quotient:
   887                           	opt stack 0
   888  000013                     ___lmul@multiplicand:
   889                           	opt stack 0
   890                           
   891                           ; 4 bytes @ 0x12
   892  000013                     	ds	1
   893  000014                     ??___ftpack:
   894                           
   895                           ; 1 bytes @ 0x13
   896  000014                     	ds	1
   897  000015                     ___lwdiv@counter:
   898                           	opt stack 0
   899                           
   900                           ; 1 bytes @ 0x14
   901  000015                     	ds	2
   902  000017                     ?___altoft:
   903                           	opt stack 0
   904  000017                     ?___lbtoft:
   905                           	opt stack 0
   906  000017                     ?___lwtoft:
   907                           	opt stack 0
   908  000017                     ___lwtoft@c:
   909                           	opt stack 0
   910  000017                     ___lmul@product:
   911                           	opt stack 0
   912  000017                     ___altoft@c:
   913                           	opt stack 0
   914                           
   915                           ; 4 bytes @ 0x16
   916  000017                     	ds	3
   917  00001A                     ??_init:
   918  00001A                     ___lbtoft@c:
   919                           	opt stack 0
   920                           
   921                           ; 1 bytes @ 0x19
   922  00001A                     	ds	1
   923  00001B                     ??___altoft:
   924  00001B                     ?_rand:
   925                           	opt stack 0
   926  00001B                     ?___aldiv:
   927                           	opt stack 0
   928  00001B                     ___aldiv@dividend:
   929                           	opt stack 0
   930                           
   931                           ; 4 bytes @ 0x1A
   932  00001B                     	ds	2
   933  00001D                     ?___awmod:
   934                           	opt stack 0
   935  00001D                     ___awmod@dividend:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x1C
   939  00001D                     	ds	2
   940  00001F                     ___altoft@exp:
   941                           	opt stack 0
   942  00001F                     ___awmod@divisor:
   943                           	opt stack 0
   944  00001F                     ___aldiv@divisor:
   945                           	opt stack 0
   946                           
   947                           ; 4 bytes @ 0x1E
   948  00001F                     	ds	1
   949  000020                     ___altoft@sign:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x1F
   953  000020                     	ds	1
   954  000021                     ?___ftdiv:
   955                           	opt stack 0
   956  000021                     ___awmod@counter:
   957                           	opt stack 0
   958  000021                     ___ftdiv@f1:
   959                           	opt stack 0
   960                           
   961                           ; 3 bytes @ 0x20
   962  000021                     	ds	1
   963  000022                     ___awmod@sign:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0x21
   967  000022                     	ds	1
   968  000023                     ?___awdiv:
   969                           	opt stack 0
   970  000023                     ___aldiv@counter:
   971                           	opt stack 0
   972  000023                     ___awdiv@dividend:
   973                           	opt stack 0
   974                           
   975                           ; 2 bytes @ 0x22
   976  000023                     	ds	1
   977  000024                     ___aldiv@sign:
   978                           	opt stack 0
   979  000024                     ___ftdiv@f2:
   980                           	opt stack 0
   981                           
   982                           ; 3 bytes @ 0x23
   983  000024                     	ds	1
   984  000025                     ___awdiv@divisor:
   985                           	opt stack 0
   986  000025                     ___aldiv@quotient:
   987                           	opt stack 0
   988                           
   989                           ; 4 bytes @ 0x24
   990  000025                     	ds	2
   991  000027                     ??___ftdiv:
   992  000027                     ___awdiv@counter:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x26
   996  000027                     	ds	1
   997  000028                     ___awdiv@sign:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x27
  1001  000028                     	ds	1
  1002  000029                     ___awdiv@quotient:
  1003                           	opt stack 0
  1004                           
  1005                           ; 2 bytes @ 0x28
  1006  000029                     	ds	1
  1007  00002A                     ___ftdiv@cntr:
  1008                           	opt stack 0
  1009                           
  1010                           ; 1 bytes @ 0x29
  1011  00002A                     	ds	1
  1012  00002B                     ?___awtoft:
  1013                           	opt stack 0
  1014  00002B                     ___awtoft@c:
  1015                           	opt stack 0
  1016  00002B                     ___ftdiv@f3:
  1017                           	opt stack 0
  1018                           
  1019                           ; 3 bytes @ 0x2A
  1020  00002B                     	ds	3
  1021  00002E                     ___awtoft@sign:
  1022                           	opt stack 0
  1023  00002E                     ___ftdiv@exp:
  1024                           	opt stack 0
  1025                           
  1026                           ; 1 bytes @ 0x2D
  1027  00002E                     	ds	1
  1028  00002F                     ?___ftmul:
  1029                           	opt stack 0
  1030  00002F                     ___ftdiv@sign:
  1031                           	opt stack 0
  1032  00002F                     ___ftmul@f1:
  1033                           	opt stack 0
  1034                           
  1035                           ; 3 bytes @ 0x2E
  1036  00002F                     	ds	1
  1037  000030                     ?___fttol:
  1038                           	opt stack 0
  1039  000030                     ___fttol@f1:
  1040                           	opt stack 0
  1041                           
  1042                           ; 3 bytes @ 0x2F
  1043  000030                     	ds	2
  1044  000032                     ___ftmul@f2:
  1045                           	opt stack 0
  1046                           
  1047                           ; 3 bytes @ 0x31
  1048  000032                     	ds	2
  1049  000034                     ??___fttol:
  1050                           
  1051                           ; 1 bytes @ 0x33
  1052  000034                     	ds	1
  1053  000035                     ??___ftmul:
  1054                           
  1055                           ; 1 bytes @ 0x34
  1056  000035                     	ds	3
  1057  000038                     ___ftmul@exp:
  1058                           	opt stack 0
  1059                           
  1060                           ; 1 bytes @ 0x37
  1061  000038                     	ds	1
  1062  000039                     ___fttol@sign1:
  1063                           	opt stack 0
  1064  000039                     ___ftmul@f3_as_product:
  1065                           	opt stack 0
  1066                           
  1067                           ; 3 bytes @ 0x38
  1068  000039                     	ds	1
  1069  00003A                     ___fttol@lval:
  1070                           	opt stack 0
  1071                           
  1072                           ; 4 bytes @ 0x39
  1073  00003A                     	ds	2
  1074  00003C                     ___ftmul@cntr:
  1075                           	opt stack 0
  1076                           
  1077                           ; 1 bytes @ 0x3B
  1078  00003C                     	ds	1
  1079  00003D                     ___ftmul@sign:
  1080                           	opt stack 0
  1081                           
  1082                           ; 1 bytes @ 0x3C
  1083  00003D                     	ds	1
  1084  00003E                     ?___ftadd:
  1085                           	opt stack 0
  1086  00003E                     ___fttol@exp1:
  1087                           	opt stack 0
  1088  00003E                     ___ftadd@f1:
  1089                           	opt stack 0
  1090                           
  1091                           ; 3 bytes @ 0x3D
  1092  00003E                     	ds	1
  1093  00003F                     myDelay_us@us:
  1094                           	opt stack 0
  1095                           
  1096                           ; 2 bytes @ 0x3E
  1097  00003F                     	ds	2
  1098  000041                     myDelay_us@i:
  1099                           	opt stack 0
  1100  000041                     ___ftadd@f2:
  1101                           	opt stack 0
  1102                           
  1103                           ; 3 bytes @ 0x40
  1104  000041                     	ds	2
  1105  000043                     ??_buzz:
  1106  000043                     ??_go_through_cols:
  1107  000043                     stepper_pulse@speed:
  1108                           	opt stack 0
  1109                           
  1110                           ; 3 bytes @ 0x42
  1111  000043                     	ds	1
  1112  000044                     ??___ftadd:
  1113                           
  1114                           ; 1 bytes @ 0x43
  1115  000044                     	ds	1
  1116  000045                     nothingElseMatters@index:
  1117                           	opt stack 0
  1118  000045                     superMario@index:
  1119                           	opt stack 0
  1120                           
  1121                           ; 2 bytes @ 0x44
  1122  000045                     	ds	1
  1123  000046                     ??_stepper_pulse:
  1124  000046                     go_through_cols@offset:
  1125                           	opt stack 0
  1126                           
  1127                           ; 1 bytes @ 0x45
  1128  000046                     	ds	1
  1129  000047                     
  1130                           ; 1 bytes @ 0x46
  1131  000047                     	ds	1
  1132  000048                     tblptru	equ	0xFF8
  1133                           tblptrh	equ	0xFF7
  1134                           tblptrl	equ	0xFF6
  1135                           tablat	equ	0xFF5
  1136                           postinc0	equ	0xFEE
  1137                           wreg	equ	0xFE8
  1138                           postdec1	equ	0xFE5
  1139                           fsr1l	equ	0xFE1
  1140                           
  1141                           ; 1 bytes @ 0x47
  1142 ;;
  1143 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1144 ;;
  1145 ;; *************** function _main *****************
  1146 ;; Defined at:
  1147 ;;		line 60 in file "main.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1161 ;;      Params:         0       0       0       0       0       0       0       0       0
  1162 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1164 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1165 ;;Total ram usage:        0 bytes
  1166 ;; Hardware stack levels required when called:    6
  1167 ;; This function calls:
  1168 ;;		_fsm
  1169 ;;		_init
  1170 ;;		_multiplex
  1171 ;; This function is called by:
  1172 ;;		Startup code after reset
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text0
  1177  00284E                     __ptext0:
  1178                           	opt stack 0
  1179  00284E                     _main:
  1180                           	opt stack 25
  1181                           
  1182                           ;main.c: 61: init();
  1183                           
  1184                           ;incstack = 0
  1185  00284E  EC28  F00F         	call	_init	;wreg free
  1186  002852                     l3072:
  1187                           
  1188                           ;main.c: 63: fsm();
  1189  002852  EC11  F008         	call	_fsm	;wreg free
  1190                           
  1191                           ;main.c: 64: multiplex();
  1192  002856  ECB6  F013         	call	_multiplex	;wreg free
  1193  00285A  D7FB               	goto	l3072
  1194  00285C                     __end_of_main:
  1195                           	opt stack 0
  1196                           tblptru	equ	0xFF8
  1197                           tblptrh	equ	0xFF7
  1198                           tblptrl	equ	0xFF6
  1199                           tablat	equ	0xFF5
  1200                           postinc0	equ	0xFEE
  1201                           wreg	equ	0xFE8
  1202                           postdec1	equ	0xFE5
  1203                           fsr1l	equ	0xFE1
  1204                           
  1205 ;; *************** function _multiplex *****************
  1206 ;; Defined at:
  1207 ;;		line 323 in file "main.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1221 ;;      Params:         0       0       0       0       0       0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1224 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    3
  1228 ;; This function calls:
  1229 ;;		_go_through_cols
  1230 ;; This function is called by:
  1231 ;;		_main
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text1
  1236  00276C                     __ptext1:
  1237                           	opt stack 0
  1238  00276C                     _multiplex:
  1239                           	opt stack 27
  1240                           
  1241                           ;main.c: 324: LATBbits.LATB1 = 0;
  1242                           
  1243                           ;incstack = 0
  1244  00276C  928A               	bcf	3978,1,c	;volatile
  1245                           
  1246                           ;main.c: 325: go_through_cols(0);
  1247  00276E  0E00               	movlw	0
  1248  002770  ECDC  F010         	call	_go_through_cols
  1249                           
  1250                           ;main.c: 326: LATBbits.LATB1 = 1;
  1251  002774  828A               	bsf	3978,1,c	;volatile
  1252                           
  1253                           ;main.c: 328: LATBbits.LATB2 = 0;
  1254  002776  948A               	bcf	3978,2,c	;volatile
  1255                           
  1256                           ;main.c: 329: go_through_cols(4);
  1257  002778  0E04               	movlw	4
  1258  00277A  ECDC  F010         	call	_go_through_cols
  1259                           
  1260                           ;main.c: 330: LATBbits.LATB2 = 1;
  1261  00277E  848A               	bsf	3978,2,c	;volatile
  1262                           
  1263                           ;main.c: 332: LATBbits.LATB3 = 0;
  1264  002780  968A               	bcf	3978,3,c	;volatile
  1265                           
  1266                           ;main.c: 333: go_through_cols(8);
  1267  002782  0E08               	movlw	8
  1268  002784  ECDC  F010         	call	_go_through_cols
  1269                           
  1270                           ;main.c: 334: LATBbits.LATB3 = 1;
  1271  002788  868A               	bsf	3978,3,c	;volatile
  1272                           
  1273                           ;main.c: 336: LATBbits.LATB4 = 0;
  1274  00278A  988A               	bcf	3978,4,c	;volatile
  1275                           
  1276                           ;main.c: 337: go_through_cols(12);
  1277  00278C  0E0C               	movlw	12
  1278  00278E  ECDC  F010         	call	_go_through_cols
  1279                           
  1280                           ;main.c: 338: LATBbits.LATB4 = 1;
  1281  002792  888A               	bsf	3978,4,c	;volatile
  1282  002794  0012               	return		;funcret
  1283  002796                     __end_of_multiplex:
  1284                           	opt stack 0
  1285                           tblptru	equ	0xFF8
  1286                           tblptrh	equ	0xFF7
  1287                           tblptrl	equ	0xFF6
  1288                           tablat	equ	0xFF5
  1289                           postinc0	equ	0xFEE
  1290                           wreg	equ	0xFE8
  1291                           postdec1	equ	0xFE5
  1292                           fsr1l	equ	0xFE1
  1293                           
  1294 ;; *************** function _go_through_cols *****************
  1295 ;; Defined at:
  1296 ;;		line 309 in file "main.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  offset          1    wreg     unsigned char 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  offset          1   69[COMRAM] unsigned char 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1310 ;;      Params:         0       0       0       0       0       0       0       0       0
  1311 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1312 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1313 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1314 ;;Total ram usage:        4 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    2
  1317 ;; This function calls:
  1318 ;;		_myDelay_us
  1319 ;; This function is called by:
  1320 ;;		_multiplex
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text2
  1325  0021B8                     __ptext2:
  1326                           	opt stack 0
  1327  0021B8                     _go_through_cols:
  1328                           	opt stack 27
  1329                           
  1330                           ;incstack = 0
  1331                           ;go_through_cols@offset stored from wreg
  1332  0021B8  6E46               	movwf	go_through_cols@offset,c
  1333                           
  1334                           ;main.c: 310: if (LEDs[offset]==1) LATBbits.LATB5 =1;
  1335  0021BA  5046               	movf	go_through_cols@offset,w,c
  1336  0021BC  0D01               	mullw	1
  1337  0021BE  0EC0               	movlw	low _LEDs
  1338  0021C0  24F3               	addwf	prodl,w,c
  1339  0021C2  6ED9               	movwf	fsr2l,c
  1340  0021C4  0E00               	movlw	high _LEDs
  1341  0021C6  20F4               	addwfc	prodh,w,c
  1342  0021C8  6EDA               	movwf	fsr2h,c
  1343  0021CA  04DE               	decf	postinc2,w,c
  1344  0021CC  B4D8               	btfsc	status,2,c
  1345  0021CE  8A8A               	bsf	3978,5,c	;volatile
  1346                           
  1347                           ;main.c: 311: if (LEDs[offset+1]==1) LATBbits.LATB6 =1;
  1348  0021D0  5046               	movf	go_through_cols@offset,w,c
  1349  0021D2  6E43               	movwf	??_go_through_cols& (0+255),c
  1350  0021D4  6A44               	clrf	(??_go_through_cols+1)& (0+255),c
  1351  0021D6  0E01               	movlw	1
  1352  0021D8  2643               	addwf	??_go_through_cols,f,c
  1353  0021DA  0E00               	movlw	0
  1354  0021DC  2244               	addwfc	??_go_through_cols+1,f,c
  1355  0021DE  0EC0               	movlw	low _LEDs
  1356  0021E0  2443               	addwf	??_go_through_cols,w,c
  1357  0021E2  6ED9               	movwf	fsr2l,c
  1358  0021E4  0E00               	movlw	high _LEDs
  1359  0021E6  2044               	addwfc	??_go_through_cols+1,w,c
  1360  0021E8  6EDA               	movwf	fsr2h,c
  1361  0021EA  04DE               	decf	postinc2,w,c
  1362  0021EC  B4D8               	btfsc	status,2,c
  1363  0021EE  8C8A               	bsf	3978,6,c	;volatile
  1364                           
  1365                           ;main.c: 312: if (LEDs[offset+2]==1) LATBbits.LATB7 =1;
  1366  0021F0  5046               	movf	go_through_cols@offset,w,c
  1367  0021F2  6E43               	movwf	??_go_through_cols& (0+255),c
  1368  0021F4  6A44               	clrf	(??_go_through_cols+1)& (0+255),c
  1369  0021F6  0E02               	movlw	2
  1370  0021F8  2643               	addwf	??_go_through_cols,f,c
  1371  0021FA  0E00               	movlw	0
  1372  0021FC  2244               	addwfc	??_go_through_cols+1,f,c
  1373  0021FE  0EC0               	movlw	low _LEDs
  1374  002200  2443               	addwf	??_go_through_cols,w,c
  1375  002202  6ED9               	movwf	fsr2l,c
  1376  002204  0E00               	movlw	high _LEDs
  1377  002206  2044               	addwfc	??_go_through_cols+1,w,c
  1378  002208  6EDA               	movwf	fsr2h,c
  1379  00220A  04DE               	decf	postinc2,w,c
  1380  00220C  B4D8               	btfsc	status,2,c
  1381  00220E  8E8A               	bsf	3978,7,c	;volatile
  1382                           
  1383                           ;main.c: 313: if (LEDs[offset+3]==1) LATAbits.LATA0 =1;
  1384  002210  5046               	movf	go_through_cols@offset,w,c
  1385  002212  6E43               	movwf	??_go_through_cols& (0+255),c
  1386  002214  6A44               	clrf	(??_go_through_cols+1)& (0+255),c
  1387  002216  0E03               	movlw	3
  1388  002218  2643               	addwf	??_go_through_cols,f,c
  1389  00221A  0E00               	movlw	0
  1390  00221C  2244               	addwfc	??_go_through_cols+1,f,c
  1391  00221E  0EC0               	movlw	low _LEDs
  1392  002220  2443               	addwf	??_go_through_cols,w,c
  1393  002222  6ED9               	movwf	fsr2l,c
  1394  002224  0E00               	movlw	high _LEDs
  1395  002226  2044               	addwfc	??_go_through_cols+1,w,c
  1396  002228  6EDA               	movwf	fsr2h,c
  1397  00222A  04DE               	decf	postinc2,w,c
  1398  00222C  B4D8               	btfsc	status,2,c
  1399  00222E  8089               	bsf	3977,0,c	;volatile
  1400                           
  1401                           ;main.c: 315: myDelay_us(100);
  1402  002230  0E00               	movlw	0
  1403  002232  6E40               	movwf	myDelay_us@us+1,c
  1404  002234  0E64               	movlw	100
  1405  002236  6E3F               	movwf	myDelay_us@us,c
  1406  002238  EC03  F014         	call	_myDelay_us	;wreg free
  1407                           
  1408                           ;main.c: 317: LATBbits.LATB5 = 0;
  1409  00223C  9A8A               	bcf	3978,5,c	;volatile
  1410                           
  1411                           ;main.c: 318: LATBbits.LATB6 = 0;
  1412  00223E  9C8A               	bcf	3978,6,c	;volatile
  1413                           
  1414                           ;main.c: 319: LATBbits.LATB7 = 0;
  1415  002240  9E8A               	bcf	3978,7,c	;volatile
  1416                           
  1417                           ;main.c: 320: LATAbits.LATA0 = 0;
  1418  002242  9089               	bcf	3977,0,c	;volatile
  1419  002244  0012               	return		;funcret
  1420  002246                     __end_of_go_through_cols:
  1421                           	opt stack 0
  1422                           tblptru	equ	0xFF8
  1423                           tblptrh	equ	0xFF7
  1424                           tblptrl	equ	0xFF6
  1425                           tablat	equ	0xFF5
  1426                           prodh	equ	0xFF4
  1427                           prodl	equ	0xFF3
  1428                           postinc0	equ	0xFEE
  1429                           wreg	equ	0xFE8
  1430                           postdec1	equ	0xFE5
  1431                           fsr1l	equ	0xFE1
  1432                           postinc2	equ	0xFDE
  1433                           fsr2h	equ	0xFDA
  1434                           fsr2l	equ	0xFD9
  1435                           status	equ	0xFD8
  1436                           
  1437 ;; *************** function _init *****************
  1438 ;; Defined at:
  1439 ;;		line 72 in file "main.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1453 ;;      Params:         0       0       0       0       0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1455 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1456 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1457 ;;Total ram usage:        3 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    3
  1460 ;; This function calls:
  1461 ;;		___lwtoft
  1462 ;;		_hardware_init
  1463 ;; This function is called by:
  1464 ;;		_main
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text3
  1469  001E50                     __ptext3:
  1470                           	opt stack 0
  1471  001E50                     _init:
  1472                           	opt stack 27
  1473                           
  1474                           ;main.c: 73: TRISCbits.TRISC6 = 0;
  1475                           
  1476                           ;incstack = 0
  1477  001E50  9C94               	bcf	3988,6,c	;volatile
  1478                           
  1479                           ;main.c: 74: TRISCbits.TRISC7 = 0;
  1480  001E52  9E94               	bcf	3988,7,c	;volatile
  1481                           
  1482                           ;main.c: 75: TRISBbits.TRISB0 = 1;
  1483  001E54  8093               	bsf	3987,0,c	;volatile
  1484                           
  1485                           ;main.c: 76: TRISBbits.TRISB1 = 0;
  1486  001E56  9293               	bcf	3987,1,c	;volatile
  1487                           
  1488                           ;main.c: 77: TRISBbits.TRISB2 = 0;
  1489  001E58  9493               	bcf	3987,2,c	;volatile
  1490                           
  1491                           ;main.c: 78: TRISBbits.TRISB3 = 0;
  1492  001E5A  9693               	bcf	3987,3,c	;volatile
  1493                           
  1494                           ;main.c: 79: TRISBbits.TRISB4 = 0;
  1495  001E5C  9893               	bcf	3987,4,c	;volatile
  1496                           
  1497                           ;main.c: 80: TRISBbits.TRISB5 = 0;
  1498  001E5E  9A93               	bcf	3987,5,c	;volatile
  1499                           
  1500                           ;main.c: 81: TRISBbits.TRISB6 = 0;
  1501  001E60  9C93               	bcf	3987,6,c	;volatile
  1502                           
  1503                           ;main.c: 82: TRISBbits.TRISB7 = 0;
  1504  001E62  9E93               	bcf	3987,7,c	;volatile
  1505                           
  1506                           ;main.c: 83: TRISAbits.TRISA0 = 0;
  1507  001E64  9092               	bcf	3986,0,c	;volatile
  1508                           
  1509                           ;main.c: 84: TRISAbits.TRISA1 = 0;
  1510  001E66  9292               	bcf	3986,1,c	;volatile
  1511                           
  1512                           ;main.c: 85: TRISAbits.TRISA3 = 0;
  1513  001E68  9692               	bcf	3986,3,c	;volatile
  1514                           
  1515                           ;main.c: 86: TRISAbits.TRISA4 = 1;
  1516  001E6A  8892               	bsf	3986,4,c	;volatile
  1517                           
  1518                           ;main.c: 87: TRISAbits.TRISA5 = 1;
  1519  001E6C  8A92               	bsf	3986,5,c	;volatile
  1520                           
  1521                           ;main.c: 89: LATCbits.LATC6 = 0;
  1522  001E6E  9C8B               	bcf	3979,6,c	;volatile
  1523                           
  1524                           ;main.c: 90: LATCbits.LATC7 = 0;
  1525  001E70  9E8B               	bcf	3979,7,c	;volatile
  1526                           
  1527                           ;main.c: 91: LATBbits.LATB1 = 0;
  1528  001E72  928A               	bcf	3978,1,c	;volatile
  1529                           
  1530                           ;main.c: 92: LATBbits.LATB2 = 0;
  1531  001E74  948A               	bcf	3978,2,c	;volatile
  1532                           
  1533                           ;main.c: 93: LATBbits.LATB3 = 0;
  1534  001E76  968A               	bcf	3978,3,c	;volatile
  1535                           
  1536                           ;main.c: 94: LATBbits.LATB4 = 0;
  1537  001E78  988A               	bcf	3978,4,c	;volatile
  1538                           
  1539                           ;main.c: 95: LATBbits.LATB5 = 0;
  1540  001E7A  9A8A               	bcf	3978,5,c	;volatile
  1541                           
  1542                           ;main.c: 96: LATBbits.LATB6 = 0;
  1543  001E7C  9C8A               	bcf	3978,6,c	;volatile
  1544                           
  1545                           ;main.c: 97: LATBbits.LATB7 = 0;
  1546  001E7E  9E8A               	bcf	3978,7,c	;volatile
  1547                           
  1548                           ;main.c: 98: LATAbits.LATA0 = 0;
  1549  001E80  9089               	bcf	3977,0,c	;volatile
  1550                           
  1551                           ;main.c: 99: LATAbits.LATA1 = 1;
  1552  001E82  8289               	bsf	3977,1,c	;volatile
  1553                           
  1554                           ;main.c: 100: LATAbits.LATA3 = 0;
  1555  001E84  9689               	bcf	3977,3,c	;volatile
  1556                           
  1557                           ;main.c: 102: current_state = CALIBRATION;
  1558  001E86  0E00               	movlw	0
  1559  001E88  0100               	movlb	0	; () banked
  1560  001E8A  6FD6               	movwf	_current_state& (0+255),b
  1561                           
  1562                           ;main.c: 103: state_to_recover = CALIBRATION;
  1563  001E8C  0E00               	movlw	0
  1564  001E8E  6E4E               	movwf	_state_to_recover,c
  1565                           
  1566                           ;main.c: 105: note_new = 0;
  1567  001E90  0E00               	movlw	0
  1568  001E92  0100               	movlb	0	; () banked
  1569  001E94  6FD1               	movwf	(_note_new+1)& (0+255),b
  1570  001E96  0E00               	movlw	0
  1571  001E98  6FD0               	movwf	_note_new& (0+255),b
  1572                           
  1573                           ;main.c: 106: note_win = 0;
  1574  001E9A  0E00               	movlw	0
  1575  001E9C  0100               	movlb	0	; () banked
  1576  001E9E  6FD3               	movwf	(_note_win+1)& (0+255),b
  1577  001EA0  0E00               	movlw	0
  1578  001EA2  6FD2               	movwf	_note_win& (0+255),b
  1579                           
  1580                           ;main.c: 107: hard_speed = 1.0;
  1581  001EA4  0E00               	movlw	0
  1582  001EA6  0100               	movlb	0	; () banked
  1583  001EA8  6FF0               	movwf	_hard_speed& (0+255),b
  1584  001EAA  0E80               	movlw	128
  1585  001EAC  0100               	movlb	0	; () banked
  1586  001EAE  6FF1               	movwf	(_hard_speed+1)& (0+255),b
  1587  001EB0  0E3F               	movlw	63
  1588  001EB2  0100               	movlb	0	; () banked
  1589  001EB4  6FF2               	movwf	(_hard_speed+2)& (0+255),b
  1590                           
  1591                           ;main.c: 108: hard_speed_timer = 500;
  1592  001EB6  0E01               	movlw	1
  1593  001EB8  0100               	movlb	0	; () banked
  1594  001EBA  6FF7               	movwf	(_hard_speed_timer+1)& (0+255),b
  1595  001EBC  0EF4               	movlw	244
  1596  001EBE  6FF6               	movwf	_hard_speed_timer& (0+255),b
  1597                           
  1598                           ;main.c: 109: stepper_direction = 1;
  1599  001EC0  0E00               	movlw	0
  1600  001EC2  6E50               	movwf	_stepper_direction+1,c
  1601  001EC4  0E01               	movlw	1
  1602  001EC6  6E4F               	movwf	_stepper_direction,c
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;main.c: 110: steps_per_led = total_steps/16;
  1606  001EC8  0E1F               	movlw	low _total_steps
  1607  001ECA  6EF6               	movwf	tblptrl,c
  1608  001ECC                     	if	1	;There is more than 1 active tblptr byte
  1609  001ECC  0E10               	movlw	high _total_steps
  1610  001ECE  6EF7               	movwf	tblptrh,c
  1611  001ED0                     	endif
  1612  001ED0                     	if	0	;There are less than 3 active tblptr bytes
  1613  001ED0                     	endif
  1614  001ED0  0009               	tblrd		*+
  1615  001ED2  CFF5 F01A          	movff	tablat,??_init
  1616  001ED6  0009               	tblrd		*+
  1617  001ED8  CFF5 F01B          	movff	tablat,??_init+1
  1618  001EDC  0E04               	movlw	4
  1619  001EDE  6E1C               	movwf	(??_init+2)& (0+255),c
  1620  001EE0                     u3085:
  1621  001EE0  90D8               	bcf	status,0,c
  1622  001EE2  321B               	rrcf	??_init+1,f,c
  1623  001EE4  321A               	rrcf	??_init,f,c
  1624  001EE6  2E1C               	decfsz	(??_init+2)& (0+255),f,c
  1625  001EE8  D7FB               	goto	u3085
  1626  001EEA  C01A  F017         	movff	??_init,___lwtoft@c
  1627  001EEE  C01B  F018         	movff	??_init+1,___lwtoft@c+1
  1628  001EF2  ECF1  F013         	call	___lwtoft	;wreg free
  1629  001EF6  C017  F0F3         	movff	?___lwtoft,_steps_per_led
  1630  001EFA  C018  F0F4         	movff	?___lwtoft+1,_steps_per_led+1
  1631  001EFE  C019  F0F5         	movff	?___lwtoft+2,_steps_per_led+2
  1632                           
  1633                           ;main.c: 111: hardware_init();
  1634  001F02  EC2E  F014         	call	_hardware_init	;wreg free
  1635                           
  1636                           ;main.c: 112: prev_hall = PORTAbits.RA5;
  1637  001F06  0E00               	movlw	0
  1638  001F08  BA80               	btfsc	3968,5,c	;volatile
  1639  001F0A  0E01               	movlw	1
  1640  001F0C  0100               	movlb	0	; () banked
  1641  001F0E  6FF8               	movwf	_prev_hall& (0+255),b
  1642                           
  1643                           ; BSR set to: 0
  1644  001F10  0012               	return		;funcret
  1645  001F12                     __end_of_init:
  1646                           	opt stack 0
  1647                           tblptru	equ	0xFF8
  1648                           tblptrh	equ	0xFF7
  1649                           tblptrl	equ	0xFF6
  1650                           tablat	equ	0xFF5
  1651                           prodh	equ	0xFF4
  1652                           prodl	equ	0xFF3
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           postdec1	equ	0xFE5
  1656                           fsr1l	equ	0xFE1
  1657                           postinc2	equ	0xFDE
  1658                           fsr2h	equ	0xFDA
  1659                           fsr2l	equ	0xFD9
  1660                           status	equ	0xFD8
  1661                           
  1662 ;; *************** function _hardware_init *****************
  1663 ;; Defined at:
  1664 ;;		line 39 in file "config.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;		None
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1678 ;;      Params:         0       0       0       0       0       0       0       0       0
  1679 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1681 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1682 ;;Total ram usage:        0 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    2
  1685 ;; This function calls:
  1686 ;;		_OpenTimer0
  1687 ;; This function is called by:
  1688 ;;		_init
  1689 ;;		_initBuzz
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text4
  1694  00285C                     __ptext4:
  1695                           	opt stack 0
  1696  00285C                     _hardware_init:
  1697                           	opt stack 27
  1698                           
  1699                           ;config.c: 40: ADCON1 = 0x0F;
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;incstack = 0
  1703  00285C  0E0F               	movlw	15
  1704  00285E  6EC1               	movwf	4033,c	;volatile
  1705                           
  1706                           ;config.c: 50: OpenTimer0(0);
  1707  002860  0E00               	movlw	0
  1708  002862  ECE7  F012         	call	_OpenTimer0
  1709  002866  0012               	return		;funcret
  1710  002868                     __end_of_hardware_init:
  1711                           	opt stack 0
  1712                           tblptru	equ	0xFF8
  1713                           tblptrh	equ	0xFF7
  1714                           tblptrl	equ	0xFF6
  1715                           tablat	equ	0xFF5
  1716                           prodh	equ	0xFF4
  1717                           prodl	equ	0xFF3
  1718                           postinc0	equ	0xFEE
  1719                           wreg	equ	0xFE8
  1720                           postdec1	equ	0xFE5
  1721                           fsr1l	equ	0xFE1
  1722                           postinc2	equ	0xFDE
  1723                           fsr2h	equ	0xFDA
  1724                           fsr2l	equ	0xFD9
  1725                           status	equ	0xFD8
  1726                           
  1727 ;; *************** function _OpenTimer0 *****************
  1728 ;; Defined at:
  1729 ;;		line 97 in file "config.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;  intEnable       1    wreg     unsigned char 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  intEnable       1   16[COMRAM] unsigned char 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1743 ;;      Params:         0       0       0       0       0       0       0       0       0
  1744 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1745 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1746 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1747 ;;Total ram usage:        3 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    1
  1750 ;; This function calls:
  1751 ;;		Nothing
  1752 ;; This function is called by:
  1753 ;;		_hardware_init
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text5
  1758  0025CE                     __ptext5:
  1759                           	opt stack 0
  1760  0025CE                     _OpenTimer0:
  1761                           	opt stack 27
  1762                           
  1763                           ;incstack = 0
  1764                           ;OpenTimer0@intEnable stored from wreg
  1765  0025CE  6E11               	movwf	OpenTimer0@intEnable,c
  1766                           
  1767                           ;config.c: 98: T0CONbits.T08BIT = 1;
  1768  0025D0  8CD5               	bsf	4053,6,c	;volatile
  1769                           
  1770                           ;config.c: 99: T0CONbits.T0CS = 0;
  1771  0025D2  9AD5               	bcf	4053,5,c	;volatile
  1772                           
  1773                           ;config.c: 100: T0CONbits.PSA = 0;
  1774  0025D4  96D5               	bcf	4053,3,c	;volatile
  1775                           
  1776                           ;config.c: 101: T0CONbits.T0PS = 0b101;
  1777  0025D6  50D5               	movf	4053,w,c	;volatile
  1778  0025D8  0BF8               	andlw	-8
  1779  0025DA  0905               	iorlw	5
  1780  0025DC  6ED5               	movwf	4053,c	;volatile
  1781                           
  1782                           ;config.c: 102: TMR0H = 0;
  1783  0025DE  0E00               	movlw	0
  1784  0025E0  6ED7               	movwf	4055,c	;volatile
  1785                           
  1786                           ;config.c: 103: TMR0L = 69;
  1787  0025E2  0E45               	movlw	69
  1788  0025E4  6ED6               	movwf	4054,c	;volatile
  1789                           
  1790                           ;config.c: 105: INTCONbits.TMR0IE = intEnable & 0x01;
  1791  0025E6  C011  F00F         	movff	OpenTimer0@intEnable,??_OpenTimer0
  1792  0025EA  0E01               	movlw	1
  1793  0025EC  160F               	andwf	??_OpenTimer0,f,c
  1794  0025EE  3A0F               	swapf	??_OpenTimer0,f,c
  1795  0025F0  460F               	rlncf	??_OpenTimer0,f,c
  1796  0025F2  50F2               	movf	intcon,w,c	;volatile
  1797  0025F4  180F               	xorwf	??_OpenTimer0,w,c
  1798  0025F6  0BDF               	andlw	-33
  1799  0025F8  180F               	xorwf	??_OpenTimer0,w,c
  1800  0025FA  6EF2               	movwf	intcon,c	;volatile
  1801                           
  1802                           ;config.c: 106: INTCONbits.GIE = (intEnable & 0x01) | INTCONbits.GIE;
  1803  0025FC  AEF2               	btfss	intcon,7,c	;volatile
  1804  0025FE  D003               	goto	u1650
  1805  002600  6A0F               	clrf	??_OpenTimer0& (0+255),c
  1806  002602  2A0F               	incf	??_OpenTimer0& (0+255),f,c
  1807  002604  D001               	goto	u1658
  1808  002606                     u1650:
  1809  002606  6A0F               	clrf	??_OpenTimer0& (0+255),c
  1810  002608                     u1658:
  1811  002608  5011               	movf	OpenTimer0@intEnable,w,c
  1812  00260A  0B01               	andlw	1
  1813  00260C  100F               	iorwf	??_OpenTimer0,w,c
  1814  00260E  6E10               	movwf	(??_OpenTimer0+1)& (0+255),c
  1815  002610  3210               	rrcf	??_OpenTimer0+1,f,c
  1816  002612  3210               	rrcf	??_OpenTimer0+1,f,c
  1817  002614  50F2               	movf	intcon,w,c	;volatile
  1818  002616  1810               	xorwf	??_OpenTimer0+1,w,c
  1819  002618  0B7F               	andlw	-129
  1820  00261A  1810               	xorwf	??_OpenTimer0+1,w,c
  1821  00261C  6EF2               	movwf	intcon,c	;volatile
  1822                           
  1823                           ;config.c: 107: INTCONbits.TMR0IF = 0;
  1824  00261E  94F2               	bcf	intcon,2,c	;volatile
  1825  002620  0012               	return		;funcret
  1826  002622                     __end_of_OpenTimer0:
  1827                           	opt stack 0
  1828                           tblptru	equ	0xFF8
  1829                           tblptrh	equ	0xFF7
  1830                           tblptrl	equ	0xFF6
  1831                           tablat	equ	0xFF5
  1832                           prodh	equ	0xFF4
  1833                           prodl	equ	0xFF3
  1834                           intcon	equ	0xFF2
  1835                           postinc0	equ	0xFEE
  1836                           wreg	equ	0xFE8
  1837                           postdec1	equ	0xFE5
  1838                           fsr1l	equ	0xFE1
  1839                           postinc2	equ	0xFDE
  1840                           fsr2h	equ	0xFDA
  1841                           fsr2l	equ	0xFD9
  1842                           status	equ	0xFD8
  1843                           
  1844 ;; *************** function ___lwtoft *****************
  1845 ;; Defined at:
  1846 ;;		line 28 in file "/Applications/microchip/xc8/v1.36/sources/common/lwtoft.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  c               2   22[COMRAM] unsigned int 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  3   22[COMRAM] float 
  1853 ;; Registers used:
  1854 ;;		wreg, status,2, status,0, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1860 ;;      Params:         3       0       0       0       0       0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1863 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1864 ;;Total ram usage:        3 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    2
  1867 ;; This function calls:
  1868 ;;		___ftpack
  1869 ;; This function is called by:
  1870 ;;		_init
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text6
  1875  0027E2                     __ptext6:
  1876                           	opt stack 0
  1877  0027E2                     ___lwtoft:
  1878                           	opt stack 27
  1879                           
  1880                           ;incstack = 0
  1881  0027E2  C017  F00F         	movff	___lwtoft@c,___ftpack@arg
  1882  0027E6  C018  F010         	movff	___lwtoft@c+1,___ftpack@arg+1
  1883  0027EA  6A11               	clrf	___ftpack@arg+2,c
  1884  0027EC  0E8E               	movlw	142
  1885  0027EE  6E12               	movwf	___ftpack@exp,c
  1886  0027F0  0E00               	movlw	0
  1887  0027F2  6E13               	movwf	___ftpack@sign,c
  1888  0027F4  ECE9  F00F         	call	___ftpack	;wreg free
  1889  0027F8  C00F  F017         	movff	?___ftpack,?___lwtoft
  1890  0027FC  C010  F018         	movff	?___ftpack+1,?___lwtoft+1
  1891  002800  C011  F019         	movff	?___ftpack+2,?___lwtoft+2
  1892  002804  0012               	return	
  1893  002806                     __end_of___lwtoft:
  1894                           	opt stack 0
  1895                           tblptru	equ	0xFF8
  1896                           tblptrh	equ	0xFF7
  1897                           tblptrl	equ	0xFF6
  1898                           tablat	equ	0xFF5
  1899                           prodh	equ	0xFF4
  1900                           prodl	equ	0xFF3
  1901                           intcon	equ	0xFF2
  1902                           postinc0	equ	0xFEE
  1903                           wreg	equ	0xFE8
  1904                           postdec1	equ	0xFE5
  1905                           fsr1l	equ	0xFE1
  1906                           postinc2	equ	0xFDE
  1907                           fsr2h	equ	0xFDA
  1908                           fsr2l	equ	0xFD9
  1909                           status	equ	0xFD8
  1910                           
  1911 ;; *************** function _fsm *****************
  1912 ;; Defined at:
  1913 ;;		line 117 in file "main.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;  i               1   22[BANK0 ] unsigned char 
  1918 ;;  i               1   21[BANK0 ] unsigned char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1928 ;;      Params:         0       0       0       0       0       0       0       0       0
  1929 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1931 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1932 ;;Total ram usage:        5 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    5
  1935 ;; This function calls:
  1936 ;;		___awdiv
  1937 ;;		___awmod
  1938 ;;		___awtoft
  1939 ;;		___ftadd
  1940 ;;		___ftdiv
  1941 ;;		___ftge
  1942 ;;		___ftmul
  1943 ;;		___lbtoft
  1944 ;;		___lwmod
  1945 ;;		_buzz
  1946 ;;		_nothingElseMatters
  1947 ;;		_rand
  1948 ;;		_setAllLeds
  1949 ;;		_stepper_pulse
  1950 ;;		_superMario
  1951 ;; This function is called by:
  1952 ;;		_main
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text7
  1957  001022                     __ptext7:
  1958                           	opt stack 0
  1959  001022                     _fsm:
  1960                           	opt stack 25
  1961                           
  1962                           ;main.c: 119: switch (current_state) {
  1963                           
  1964                           ;incstack = 0
  1965  001022  D24F               	goto	l3068
  1966  001024                     l2902:
  1967                           
  1968                           ;main.c: 122: stepper_pulse(1);
  1969  001024  0E00               	movlw	0
  1970  001026  6E43               	movwf	stepper_pulse@speed,c
  1971  001028  0E80               	movlw	128
  1972  00102A  6E44               	movwf	stepper_pulse@speed+1,c
  1973  00102C  0E3F               	movlw	63
  1974  00102E  6E45               	movwf	stepper_pulse@speed+2,c
  1975  001030  EC83  F00D         	call	_stepper_pulse	;wreg free
  1976                           
  1977                           ;main.c: 125: if (PORTAbits.RA5 != prev_hall) {
  1978  001034  AA80               	btfss	3968,5,c	;volatile
  1979  001036  D002               	goto	u3090
  1980  001038  0E01               	movlw	1
  1981  00103A  D001               	goto	u3096
  1982  00103C                     u3090:
  1983  00103C  0E00               	movlw	0
  1984  00103E                     u3096:
  1985  00103E  0100               	movlb	0	; () banked
  1986  001040  19F8               	xorwf	_prev_hall& (0+255),w,b
  1987  001042  B4D8               	btfsc	status,2,c
  1988  001044  0012               	return	
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;main.c: 127: position = 0;
  1992  001046  0E00               	movlw	0
  1993  001048  0100               	movlb	0	; () banked
  1994  00104A  6FD5               	movwf	(_position+1)& (0+255),b
  1995  00104C  0E00               	movlw	0
  1996  00104E  6FD4               	movwf	_position& (0+255),b
  1997                           
  1998                           ;main.c: 128: current_state = NEW_GAME;
  1999  001050  0E01               	movlw	1
  2000  001052  0100               	movlb	0	; () banked
  2001  001054  6FD6               	movwf	_current_state& (0+255),b
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;main.c: 129: }
  2005                           ;main.c: 131: break;
  2006  001056  0012               	return	
  2007  001058                     l2908:
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;main.c: 135: setAllLeds(0);
  2011  001058  0E00               	movlw	0
  2012  00105A  ECCB  F013         	call	_setAllLeds
  2013                           
  2014                           ;main.c: 137: note_new%=last_new_note;
  2015  00105E  C0D0  F00F         	movff	_note_new,___lwmod@dividend
  2016  001062  C0D1  F010         	movff	_note_new+1,___lwmod@dividend+1
  2017  001066  0E1B               	movlw	low _last_new_note
  2018  001068  6EF6               	movwf	tblptrl,c
  2019  00106A                     	if	1	;There is more than 1 active tblptr byte
  2020  00106A  0E10               	movlw	high _last_new_note
  2021  00106C  6EF7               	movwf	tblptrh,c
  2022  00106E                     	endif
  2023  00106E                     	if	0	;There are less than 3 active tblptr bytes
  2024  00106E                     	endif
  2025  00106E  0009               	tblrd		*+
  2026  001070  CFF5 F011          	movff	tablat,___lwmod@divisor
  2027  001074  000A               	tblrd		*-
  2028  001076  CFF5 F012          	movff	tablat,___lwmod@divisor+1
  2029  00107A  EC63  F013         	call	___lwmod	;wreg free
  2030  00107E  C00F  F0D0         	movff	?___lwmod,_note_new
  2031  001082  C010  F0D1         	movff	?___lwmod+1,_note_new+1
  2032                           
  2033                           ;main.c: 138: was_released = 0;
  2034  001086  0E00               	movlw	0
  2035  001088  0100               	movlb	0	; () banked
  2036  00108A  6FD8               	movwf	_was_released& (0+255),b
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;main.c: 139: note_win = 0;
  2040  00108C  0E00               	movlw	0
  2041  00108E  0100               	movlb	0	; () banked
  2042  001090  6FD3               	movwf	(_note_win+1)& (0+255),b
  2043  001092  0E00               	movlw	0
  2044  001094  6FD2               	movwf	_note_win& (0+255),b
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;main.c: 140: LATAbits.LATA1 = 1;
  2048  001096  8289               	bsf	3977,1,c	;volatile
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;main.c: 141: nothingElseMatters(note_new);
  2052  001098  C0D0  F045         	movff	_note_new,nothingElseMatters@index
  2053  00109C  C0D1  F046         	movff	_note_new+1,nothingElseMatters@index+1
  2054  0010A0  ECA3  F011         	call	_nothingElseMatters	;wreg free
  2055                           
  2056                           ;main.c: 142: note_new++;
  2057  0010A4  0100               	movlb	0	; () banked
  2058  0010A6  4BD0               	infsnz	_note_new& (0+255),f,b
  2059  0010A8  2BD1               	incf	(_note_new+1)& (0+255),f,b
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;main.c: 145: if (PORTAbits.RA4 == 0 && PORTBbits.RB0 == 0) {
  2063  0010AA  A880               	btfss	3968,4,c	;volatile
  2064                           
  2065                           ; BSR set to: 0
  2066  0010AC  B081               	btfsc	3969,0,c	;volatile
  2067  0010AE  D007               	goto	l168
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;main.c: 146: current_state = MOVE_HARD;
  2071  0010B0  0E03               	movlw	3
  2072  0010B2  0100               	movlb	0	; () banked
  2073  0010B4  6FD6               	movwf	_current_state& (0+255),b
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;main.c: 147: setAllLeds(0);
  2077  0010B6  0E00               	movlw	0
  2078  0010B8  ECCB  F013         	call	_setAllLeds
  2079                           
  2080                           ;main.c: 148: }
  2081  0010BC  0012               	return	
  2082  0010BE                     l168:
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;main.c: 149: else
  2086                           ;main.c: 150: if (PORTAbits.RA4 == 0 && PORTBbits.RB0 == 1) {
  2087  0010BE  B880               	btfsc	3968,4,c	;volatile
  2088  0010C0  0012               	return	
  2089                           
  2090                           ; BSR set to: 0
  2091  0010C2  A081               	btfss	3969,0,c	;volatile
  2092  0010C4  0012               	return	
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;main.c: 151: current_state = MOVE_EASY;
  2096  0010C6  0E02               	movlw	2
  2097  0010C8  0100               	movlb	0	; () banked
  2098  0010CA  6FD6               	movwf	_current_state& (0+255),b
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;main.c: 152: setAllLeds(0);
  2102  0010CC  0E00               	movlw	0
  2103  0010CE  ECCB  F013         	call	_setAllLeds
  2104                           
  2105                           ;main.c: 153: }
  2106                           ;main.c: 155: break;
  2107  0010D2  0012               	return	
  2108  0010D4                     l2936:
  2109                           
  2110                           ;main.c: 159: stepper_pulse(1);
  2111  0010D4  0E00               	movlw	0
  2112  0010D6  6E43               	movwf	stepper_pulse@speed,c
  2113  0010D8  0E80               	movlw	128
  2114  0010DA  6E44               	movwf	stepper_pulse@speed+1,c
  2115  0010DC  0E3F               	movlw	63
  2116  0010DE  6E45               	movwf	stepper_pulse@speed+2,c
  2117  0010E0  EC83  F00D         	call	_stepper_pulse	;wreg free
  2118                           
  2119                           ;main.c: 161: if (PORTAbits.RA4 == 0) {
  2120  0010E4  B880               	btfsc	3968,4,c	;volatile
  2121  0010E6  D006               	goto	l2944
  2122                           
  2123                           ;main.c: 162: if (was_released == 1)
  2124  0010E8  0100               	movlb	0	; () banked
  2125  0010EA  05D8               	decf	_was_released& (0+255),w,b
  2126  0010EC  A4D8               	btfss	status,2,c
  2127  0010EE  D00A               	goto	l2948
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;main.c: 163: current_state = FIRE;
  2131  0010F0  0E05               	movlw	5
  2132  0010F2  D006               	goto	L1
  2133  0010F4                     l2944:
  2134                           
  2135                           ;main.c: 165: else {
  2136                           ;main.c: 166: if (was_released == 0)
  2137  0010F4  0100               	movlb	0	; () banked
  2138  0010F6  51D8               	movf	_was_released& (0+255),w,b
  2139  0010F8  0100               	movlb	0	; () banked
  2140  0010FA  A4D8               	btfss	status,2,c
  2141  0010FC  D003               	goto	l2948
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;main.c: 167: current_state = RELEASE;
  2145  0010FE  0E04               	movlw	4
  2146  001100                     L1:
  2147  001100  0100               	movlb	0	; () banked
  2148  001102  6FD6               	movwf	_current_state& (0+255),b
  2149  001104                     l2948:
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;main.c: 168: }
  2153                           ;main.c: 170: if (PORTBbits.RB0 == 0)
  2154  001104  B081               	btfsc	3969,0,c	;volatile
  2155  001106  0012               	return	
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;main.c: 171: current_state = MOVE_HARD;
  2159  001108  0E03               	movlw	3
  2160  00110A  0100               	movlb	0	; () banked
  2161  00110C  6FD6               	movwf	_current_state& (0+255),b
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;main.c: 173: break;
  2165  00110E  0012               	return	
  2166  001110                     l2952:
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;main.c: 177: stepper_pulse(hard_speed);
  2170  001110  C0F0  F043         	movff	_hard_speed,stepper_pulse@speed
  2171  001114  C0F1  F044         	movff	_hard_speed+1,stepper_pulse@speed+1
  2172  001118  C0F2  F045         	movff	_hard_speed+2,stepper_pulse@speed+2
  2173  00111C  EC83  F00D         	call	_stepper_pulse	;wreg free
  2174                           
  2175                           ;main.c: 178: hard_speed_timer--;
  2176  001120  0100               	movlb	0	; () banked
  2177  001122  07F6               	decf	_hard_speed_timer& (0+255),f,b
  2178  001124  A0D8               	btfss	status,0,c
  2179  001126  07F7               	decf	(_hard_speed_timer+1)& (0+255),f,b
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;main.c: 180: if (was_released == 1) {
  2183  001128  0100               	movlb	0	; () banked
  2184  00112A  05D8               	decf	_was_released& (0+255),w,b
  2185  00112C  A4D8               	btfss	status,2,c
  2186  00112E  D00E               	goto	l178
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;main.c: 181: if (PORTAbits.RA4 == 0) {
  2190  001130  B880               	btfsc	3968,4,c	;volatile
  2191  001132  D002               	goto	l2962
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;main.c: 182: current_state = FIRE;
  2195  001134  0E05               	movlw	5
  2196  001136  D00D               	goto	L3
  2197  001138                     l2962:
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;main.c: 184: else if (hard_speed_timer <= 5) {
  2201  001138  0100               	movlb	0	; () banked
  2202  00113A  51F7               	movf	(_hard_speed_timer+1)& (0+255),w,b
  2203  00113C  E10C               	bnz	l2972
  2204  00113E  0E06               	movlw	6
  2205  001140  0100               	movlb	0	; () banked
  2206  001142  5DF6               	subwf	_hard_speed_timer& (0+255),w,b
  2207  001144  B0D8               	btfsc	status,0,c
  2208  001146  D007               	goto	l2972
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;main.c: 185: current_state = CHANGE_SPEED;
  2212  001148  0E06               	movlw	6
  2213  00114A  D003               	goto	L3
  2214  00114C                     l178:
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;main.c: 188: else if (PORTAbits.RA4 == 0) {
  2218  00114C  A880               	btfss	3968,4,c	;volatile
  2219  00114E  D7F4               	goto	l2962
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;main.c: 193: else {
  2223                           ;main.c: 194: current_state = RELEASE;
  2224                           
  2225                           ; BSR set to: 0
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;main.c: 191: }
  2229                           ;main.c: 192: }
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;main.c: 190: current_state = CHANGE_SPEED;
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;main.c: 189: if (hard_speed_timer <= 5) {
  2236  001150  0E04               	movlw	4
  2237  001152                     L3:
  2238  001152  0100               	movlb	0	; () banked
  2239  001154  6FD6               	movwf	_current_state& (0+255),b
  2240  001156                     l2972:
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;main.c: 195: }
  2244                           ;main.c: 197: if (PORTBbits.RB0 == 1)
  2245  001156  A081               	btfss	3969,0,c	;volatile
  2246  001158  0012               	return	
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;main.c: 198: current_state = MOVE_EASY;
  2250  00115A  0E02               	movlw	2
  2251  00115C  0100               	movlb	0	; () banked
  2252  00115E  6FD6               	movwf	_current_state& (0+255),b
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;main.c: 201: break;
  2256  001160  0012               	return	
  2257  001162                     l2976:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;main.c: 206: was_released = 1;
  2261  001162  0E01               	movlw	1
  2262  001164  0100               	movlb	0	; () banked
  2263  001166  6FD8               	movwf	_was_released& (0+255),b
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;main.c: 208: if (PORTBbits.RB0 == 1)
  2267  001168  A081               	btfss	3969,0,c	;volatile
  2268  00116A  D004               	goto	l2982
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;main.c: 209: current_state = MOVE_EASY;
  2272  00116C  0E02               	movlw	2
  2273  00116E  0100               	movlb	0	; () banked
  2274  001170  6FD6               	movwf	_current_state& (0+255),b
  2275  001172  0012               	return	
  2276  001174                     l2982:
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;main.c: 210: else
  2280                           ;main.c: 211: current_state = MOVE_HARD;
  2281  001174  0E03               	movlw	3
  2282  001176  0100               	movlb	0	; () banked
  2283  001178  6FD6               	movwf	_current_state& (0+255),b
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;main.c: 212: break;
  2287  00117A  0012               	return	
  2288  00117C                     l2984:
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;main.c: 216: LEDs[target] = 1;
  2292  00117C  0100               	movlb	0	; () banked
  2293  00117E  51D7               	movf	_target& (0+255),w,b
  2294  001180  0D01               	mullw	1
  2295  001182  0EC0               	movlw	low _LEDs
  2296  001184  24F3               	addwf	prodl,w,c
  2297  001186  6ED9               	movwf	fsr2l,c
  2298  001188  0E00               	movlw	high _LEDs
  2299  00118A  20F4               	addwfc	prodh,w,c
  2300  00118C  6EDA               	movwf	fsr2h,c
  2301  00118E  0E01               	movlw	1
  2302  001190  6EDF               	movwf	indf2,c
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;main.c: 217: char i = 0;
  2306  001192  0E00               	movlw	0
  2307  001194  0100               	movlb	0	; () banked
  2308  001196  6FEE               	movwf	fsm@i& (0+255),b
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;main.c: 218: for (i = 0; i <= 15; i++) {
  2312  001198  0E00               	movlw	0
  2313  00119A  0100               	movlb	0	; () banked
  2314  00119C  6FEE               	movwf	fsm@i& (0+255),b
  2315  00119E                     l2990:
  2316                           
  2317                           ; BSR set to: 0
  2318  00119E  0E0F               	movlw	15
  2319  0011A0  0100               	movlb	0	; () banked
  2320  0011A2  65EE               	cpfsgt	fsm@i& (0+255),b
  2321  0011A4  D001               	goto	l2994
  2322  0011A6  D017               	goto	l3006
  2323  0011A8                     l2994:
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;main.c: 219: if (LEDs[i] == 0) {
  2327  0011A8  0100               	movlb	0	; () banked
  2328  0011AA  51EE               	movf	fsm@i& (0+255),w,b
  2329  0011AC  0D01               	mullw	1
  2330  0011AE  0EC0               	movlw	low _LEDs
  2331  0011B0  24F3               	addwf	prodl,w,c
  2332  0011B2  6ED9               	movwf	fsr2l,c
  2333  0011B4  0E00               	movlw	high _LEDs
  2334  0011B6  20F4               	addwfc	prodh,w,c
  2335  0011B8  6EDA               	movwf	fsr2h,c
  2336  0011BA  50DF               	movf	indf2,w,c
  2337  0011BC  A4D8               	btfss	status,2,c
  2338  0011BE  D008               	goto	l3002
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;main.c: 220: if (PORTBbits.RB0 == 1)
  2342  0011C0  A081               	btfss	3969,0,c	;volatile
  2343  0011C2  D002               	goto	l3000
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;main.c: 221: current_state = MOVE_EASY;
  2347  0011C4  0E02               	movlw	2
  2348  0011C6  D001               	goto	L4
  2349  0011C8                     l3000:
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;main.c: 222: else
  2353                           ;main.c: 223: current_state = MOVE_HARD;
  2354  0011C8  0E03               	movlw	3
  2355  0011CA                     L4:
  2356  0011CA  0100               	movlb	0	; () banked
  2357  0011CC  6FD6               	movwf	_current_state& (0+255),b
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;main.c: 224: break;
  2361  0011CE  D003               	goto	l3006
  2362  0011D0                     l3002:
  2363                           
  2364                           ; BSR set to: 0
  2365  0011D0  0100               	movlb	0	; () banked
  2366  0011D2  2BEE               	incf	fsm@i& (0+255),f,b
  2367  0011D4  D7E4               	goto	l2990
  2368  0011D6                     l3006:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;main.c: 225: }
  2372                           ;main.c: 226: }
  2373                           ;main.c: 227: if (i == 16)
  2374  0011D6  0E10               	movlw	16
  2375  0011D8  0100               	movlb	0	; () banked
  2376  0011DA  19EE               	xorwf	fsm@i& (0+255),w,b
  2377  0011DC  A4D8               	btfss	status,2,c
  2378  0011DE  0012               	return	
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;main.c: 228: current_state = GAME_WON;
  2382  0011E0  0E08               	movlw	8
  2383  0011E2  0100               	movlb	0	; () banked
  2384  0011E4  6FD6               	movwf	_current_state& (0+255),b
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;main.c: 229: break;
  2388  0011E6  0012               	return	
  2389  0011E8                     l3010:
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;main.c: 233: if (rand()%2 >= 1)
  2393  0011E8  EC3A  F013         	call	_rand	;wreg free
  2394  0011EC  0E01               	movlw	1
  2395  0011EE  161B               	andwf	?_rand,f,c
  2396  0011F0  0E00               	movlw	0
  2397  0011F2  161C               	andwf	?_rand+1,f,c
  2398  0011F4  BE1C               	btfsc	?_rand+1,7,c
  2399  0011F6  D00A               	goto	l198
  2400  0011F8  501C               	movf	?_rand+1,w,c
  2401  0011FA  E103               	bnz	u3310
  2402  0011FC  041B               	decf	?_rand,w,c
  2403  0011FE  A0D8               	btfss	status,0,c
  2404  001200  D005               	goto	l198
  2405  001202                     u3310:
  2406                           
  2407                           ;main.c: 234: stepper_direction = 1;
  2408  001202  0E00               	movlw	0
  2409  001204  6E50               	movwf	_stepper_direction+1,c
  2410  001206  0E01               	movlw	1
  2411  001208  6E4F               	movwf	_stepper_direction,c
  2412  00120A  D002               	goto	l3014
  2413  00120C                     l198:
  2414                           
  2415                           ;main.c: 235: else
  2416                           ;main.c: 236: stepper_direction = -1;
  2417  00120C  684F               	setf	_stepper_direction,c
  2418  00120E  6850               	setf	_stepper_direction+1,c
  2419  001210                     l3014:
  2420                           
  2421                           ;main.c: 239: hard_speed_timer = (int)(rand()%1000+100);
  2422  001210  EC3A  F013         	call	_rand	;wreg free
  2423  001214  C01B  F01D         	movff	?_rand,___awmod@dividend
  2424  001218  C01C  F01E         	movff	?_rand+1,___awmod@dividend+1
  2425  00121C  0E03               	movlw	3
  2426  00121E  6E20               	movwf	___awmod@divisor+1,c
  2427  001220  0EE8               	movlw	232
  2428  001222  6E1F               	movwf	___awmod@divisor,c
  2429  001224  EC1D  F012         	call	___awmod	;wreg free
  2430  001228  0E64               	movlw	100
  2431  00122A  241D               	addwf	?___awmod,w,c
  2432  00122C  0100               	movlb	0	; () banked
  2433  00122E  6FF6               	movwf	_hard_speed_timer& (0+255),b
  2434  001230  0E00               	movlw	0
  2435  001232  201E               	addwfc	?___awmod+1,w,c
  2436  001234  0100               	movlb	0	; () banked
  2437  001236  6FF7               	movwf	(_hard_speed_timer+1)& (0+255),b
  2438                           
  2439                           ;main.c: 240: hard_speed = 1+(rand()%100)/100;
  2440  001238  0E00               	movlw	0
  2441  00123A  6E26               	movwf	___awdiv@divisor+1,c
  2442  00123C  0E64               	movlw	100
  2443  00123E  6E25               	movwf	___awdiv@divisor,c
  2444  001240  0E00               	movlw	0
  2445  001242  6E20               	movwf	___awmod@divisor+1,c
  2446  001244  0E64               	movlw	100
  2447  001246  6E1F               	movwf	___awmod@divisor,c
  2448  001248  EC3A  F013         	call	_rand	;wreg free
  2449  00124C  C01B  F01D         	movff	?_rand,___awmod@dividend
  2450  001250  C01C  F01E         	movff	?_rand+1,___awmod@dividend+1
  2451  001254  EC1D  F012         	call	___awmod	;wreg free
  2452  001258  C01D  F023         	movff	?___awmod,___awdiv@dividend
  2453  00125C  C01E  F024         	movff	?___awmod+1,___awdiv@dividend+1
  2454  001260  EC23  F011         	call	___awdiv	;wreg free
  2455  001264  0E01               	movlw	1
  2456  001266  2423               	addwf	?___awdiv,w,c
  2457  001268  6E2B               	movwf	___awtoft@c,c
  2458  00126A  0E00               	movlw	0
  2459  00126C  2024               	addwfc	?___awdiv+1,w,c
  2460  00126E  6E2C               	movwf	___awtoft@c+1,c
  2461  001270  EC84  F013         	call	___awtoft	;wreg free
  2462  001274  C02B  F0F0         	movff	?___awtoft,_hard_speed
  2463  001278  C02C  F0F1         	movff	?___awtoft+1,_hard_speed+1
  2464  00127C  C02D  F0F2         	movff	?___awtoft+2,_hard_speed+2
  2465                           
  2466                           ;main.c: 242: current_state = MOVE_HARD;
  2467  001280  0E03               	movlw	3
  2468  001282  0100               	movlb	0	; () banked
  2469  001284  6FD6               	movwf	_current_state& (0+255),b
  2470                           
  2471                           ;main.c: 243: break;
  2472  001286  0012               	return	
  2473  001288                     l3018:
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;main.c: 246: was_released = 0;
  2477  001288  0E00               	movlw	0
  2478  00128A  0100               	movlb	0	; () banked
  2479  00128C  6FD8               	movwf	_was_released& (0+255),b
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;main.c: 247: buzz(300,100);
  2483  00128E  0E2C               	movlw	44
  2484  001290  0100               	movlb	0	; () banked
  2485  001292  6FD9               	movwf	buzz@freq& (0+255),b
  2486  001294  0E01               	movlw	1
  2487  001296  6FDA               	movwf	(buzz@freq+1)& (0+255),b
  2488  001298  0E00               	movlw	0
  2489  00129A  6FDB               	movwf	(buzz@freq+2)& (0+255),b
  2490  00129C  0E00               	movlw	0
  2491  00129E  6FDC               	movwf	(buzz@freq+3)& (0+255),b
  2492  0012A0  0E00               	movlw	0
  2493  0012A2  0100               	movlb	0	; () banked
  2494  0012A4  6FDE               	movwf	(buzz@duration+1)& (0+255),b
  2495  0012A6  0E64               	movlw	100
  2496  0012A8  6FDD               	movwf	buzz@duration& (0+255),b
  2497  0012AA  EC82  F00B         	call	_buzz	;wreg free
  2498                           
  2499                           ;main.c: 249: for (char i = 0;i<=16;i++) {
  2500  0012AE  0E00               	movlw	0
  2501  0012B0  0100               	movlb	0	; () banked
  2502  0012B2  6FEF               	movwf	fsm@i_972& (0+255),b
  2503  0012B4                     l3024:
  2504                           
  2505                           ; BSR set to: 0
  2506  0012B4  0E10               	movlw	16
  2507  0012B6  0100               	movlb	0	; () banked
  2508  0012B8  65EF               	cpfsgt	fsm@i_972& (0+255),b
  2509  0012BA  D001               	goto	l3028
  2510  0012BC  D0AC               	goto	l3038
  2511  0012BE                     l3028:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;main.c: 250: if ((float)position >= ((i-1)*steps_per_led+steps_per_led/2) && (float)pos
      +                          ition <= (i*steps_per_led+steps_per_led/2+1)) {
  2515  0012BE  C0D4  F02B         	movff	_position,___awtoft@c
  2516  0012C2  C0D5  F02C         	movff	_position+1,___awtoft@c+1
  2517  0012C6  EC84  F013         	call	___awtoft	;wreg free
  2518  0012CA  C02B  F0DC         	movff	?___awtoft,___ftge@ff1
  2519  0012CE  C02C  F0DD         	movff	?___awtoft+1,___ftge@ff1+1
  2520  0012D2  C02D  F0DE         	movff	?___awtoft+2,___ftge@ff1+2
  2521  0012D6  0E00               	movlw	0
  2522  0012D8  6E24               	movwf	___ftdiv@f2,c
  2523  0012DA  0E00               	movlw	0
  2524  0012DC  6E25               	movwf	___ftdiv@f2+1,c
  2525  0012DE  0E40               	movlw	64
  2526  0012E0  6E26               	movwf	___ftdiv@f2+2,c
  2527  0012E2  C0F3  F021         	movff	_steps_per_led,___ftdiv@f1
  2528  0012E6  C0F4  F022         	movff	_steps_per_led+1,___ftdiv@f1+1
  2529  0012EA  C0F5  F023         	movff	_steps_per_led+2,___ftdiv@f1+2
  2530  0012EE  EC10  F00D         	call	___ftdiv	;wreg free
  2531  0012F2  C021  F041         	movff	?___ftdiv,___ftadd@f2
  2532  0012F6  C022  F042         	movff	?___ftdiv+1,___ftadd@f2+1
  2533  0012FA  C023  F043         	movff	?___ftdiv+2,___ftadd@f2+2
  2534  0012FE  C0F3  F032         	movff	_steps_per_led,___ftmul@f2
  2535  001302  C0F4  F033         	movff	_steps_per_led+1,___ftmul@f2+1
  2536  001306  C0F5  F034         	movff	_steps_per_led+2,___ftmul@f2+2
  2537  00130A  0EFF               	movlw	255
  2538  00130C  0100               	movlb	0	; () banked
  2539  00130E  25EF               	addwf	fsm@i_972& (0+255),w,b
  2540  001310  6E2B               	movwf	___awtoft@c,c
  2541  001312  6A2C               	clrf	___awtoft@c+1,c
  2542  001314  0EFF               	movlw	255
  2543  001316  222C               	addwfc	___awtoft@c+1,f,c
  2544  001318  EC84  F013         	call	___awtoft	;wreg free
  2545  00131C  C02B  F02F         	movff	?___awtoft,___ftmul@f1
  2546  001320  C02C  F030         	movff	?___awtoft+1,___ftmul@f1+1
  2547  001324  C02D  F031         	movff	?___awtoft+2,___ftmul@f1+2
  2548  001328  EC96  F00C         	call	___ftmul	;wreg free
  2549  00132C  C02F  F03E         	movff	?___ftmul,___ftadd@f1
  2550  001330  C030  F03F         	movff	?___ftmul+1,___ftadd@f1+1
  2551  001334  C031  F040         	movff	?___ftmul+2,___ftadd@f1+2
  2552  001338  EC83  F00A         	call	___ftadd	;wreg free
  2553  00133C  C03E  F0DF         	movff	?___ftadd,___ftge@ff2
  2554  001340  C03F  F0E0         	movff	?___ftadd+1,___ftge@ff2+1
  2555  001344  C040  F0E1         	movff	?___ftadd+2,___ftge@ff2+2
  2556  001348  ECC4  F00E         	call	___ftge	;wreg free
  2557  00134C  0100               	movlb	0	; () banked
  2558  00134E  A0D8               	btfss	status,0,c
  2559  001350  D05F               	goto	l3034
  2560                           
  2561                           ; BSR set to: 0
  2562  001352  0E00               	movlw	0
  2563  001354  6E24               	movwf	___ftdiv@f2,c
  2564  001356  0E00               	movlw	0
  2565  001358  6E25               	movwf	___ftdiv@f2+1,c
  2566  00135A  0E40               	movlw	64
  2567  00135C  6E26               	movwf	___ftdiv@f2+2,c
  2568  00135E  C0F3  F021         	movff	_steps_per_led,___ftdiv@f1
  2569  001362  C0F4  F022         	movff	_steps_per_led+1,___ftdiv@f1+1
  2570  001366  C0F5  F023         	movff	_steps_per_led+2,___ftdiv@f1+2
  2571  00136A  EC10  F00D         	call	___ftdiv	;wreg free
  2572  00136E  C021  F041         	movff	?___ftdiv,___ftadd@f2
  2573  001372  C022  F042         	movff	?___ftdiv+1,___ftadd@f2+1
  2574  001376  C023  F043         	movff	?___ftdiv+2,___ftadd@f2+2
  2575  00137A  C0F3  F032         	movff	_steps_per_led,___ftmul@f2
  2576  00137E  C0F4  F033         	movff	_steps_per_led+1,___ftmul@f2+1
  2577  001382  C0F5  F034         	movff	_steps_per_led+2,___ftmul@f2+2
  2578  001386  0100               	movlb	0	; () banked
  2579  001388  51EF               	movf	fsm@i_972& (0+255),w,b
  2580  00138A  EC15  F014         	call	___lbtoft
  2581  00138E  C017  F02F         	movff	?___lbtoft,___ftmul@f1
  2582  001392  C018  F030         	movff	?___lbtoft+1,___ftmul@f1+1
  2583  001396  C019  F031         	movff	?___lbtoft+2,___ftmul@f1+2
  2584  00139A  EC96  F00C         	call	___ftmul	;wreg free
  2585  00139E  C02F  F03E         	movff	?___ftmul,___ftadd@f1
  2586  0013A2  C030  F03F         	movff	?___ftmul+1,___ftadd@f1+1
  2587  0013A6  C031  F040         	movff	?___ftmul+2,___ftadd@f1+2
  2588  0013AA  EC83  F00A         	call	___ftadd	;wreg free
  2589  0013AE  C03E  F0EB         	movff	?___ftadd,_fsm$1627
  2590  0013B2  C03F  F0EC         	movff	?___ftadd+1,_fsm$1627+1
  2591  0013B6  C040  F0ED         	movff	?___ftadd+2,_fsm$1627+2
  2592  0013BA  0E00               	movlw	0
  2593  0013BC  6E41               	movwf	___ftadd@f2,c
  2594  0013BE  0E80               	movlw	128
  2595  0013C0  6E42               	movwf	___ftadd@f2+1,c
  2596  0013C2  0E3F               	movlw	63
  2597  0013C4  6E43               	movwf	___ftadd@f2+2,c
  2598  0013C6  C0EB  F03E         	movff	_fsm$1627,___ftadd@f1
  2599  0013CA  C0EC  F03F         	movff	_fsm$1627+1,___ftadd@f1+1
  2600  0013CE  C0ED  F040         	movff	_fsm$1627+2,___ftadd@f1+2
  2601  0013D2  EC83  F00A         	call	___ftadd	;wreg free
  2602  0013D6  C03E  F0DC         	movff	?___ftadd,___ftge@ff1
  2603  0013DA  C03F  F0DD         	movff	?___ftadd+1,___ftge@ff1+1
  2604  0013DE  C040  F0DE         	movff	?___ftadd+2,___ftge@ff1+2
  2605  0013E2  C0D4  F02B         	movff	_position,___awtoft@c
  2606  0013E6  C0D5  F02C         	movff	_position+1,___awtoft@c+1
  2607  0013EA  EC84  F013         	call	___awtoft	;wreg free
  2608  0013EE  C02B  F0DF         	movff	?___awtoft,___ftge@ff2
  2609  0013F2  C02C  F0E0         	movff	?___awtoft+1,___ftge@ff2+1
  2610  0013F6  C02D  F0E1         	movff	?___awtoft+2,___ftge@ff2+2
  2611  0013FA  ECC4  F00E         	call	___ftge	;wreg free
  2612  0013FE  0100               	movlb	0	; () banked
  2613  001400  A0D8               	btfss	status,0,c
  2614  001402  D006               	goto	l3034
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;main.c: 251: target = i%16;
  2618  001404  0100               	movlb	0	; () banked
  2619  001406  51EF               	movf	fsm@i_972& (0+255),w,b
  2620  001408  0B0F               	andlw	15
  2621  00140A  0100               	movlb	0	; () banked
  2622  00140C  6FD7               	movwf	_target& (0+255),b
  2623                           
  2624                           ;main.c: 252: break;
  2625  00140E  D003               	goto	l3038
  2626  001410                     l3034:
  2627                           
  2628                           ; BSR set to: 0
  2629  001410  0100               	movlb	0	; () banked
  2630  001412  2BEF               	incf	fsm@i_972& (0+255),f,b
  2631  001414  D74F               	goto	l3024
  2632  001416                     l3038:
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;main.c: 253: }
  2636                           ;main.c: 254: }
  2637                           ;main.c: 255: if (LEDs[target] == 0) {
  2638  001416  0100               	movlb	0	; () banked
  2639  001418  51D7               	movf	_target& (0+255),w,b
  2640  00141A  0D01               	mullw	1
  2641  00141C  0EC0               	movlw	low _LEDs
  2642  00141E  24F3               	addwf	prodl,w,c
  2643  001420  6ED9               	movwf	fsr2l,c
  2644  001422  0E00               	movlw	high _LEDs
  2645  001424  20F4               	addwfc	prodh,w,c
  2646  001426  6EDA               	movwf	fsr2h,c
  2647  001428  50DF               	movf	indf2,w,c
  2648  00142A  A4D8               	btfss	status,2,c
  2649  00142C  D004               	goto	l3042
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;main.c: 256: current_state = LIGHT_UP;
  2653  00142E  0E07               	movlw	7
  2654  001430  0100               	movlb	0	; () banked
  2655  001432  6FD6               	movwf	_current_state& (0+255),b
  2656                           
  2657                           ;main.c: 257: }
  2658  001434  0012               	return	
  2659  001436                     l3042:
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;main.c: 258: else current_state = GAME_LOST;
  2663  001436  0E09               	movlw	9
  2664  001438  0100               	movlb	0	; () banked
  2665  00143A  6FD6               	movwf	_current_state& (0+255),b
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;main.c: 260: break;
  2669  00143C  0012               	return	
  2670  00143E                     l3044:
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;main.c: 264: setAllLeds(0);
  2674  00143E  0E00               	movlw	0
  2675  001440  ECCB  F013         	call	_setAllLeds
  2676                           
  2677                           ;main.c: 265: buzz(300,100);
  2678  001444  0E2C               	movlw	44
  2679  001446  0100               	movlb	0	; () banked
  2680  001448  6FD9               	movwf	buzz@freq& (0+255),b
  2681  00144A  0E01               	movlw	1
  2682  00144C  6FDA               	movwf	(buzz@freq+1)& (0+255),b
  2683  00144E  0E00               	movlw	0
  2684  001450  6FDB               	movwf	(buzz@freq+2)& (0+255),b
  2685  001452  0E00               	movlw	0
  2686  001454  6FDC               	movwf	(buzz@freq+3)& (0+255),b
  2687  001456  0E00               	movlw	0
  2688  001458  0100               	movlb	0	; () banked
  2689  00145A  6FDE               	movwf	(buzz@duration+1)& (0+255),b
  2690  00145C  0E64               	movlw	100
  2691  00145E  6FDD               	movwf	buzz@duration& (0+255),b
  2692  001460  EC82  F00B         	call	_buzz	;wreg free
  2693                           
  2694                           ;main.c: 266: note_new = 0;
  2695  001464  0E00               	movlw	0
  2696  001466  0100               	movlb	0	; () banked
  2697  001468  6FD1               	movwf	(_note_new+1)& (0+255),b
  2698  00146A  0E00               	movlw	0
  2699  00146C  6FD0               	movwf	_note_new& (0+255),b
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;main.c: 268: current_state = NEW_GAME;
  2703  00146E  0E01               	movlw	1
  2704  001470  0100               	movlb	0	; () banked
  2705  001472  6FD6               	movwf	_current_state& (0+255),b
  2706                           
  2707                           ;main.c: 269: break;
  2708  001474  0012               	return	
  2709  001476                     l3052:
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;main.c: 272: note_new = 0;
  2713  001476  0E00               	movlw	0
  2714  001478  0100               	movlb	0	; () banked
  2715  00147A  6FD1               	movwf	(_note_new+1)& (0+255),b
  2716  00147C  0E00               	movlw	0
  2717  00147E  6FD0               	movwf	_note_new& (0+255),b
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;main.c: 273: superMario(note_win);
  2721  001480  C0D2  F045         	movff	_note_win,superMario@index
  2722  001484  C0D3  F046         	movff	_note_win+1,superMario@index+1
  2723  001488  EC65  F011         	call	_superMario	;wreg free
  2724                           
  2725                           ;main.c: 274: note_win++;
  2726  00148C  0100               	movlb	0	; () banked
  2727  00148E  4BD2               	infsnz	_note_win& (0+255),f,b
  2728  001490  2BD3               	incf	(_note_win+1)& (0+255),f,b
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;main.c: 275: LATAbits.LATA1 = 0;
  2732  001492  9289               	bcf	3977,1,c	;volatile
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;main.c: 277: if (note_win == last_win_note) {
  2736  001494  0E1D               	movlw	low _last_win_note
  2737  001496  6EF6               	movwf	tblptrl,c
  2738  001498                     	if	1	;There is more than 1 active tblptr byte
  2739  001498  0E10               	movlw	high _last_win_note
  2740  00149A  6EF7               	movwf	tblptrh,c
  2741  00149C                     	endif
  2742  00149C                     	if	0	;There are less than 3 active tblptr bytes
  2743  00149C                     	endif
  2744  00149C  0009               	tblrd		*+
  2745  00149E  50F5               	movf	tablat,w,c
  2746  0014A0  0100               	movlb	0	; () banked
  2747  0014A2  19D2               	xorwf	_note_win& (0+255),w,b
  2748  0014A4  E12F               	bnz	l210
  2749  0014A6  0009               	tblrd		*+
  2750  0014A8  50F5               	movf	tablat,w,c
  2751  0014AA  0100               	movlb	0	; () banked
  2752  0014AC  19D3               	xorwf	(_note_win+1)& (0+255),w,b
  2753  0014AE  A4D8               	btfss	status,2,c
  2754  0014B0  0012               	return	
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;main.c: 278: current_state = NEW_GAME;
  2758  0014B2  0E01               	movlw	1
  2759  0014B4  0100               	movlb	0	; () banked
  2760  0014B6  6FD6               	movwf	_current_state& (0+255),b
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;main.c: 279: }
  2764                           ;main.c: 280: break;
  2765  0014B8  0012               	return	
  2766  0014BA                     l3064:
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;main.c: 283: current_state = CALIBRATION;
  2770  0014BA  0E00               	movlw	0
  2771  0014BC  0100               	movlb	0	; () banked
  2772  0014BE  6FD6               	movwf	_current_state& (0+255),b
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;main.c: 286: };
  2776                           
  2777                           ;main.c: 284: break;
  2778  0014C0  0012               	return	
  2779  0014C2                     l3068:
  2780  0014C2  0100               	movlb	0	; () banked
  2781  0014C4  51D6               	movf	_current_state& (0+255),w,b
  2782                           
  2783                           ; Switch size 1, requested type "space"
  2784                           ; Number of cases is 10, Range of values is 0 to 9
  2785                           ; switch strategies available:
  2786                           ; Name         Instructions Cycles
  2787                           ; simple_byte           31    16 (average)
  2788                           ;	Chosen strategy is simple_byte
  2789  0014C6  0A00               	xorlw	0	; case 0
  2790  0014C8  B4D8               	btfsc	status,2,c
  2791  0014CA  D5AC               	goto	l2902
  2792  0014CC  0A01               	xorlw	1	; case 1
  2793  0014CE  B4D8               	btfsc	status,2,c
  2794  0014D0  D5C3               	goto	l2908
  2795  0014D2  0A03               	xorlw	3	; case 2
  2796  0014D4  B4D8               	btfsc	status,2,c
  2797  0014D6  D5FE               	goto	l2936
  2798  0014D8  0A01               	xorlw	1	; case 3
  2799  0014DA  B4D8               	btfsc	status,2,c
  2800  0014DC  D619               	goto	l2952
  2801  0014DE  0A07               	xorlw	7	; case 4
  2802  0014E0  B4D8               	btfsc	status,2,c
  2803  0014E2  D63F               	goto	l2976
  2804  0014E4  0A01               	xorlw	1	; case 5
  2805  0014E6  B4D8               	btfsc	status,2,c
  2806  0014E8  D6CF               	goto	l3018
  2807  0014EA  0A03               	xorlw	3	; case 6
  2808  0014EC  B4D8               	btfsc	status,2,c
  2809  0014EE  D67C               	goto	l3010
  2810  0014F0  0A01               	xorlw	1	; case 7
  2811  0014F2  B4D8               	btfsc	status,2,c
  2812  0014F4  D643               	goto	l2984
  2813  0014F6  0A0F               	xorlw	15	; case 8
  2814  0014F8  B4D8               	btfsc	status,2,c
  2815  0014FA  D7BD               	goto	l3052
  2816  0014FC  0A01               	xorlw	1	; case 9
  2817  0014FE  B4D8               	btfsc	status,2,c
  2818  001500  D79E               	goto	l3044
  2819  001502  D7DB               	goto	l3064
  2820  001504                     l210:
  2821  001504  0012               	return		;funcret
  2822  001506                     __end_of_fsm:
  2823                           	opt stack 0
  2824                           tblptru	equ	0xFF8
  2825                           tblptrh	equ	0xFF7
  2826                           tblptrl	equ	0xFF6
  2827                           tablat	equ	0xFF5
  2828                           prodh	equ	0xFF4
  2829                           prodl	equ	0xFF3
  2830                           intcon	equ	0xFF2
  2831                           postinc0	equ	0xFEE
  2832                           wreg	equ	0xFE8
  2833                           postdec1	equ	0xFE5
  2834                           fsr1l	equ	0xFE1
  2835                           indf2	equ	0xFDF
  2836                           postinc2	equ	0xFDE
  2837                           fsr2h	equ	0xFDA
  2838                           fsr2l	equ	0xFD9
  2839                           status	equ	0xFD8
  2840                           
  2841 ;; *************** function _superMario *****************
  2842 ;; Defined at:
  2843 ;;		line 90 in file "songs.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  index           2   68[COMRAM] unsigned int 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2857 ;;      Params:         2       0       0       0       0       0       0       0       0
  2858 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2859 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2860 ;;      Totals:         2       2       0       0       0       0       0       0       0
  2861 ;;Total ram usage:        4 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    4
  2864 ;; This function calls:
  2865 ;;		___lwdiv
  2866 ;;		_buzz
  2867 ;; This function is called by:
  2868 ;;		_fsm
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text8
  2873  0022CA                     __ptext8:
  2874                           	opt stack 0
  2875  0022CA                     _superMario:
  2876                           	opt stack 25
  2877                           
  2878                           ;songs.c: 91: buzz(superMarioNotes[index], 1000/superMarioDurations[index]);
  2879                           
  2880                           ;incstack = 0
  2881  0022CA  90D8               	bcf	status,0,c
  2882  0022CC  3445               	rlcf	superMario@index,w,c
  2883  0022CE  6ED9               	movwf	fsr2l,c
  2884  0022D0  3446               	rlcf	superMario@index+1,w,c
  2885  0022D2  6EDA               	movwf	fsr2h,c
  2886  0022D4  0E00               	movlw	low _superMarioNotes
  2887  0022D6  26D9               	addwf	fsr2l,f,c
  2888  0022D8  0E02               	movlw	high _superMarioNotes
  2889  0022DA  22DA               	addwfc	fsr2h,f,c
  2890  0022DC  CFDE F0E9          	movff	postinc2,??_superMario
  2891  0022E0  CFDD F0EA          	movff	postdec2,??_superMario+1
  2892  0022E4  C0E9  F0D9         	movff	??_superMario,buzz@freq
  2893  0022E8  C0EA  F0DA         	movff	??_superMario+1,buzz@freq+1
  2894  0022EC  0100               	movlb	0	; () banked
  2895  0022EE  6BDB               	clrf	(buzz@freq+2)& (0+255),b
  2896  0022F0  6BDC               	clrf	(buzz@freq+3)& (0+255),b
  2897  0022F2  0E03               	movlw	3
  2898  0022F4  6E10               	movwf	___lwdiv@dividend+1,c
  2899  0022F6  0EE8               	movlw	232
  2900  0022F8  6E0F               	movwf	___lwdiv@dividend,c
  2901  0022FA  90D8               	bcf	status,0,c
  2902  0022FC  3445               	rlcf	superMario@index,w,c
  2903  0022FE  6ED9               	movwf	fsr2l,c
  2904  002300  3446               	rlcf	superMario@index+1,w,c
  2905  002302  6EDA               	movwf	fsr2h,c
  2906  002304  0E00               	movlw	low _superMarioDurations
  2907  002306  26D9               	addwf	fsr2l,f,c
  2908  002308  0E03               	movlw	high _superMarioDurations
  2909  00230A  22DA               	addwfc	fsr2h,f,c
  2910  00230C  CFDE F011          	movff	postinc2,___lwdiv@divisor
  2911  002310  CFDD F012          	movff	postdec2,___lwdiv@divisor+1
  2912  002314  EC11  F013         	call	___lwdiv	;wreg free
  2913  002318  C00F  F0DD         	movff	?___lwdiv,buzz@duration
  2914  00231C  C010  F0DE         	movff	?___lwdiv+1,buzz@duration+1
  2915  002320  EC82  F00B         	call	_buzz	;wreg free
  2916                           
  2917                           ;songs.c: 92: buzz(0, 20);
  2918  002324  0E00               	movlw	0
  2919  002326  0100               	movlb	0	; () banked
  2920  002328  6FD9               	movwf	buzz@freq& (0+255),b
  2921  00232A  0E00               	movlw	0
  2922  00232C  6FDA               	movwf	(buzz@freq+1)& (0+255),b
  2923  00232E  0E00               	movlw	0
  2924  002330  6FDB               	movwf	(buzz@freq+2)& (0+255),b
  2925  002332  0E00               	movlw	0
  2926  002334  6FDC               	movwf	(buzz@freq+3)& (0+255),b
  2927  002336  0E00               	movlw	0
  2928  002338  0100               	movlb	0	; () banked
  2929  00233A  6FDE               	movwf	(buzz@duration+1)& (0+255),b
  2930  00233C  0E14               	movlw	20
  2931  00233E  6FDD               	movwf	buzz@duration& (0+255),b
  2932  002340  EC82  F00B         	call	_buzz	;wreg free
  2933  002344  0012               	return		;funcret
  2934  002346                     __end_of_superMario:
  2935                           	opt stack 0
  2936                           tblptru	equ	0xFF8
  2937                           tblptrh	equ	0xFF7
  2938                           tblptrl	equ	0xFF6
  2939                           tablat	equ	0xFF5
  2940                           prodh	equ	0xFF4
  2941                           prodl	equ	0xFF3
  2942                           intcon	equ	0xFF2
  2943                           postinc0	equ	0xFEE
  2944                           wreg	equ	0xFE8
  2945                           postdec1	equ	0xFE5
  2946                           fsr1l	equ	0xFE1
  2947                           indf2	equ	0xFDF
  2948                           postinc2	equ	0xFDE
  2949                           postdec2	equ	0xFDD
  2950                           fsr2h	equ	0xFDA
  2951                           fsr2l	equ	0xFD9
  2952                           status	equ	0xFD8
  2953                           
  2954 ;; *************** function ___lwdiv *****************
  2955 ;; Defined at:
  2956 ;;		line 8 in file "/Applications/microchip/xc8/v1.36/sources/common/lwdiv.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  dividend        2   14[COMRAM] unsigned int 
  2959 ;;  divisor         2   16[COMRAM] unsigned int 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  quotient        2   18[COMRAM] unsigned int 
  2962 ;;  counter         1   20[COMRAM] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  2   14[COMRAM] unsigned int 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2972 ;;      Params:         4       0       0       0       0       0       0       0       0
  2973 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2975 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2976 ;;Total ram usage:        7 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    1
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_superMario
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text9
  2987  002622                     __ptext9:
  2988                           	opt stack 0
  2989  002622                     ___lwdiv:
  2990                           	opt stack 27
  2991                           
  2992                           ;incstack = 0
  2993  002622  0E00               	movlw	0
  2994  002624  6E14               	movwf	___lwdiv@quotient+1,c
  2995  002626  0E00               	movlw	0
  2996  002628  6E13               	movwf	___lwdiv@quotient,c
  2997  00262A  5011               	movf	___lwdiv@divisor,w,c
  2998  00262C  1012               	iorwf	___lwdiv@divisor+1,w,c
  2999  00262E  B4D8               	btfsc	status,2,c
  3000  002630  D01C               	goto	l691
  3001  002632  0E01               	movlw	1
  3002  002634  6E15               	movwf	___lwdiv@counter,c
  3003  002636  D004               	goto	l2030
  3004  002638                     l2028:
  3005  002638  90D8               	bcf	status,0,c
  3006  00263A  3611               	rlcf	___lwdiv@divisor,f,c
  3007  00263C  3612               	rlcf	___lwdiv@divisor+1,f,c
  3008  00263E  2A15               	incf	___lwdiv@counter,f,c
  3009  002640                     l2030:
  3010  002640  AE12               	btfss	___lwdiv@divisor+1,7,c
  3011  002642  D7FA               	goto	l2028
  3012  002644                     l2032:
  3013  002644  90D8               	bcf	status,0,c
  3014  002646  3613               	rlcf	___lwdiv@quotient,f,c
  3015  002648  3614               	rlcf	___lwdiv@quotient+1,f,c
  3016  00264A  5011               	movf	___lwdiv@divisor,w,c
  3017  00264C  5C0F               	subwf	___lwdiv@dividend,w,c
  3018  00264E  5012               	movf	___lwdiv@divisor+1,w,c
  3019  002650  5810               	subwfb	___lwdiv@dividend+1,w,c
  3020  002652  A0D8               	btfss	status,0,c
  3021  002654  D005               	goto	l2040
  3022  002656  5011               	movf	___lwdiv@divisor,w,c
  3023  002658  5E0F               	subwf	___lwdiv@dividend,f,c
  3024  00265A  5012               	movf	___lwdiv@divisor+1,w,c
  3025  00265C  5A10               	subwfb	___lwdiv@dividend+1,f,c
  3026  00265E  8013               	bsf	___lwdiv@quotient,0,c
  3027  002660                     l2040:
  3028  002660  90D8               	bcf	status,0,c
  3029  002662  3212               	rrcf	___lwdiv@divisor+1,f,c
  3030  002664  3211               	rrcf	___lwdiv@divisor,f,c
  3031  002666  2E15               	decfsz	___lwdiv@counter,f,c
  3032  002668  D7ED               	goto	l2032
  3033  00266A                     l691:
  3034  00266A  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  3035  00266E  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3036  002672  0012               	return		;funcret
  3037  002674                     __end_of___lwdiv:
  3038                           	opt stack 0
  3039                           tblptru	equ	0xFF8
  3040                           tblptrh	equ	0xFF7
  3041                           tblptrl	equ	0xFF6
  3042                           tablat	equ	0xFF5
  3043                           prodh	equ	0xFF4
  3044                           prodl	equ	0xFF3
  3045                           intcon	equ	0xFF2
  3046                           postinc0	equ	0xFEE
  3047                           wreg	equ	0xFE8
  3048                           postdec1	equ	0xFE5
  3049                           fsr1l	equ	0xFE1
  3050                           indf2	equ	0xFDF
  3051                           postinc2	equ	0xFDE
  3052                           postdec2	equ	0xFDD
  3053                           fsr2h	equ	0xFDA
  3054                           fsr2l	equ	0xFD9
  3055                           status	equ	0xFD8
  3056                           
  3057 ;; *************** function _stepper_pulse *****************
  3058 ;; Defined at:
  3059 ;;		line 290 in file "main.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  speed           3   66[COMRAM] float 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;		None
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      void 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3073 ;;      Params:         3       0       0       0       0       0       0       0       0
  3074 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3075 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3076 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3077 ;;Total ram usage:        5 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    3
  3080 ;; This function calls:
  3081 ;;		___ftdiv
  3082 ;;		___fttol
  3083 ;;		___lwmod
  3084 ;;		_myDelay_us
  3085 ;; This function is called by:
  3086 ;;		_fsm
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text10
  3091  001B06                     __ptext10:
  3092                           	opt stack 0
  3093  001B06                     _stepper_pulse:
  3094                           	opt stack 26
  3095                           
  3096                           ;main.c: 291: if (stepper_direction > 0)
  3097                           
  3098                           ;incstack = 0
  3099  001B06  BE50               	btfsc	_stepper_direction+1,7,c
  3100  001B08  D007               	goto	l213
  3101  001B0A  5050               	movf	_stepper_direction+1,w,c
  3102  001B0C  E103               	bnz	u2750
  3103  001B0E  044F               	decf	_stepper_direction,w,c
  3104  001B10  A0D8               	btfss	status,0,c
  3105  001B12  D002               	goto	l213
  3106  001B14                     u2750:
  3107                           
  3108                           ;main.c: 292: LATCbits.LATC7 = 0;
  3109  001B14  9E8B               	bcf	3979,7,c	;volatile
  3110  001B16  D001               	goto	l214
  3111  001B18                     l213:
  3112                           
  3113                           ;main.c: 293: else
  3114                           ;main.c: 294: LATCbits.LATC7 = 1;
  3115  001B18  8E8B               	bsf	3979,7,c	;volatile
  3116  001B1A                     l214:
  3117                           
  3118                           ;main.c: 296: LATCbits.LATC6 = 1;
  3119  001B1A  8C8B               	bsf	3979,6,c	;volatile
  3120                           
  3121                           ;main.c: 297: myDelay_us((int)(250/speed));
  3122  001B1C  C043  F024         	movff	stepper_pulse@speed,___ftdiv@f2
  3123  001B20  C044  F025         	movff	stepper_pulse@speed+1,___ftdiv@f2+1
  3124  001B24  C045  F026         	movff	stepper_pulse@speed+2,___ftdiv@f2+2
  3125  001B28  0E00               	movlw	0
  3126  001B2A  6E21               	movwf	___ftdiv@f1,c
  3127  001B2C  0E7A               	movlw	122
  3128  001B2E  6E22               	movwf	___ftdiv@f1+1,c
  3129  001B30  0E43               	movlw	67
  3130  001B32  6E23               	movwf	___ftdiv@f1+2,c
  3131  001B34  EC10  F00D         	call	___ftdiv	;wreg free
  3132  001B38  C021  F030         	movff	?___ftdiv,___fttol@f1
  3133  001B3C  C022  F031         	movff	?___ftdiv+1,___fttol@f1+1
  3134  001B40  C023  F032         	movff	?___ftdiv+2,___fttol@f1+2
  3135  001B44  EC1C  F00C         	call	___fttol	;wreg free
  3136  001B48  C030  F03F         	movff	?___fttol,myDelay_us@us
  3137  001B4C  C031  F040         	movff	?___fttol+1,myDelay_us@us+1
  3138  001B50  EC03  F014         	call	_myDelay_us	;wreg free
  3139                           
  3140                           ;main.c: 298: LATCbits.LATC6 = 0;
  3141  001B54  9C8B               	bcf	3979,6,c	;volatile
  3142                           
  3143                           ;main.c: 299: myDelay_us((int)(250/speed));
  3144  001B56  C043  F024         	movff	stepper_pulse@speed,___ftdiv@f2
  3145  001B5A  C044  F025         	movff	stepper_pulse@speed+1,___ftdiv@f2+1
  3146  001B5E  C045  F026         	movff	stepper_pulse@speed+2,___ftdiv@f2+2
  3147  001B62  0E00               	movlw	0
  3148  001B64  6E21               	movwf	___ftdiv@f1,c
  3149  001B66  0E7A               	movlw	122
  3150  001B68  6E22               	movwf	___ftdiv@f1+1,c
  3151  001B6A  0E43               	movlw	67
  3152  001B6C  6E23               	movwf	___ftdiv@f1+2,c
  3153  001B6E  EC10  F00D         	call	___ftdiv	;wreg free
  3154  001B72  C021  F030         	movff	?___ftdiv,___fttol@f1
  3155  001B76  C022  F031         	movff	?___ftdiv+1,___fttol@f1+1
  3156  001B7A  C023  F032         	movff	?___ftdiv+2,___fttol@f1+2
  3157  001B7E  EC1C  F00C         	call	___fttol	;wreg free
  3158  001B82  C030  F03F         	movff	?___fttol,myDelay_us@us
  3159  001B86  C031  F040         	movff	?___fttol+1,myDelay_us@us+1
  3160  001B8A  EC03  F014         	call	_myDelay_us	;wreg free
  3161                           
  3162                           ;main.c: 301: position+= stepper_direction;
  3163  001B8E  504F               	movf	_stepper_direction,w,c
  3164  001B90  0100               	movlb	0	; () banked
  3165  001B92  27D4               	addwf	_position& (0+255),f,b
  3166  001B94  5050               	movf	_stepper_direction+1,w,c
  3167  001B96  D00E               	goto	L5
  3168  001B98                     l2720:
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;main.c: 303: position+=total_steps;
  3172  001B98  0E1F               	movlw	low _total_steps
  3173  001B9A  6EF6               	movwf	tblptrl,c
  3174  001B9C                     	if	1	;There is more than 1 active tblptr byte
  3175  001B9C  0E10               	movlw	high _total_steps
  3176  001B9E  6EF7               	movwf	tblptrh,c
  3177  001BA0                     	endif
  3178  001BA0                     	if	0	;There are less than 3 active tblptr bytes
  3179  001BA0                     	endif
  3180  001BA0  0009               	tblrd		*+
  3181  001BA2  CFF5 F046          	movff	tablat,??_stepper_pulse
  3182  001BA6  0009               	tblrd		*+
  3183  001BA8  CFF5 F047          	movff	tablat,??_stepper_pulse+1
  3184  001BAC  5046               	movf	??_stepper_pulse,w,c
  3185  001BAE  0100               	movlb	0	; () banked
  3186  001BB0  27D4               	addwf	_position& (0+255),f,b
  3187  001BB2  5047               	movf	??_stepper_pulse+1,w,c
  3188  001BB4                     L5:
  3189  001BB4  0100               	movlb	0	; () banked
  3190  001BB6  23D5               	addwfc	(_position+1)& (0+255),f,b
  3191                           
  3192                           ; BSR set to: 0
  3193                           
  3194                           ; BSR set to: 0
  3195  001BB8  0100               	movlb	0	; () banked
  3196  001BBA  BFD5               	btfsc	(_position+1)& (0+255),7,b
  3197  001BBC  D7ED               	goto	l2720
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;main.c: 306: position%=total_steps;
  3201                           
  3202                           ; BSR set to: 0
  3203  001BBE  C0D4  F00F         	movff	_position,___lwmod@dividend
  3204  001BC2  C0D5  F010         	movff	_position+1,___lwmod@dividend+1
  3205  001BC6  0E1F               	movlw	low _total_steps
  3206  001BC8  6EF6               	movwf	tblptrl,c
  3207  001BCA                     	if	1	;There is more than 1 active tblptr byte
  3208  001BCA  0E10               	movlw	high _total_steps
  3209  001BCC  6EF7               	movwf	tblptrh,c
  3210  001BCE                     	endif
  3211  001BCE                     	if	0	;There are less than 3 active tblptr bytes
  3212  001BCE                     	endif
  3213  001BCE  0009               	tblrd		*+
  3214  001BD0  CFF5 F011          	movff	tablat,___lwmod@divisor
  3215  001BD4  000A               	tblrd		*-
  3216  001BD6  CFF5 F012          	movff	tablat,___lwmod@divisor+1
  3217  001BDA  EC63  F013         	call	___lwmod	;wreg free
  3218  001BDE  C00F  F0D4         	movff	?___lwmod,_position
  3219  001BE2  C010  F0D5         	movff	?___lwmod+1,_position+1
  3220  001BE6  0012               	return		;funcret
  3221  001BE8                     __end_of_stepper_pulse:
  3222                           	opt stack 0
  3223                           tblptru	equ	0xFF8
  3224                           tblptrh	equ	0xFF7
  3225                           tblptrl	equ	0xFF6
  3226                           tablat	equ	0xFF5
  3227                           prodh	equ	0xFF4
  3228                           prodl	equ	0xFF3
  3229                           intcon	equ	0xFF2
  3230                           postinc0	equ	0xFEE
  3231                           wreg	equ	0xFE8
  3232                           postdec1	equ	0xFE5
  3233                           fsr1l	equ	0xFE1
  3234                           indf2	equ	0xFDF
  3235                           postinc2	equ	0xFDE
  3236                           postdec2	equ	0xFDD
  3237                           fsr2h	equ	0xFDA
  3238                           fsr2l	equ	0xFD9
  3239                           status	equ	0xFD8
  3240                           
  3241 ;; *************** function ___lwmod *****************
  3242 ;; Defined at:
  3243 ;;		line 8 in file "/Applications/microchip/xc8/v1.36/sources/common/lwmod.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  dividend        2   14[COMRAM] unsigned int 
  3246 ;;  divisor         2   16[COMRAM] unsigned int 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  counter         1   18[COMRAM] unsigned char 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  2   14[COMRAM] unsigned int 
  3251 ;; Registers used:
  3252 ;;		wreg, status,2, status,0
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3258 ;;      Params:         4       0       0       0       0       0       0       0       0
  3259 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3261 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3262 ;;Total ram usage:        5 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    1
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_fsm
  3269 ;;		_stepper_pulse
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text11
  3274  0026C6                     __ptext11:
  3275                           	opt stack 0
  3276  0026C6                     ___lwmod:
  3277                           	opt stack 27
  3278                           
  3279                           ;incstack = 0
  3280  0026C6  5011               	movf	___lwmod@divisor,w,c
  3281  0026C8  1012               	iorwf	___lwmod@divisor+1,w,c
  3282  0026CA  B4D8               	btfsc	status,2,c
  3283  0026CC  D018               	goto	l701
  3284  0026CE  0E01               	movlw	1
  3285  0026D0  6E13               	movwf	___lwmod@counter,c
  3286  0026D2  D004               	goto	l2050
  3287  0026D4                     l2048:
  3288  0026D4  90D8               	bcf	status,0,c
  3289  0026D6  3611               	rlcf	___lwmod@divisor,f,c
  3290  0026D8  3612               	rlcf	___lwmod@divisor+1,f,c
  3291  0026DA  2A13               	incf	___lwmod@counter,f,c
  3292  0026DC                     l2050:
  3293  0026DC  AE12               	btfss	___lwmod@divisor+1,7,c
  3294  0026DE  D7FA               	goto	l2048
  3295  0026E0                     l2052:
  3296  0026E0  5011               	movf	___lwmod@divisor,w,c
  3297  0026E2  5C0F               	subwf	___lwmod@dividend,w,c
  3298  0026E4  5012               	movf	___lwmod@divisor+1,w,c
  3299  0026E6  5810               	subwfb	___lwmod@dividend+1,w,c
  3300  0026E8  A0D8               	btfss	status,0,c
  3301  0026EA  D004               	goto	l2056
  3302  0026EC  5011               	movf	___lwmod@divisor,w,c
  3303  0026EE  5E0F               	subwf	___lwmod@dividend,f,c
  3304  0026F0  5012               	movf	___lwmod@divisor+1,w,c
  3305  0026F2  5A10               	subwfb	___lwmod@dividend+1,f,c
  3306  0026F4                     l2056:
  3307  0026F4  90D8               	bcf	status,0,c
  3308  0026F6  3212               	rrcf	___lwmod@divisor+1,f,c
  3309  0026F8  3211               	rrcf	___lwmod@divisor,f,c
  3310  0026FA  2E13               	decfsz	___lwmod@counter,f,c
  3311  0026FC  D7F1               	goto	l2052
  3312  0026FE                     l701:
  3313  0026FE  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  3314  002702  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  3315  002706  0012               	return		;funcret
  3316  002708                     __end_of___lwmod:
  3317                           	opt stack 0
  3318                           tblptru	equ	0xFF8
  3319                           tblptrh	equ	0xFF7
  3320                           tblptrl	equ	0xFF6
  3321                           tablat	equ	0xFF5
  3322                           prodh	equ	0xFF4
  3323                           prodl	equ	0xFF3
  3324                           intcon	equ	0xFF2
  3325                           postinc0	equ	0xFEE
  3326                           wreg	equ	0xFE8
  3327                           postdec1	equ	0xFE5
  3328                           fsr1l	equ	0xFE1
  3329                           indf2	equ	0xFDF
  3330                           postinc2	equ	0xFDE
  3331                           postdec2	equ	0xFDD
  3332                           fsr2h	equ	0xFDA
  3333                           fsr2l	equ	0xFD9
  3334                           status	equ	0xFD8
  3335                           
  3336 ;; *************** function _setAllLeds *****************
  3337 ;; Defined at:
  3338 ;;		line 341 in file "main.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  value           1    wreg     unsigned char 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  value           1   14[COMRAM] unsigned char 
  3343 ;;  i               1   15[COMRAM] unsigned char 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  1    wreg      void 
  3346 ;; Registers used:
  3347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3353 ;;      Params:         0       0       0       0       0       0       0       0       0
  3354 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3356 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3357 ;;Total ram usage:        2 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    1
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_fsm
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text12
  3368  002796                     __ptext12:
  3369                           	opt stack 0
  3370  002796                     _setAllLeds:
  3371                           	opt stack 28
  3372                           
  3373                           ;incstack = 0
  3374                           ;setAllLeds@value stored from wreg
  3375  002796  6E0F               	movwf	setAllLeds@value,c
  3376                           
  3377                           ;main.c: 342: for(char i = 0; i <= 15; i++)
  3378  002798  0E00               	movlw	0
  3379  00279A  6E10               	movwf	setAllLeds@i,c
  3380  00279C                     l2082:
  3381  00279C  0E0F               	movlw	15
  3382  00279E  6410               	cpfsgt	setAllLeds@i,c
  3383  0027A0  D001               	goto	l2086
  3384  0027A2  0012               	return	
  3385  0027A4                     l2086:
  3386                           
  3387                           ;main.c: 343: LEDs[i] = value;
  3388  0027A4  5010               	movf	setAllLeds@i,w,c
  3389  0027A6  0D01               	mullw	1
  3390  0027A8  0EC0               	movlw	low _LEDs
  3391  0027AA  24F3               	addwf	prodl,w,c
  3392  0027AC  6ED9               	movwf	fsr2l,c
  3393  0027AE  0E00               	movlw	high _LEDs
  3394  0027B0  20F4               	addwfc	prodh,w,c
  3395  0027B2  6EDA               	movwf	fsr2h,c
  3396  0027B4  C00F  FFDF         	movff	setAllLeds@value,indf2
  3397  0027B8  2A10               	incf	setAllLeds@i,f,c
  3398  0027BA  D7F0               	goto	l2082
  3399  0027BC                     __end_of_setAllLeds:
  3400                           	opt stack 0
  3401                           tblptru	equ	0xFF8
  3402                           tblptrh	equ	0xFF7
  3403                           tblptrl	equ	0xFF6
  3404                           tablat	equ	0xFF5
  3405                           prodh	equ	0xFF4
  3406                           prodl	equ	0xFF3
  3407                           intcon	equ	0xFF2
  3408                           postinc0	equ	0xFEE
  3409                           wreg	equ	0xFE8
  3410                           postdec1	equ	0xFE5
  3411                           fsr1l	equ	0xFE1
  3412                           indf2	equ	0xFDF
  3413                           postinc2	equ	0xFDE
  3414                           postdec2	equ	0xFDD
  3415                           fsr2h	equ	0xFDA
  3416                           fsr2l	equ	0xFD9
  3417                           status	equ	0xFD8
  3418                           
  3419 ;; *************** function _rand *****************
  3420 ;; Defined at:
  3421 ;;		line 12 in file "/Applications/microchip/xc8/v1.36/sources/common/rand.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  2   26[COMRAM] int 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3435 ;;      Params:         2       0       0       0       0       0       0       0       0
  3436 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3438 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3439 ;;Total ram usage:        2 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    2
  3442 ;; This function calls:
  3443 ;;		___lmul
  3444 ;; This function is called by:
  3445 ;;		_fsm
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text13
  3450  002674                     __ptext13:
  3451                           	opt stack 0
  3452  002674                     _rand:
  3453                           	opt stack 27
  3454                           
  3455                           ;incstack = 0
  3456  002674  C048  F00F         	movff	_randx,___lmul@multiplier
  3457  002678  C049  F010         	movff	_randx+1,___lmul@multiplier+1
  3458  00267C  C04A  F011         	movff	_randx+2,___lmul@multiplier+2
  3459  002680  C04B  F012         	movff	_randx+3,___lmul@multiplier+3
  3460  002684  0E6D               	movlw	109
  3461  002686  6E13               	movwf	___lmul@multiplicand,c
  3462  002688  0E4E               	movlw	78
  3463  00268A  6E14               	movwf	___lmul@multiplicand+1,c
  3464  00268C  0EC6               	movlw	198
  3465  00268E  6E15               	movwf	___lmul@multiplicand+2,c
  3466  002690  0E41               	movlw	65
  3467  002692  6E16               	movwf	___lmul@multiplicand+3,c
  3468  002694  ECBC  F012         	call	___lmul	;wreg free
  3469  002698  C00F  F048         	movff	?___lmul,_randx
  3470  00269C  C010  F049         	movff	?___lmul+1,_randx+1
  3471  0026A0  C011  F04A         	movff	?___lmul+2,_randx+2
  3472  0026A4  C012  F04B         	movff	?___lmul+3,_randx+3
  3473  0026A8  0E39               	movlw	57
  3474  0026AA  2648               	addwf	_randx,f,c
  3475  0026AC  0E30               	movlw	48
  3476  0026AE  2249               	addwfc	_randx+1,f,c
  3477  0026B0  0E00               	movlw	0
  3478  0026B2  224A               	addwfc	_randx+2,f,c
  3479  0026B4  0E00               	movlw	0
  3480  0026B6  224B               	addwfc	_randx+3,f,c
  3481  0026B8  0EFF               	movlw	255
  3482  0026BA  144A               	andwf	_randx+2,w,c
  3483  0026BC  6E1B               	movwf	?_rand,c
  3484  0026BE  0E7F               	movlw	127
  3485  0026C0  144B               	andwf	_randx+3,w,c
  3486  0026C2  6E1C               	movwf	?_rand+1,c
  3487  0026C4  0012               	return	
  3488  0026C6                     __end_of_rand:
  3489                           	opt stack 0
  3490                           tblptru	equ	0xFF8
  3491                           tblptrh	equ	0xFF7
  3492                           tblptrl	equ	0xFF6
  3493                           tablat	equ	0xFF5
  3494                           prodh	equ	0xFF4
  3495                           prodl	equ	0xFF3
  3496                           intcon	equ	0xFF2
  3497                           postinc0	equ	0xFEE
  3498                           wreg	equ	0xFE8
  3499                           postdec1	equ	0xFE5
  3500                           fsr1l	equ	0xFE1
  3501                           indf2	equ	0xFDF
  3502                           postinc2	equ	0xFDE
  3503                           postdec2	equ	0xFDD
  3504                           fsr2h	equ	0xFDA
  3505                           fsr2l	equ	0xFD9
  3506                           status	equ	0xFD8
  3507                           
  3508 ;; *************** function _nothingElseMatters *****************
  3509 ;; Defined at:
  3510 ;;		line 77 in file "songs.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  index           2   68[COMRAM] unsigned int 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;		None
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      void 
  3517 ;; Registers used:
  3518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3524 ;;      Params:         2       0       0       0       0       0       0       0       0
  3525 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3526 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3527 ;;      Totals:         2       2       0       0       0       0       0       0       0
  3528 ;;Total ram usage:        4 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; Hardware stack levels required when called:    4
  3531 ;; This function calls:
  3532 ;;		___wmul
  3533 ;;		_buzz
  3534 ;; This function is called by:
  3535 ;;		_fsm
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text14
  3540  002346                     __ptext14:
  3541                           	opt stack 0
  3542  002346                     _nothingElseMatters:
  3543                           	opt stack 25
  3544                           
  3545                           ;songs.c: 78: buzz(nothingElseMattersNotes[index], 70*nothingElseMattersDurations[index]
      +                          );
  3546                           
  3547                           ;incstack = 0
  3548  002346  90D8               	bcf	status,0,c
  3549  002348  3445               	rlcf	nothingElseMatters@index,w,c
  3550  00234A  6ED9               	movwf	fsr2l,c
  3551  00234C  3446               	rlcf	nothingElseMatters@index+1,w,c
  3552  00234E  6EDA               	movwf	fsr2h,c
  3553  002350  0EB4               	movlw	low _nothingElseMattersNotes
  3554  002352  26D9               	addwf	fsr2l,f,c
  3555  002354  0E00               	movlw	high _nothingElseMattersNotes
  3556  002356  22DA               	addwfc	fsr2h,f,c
  3557  002358  CFDE F0E9          	movff	postinc2,??_nothingElseMatters
  3558  00235C  CFDD F0EA          	movff	postdec2,??_nothingElseMatters+1
  3559  002360  C0E9  F0D9         	movff	??_nothingElseMatters,buzz@freq
  3560  002364  C0EA  F0DA         	movff	??_nothingElseMatters+1,buzz@freq+1
  3561  002368  0100               	movlb	0	; () banked
  3562  00236A  6BDB               	clrf	(buzz@freq+2)& (0+255),b
  3563  00236C  6BDC               	clrf	(buzz@freq+3)& (0+255),b
  3564  00236E  90D8               	bcf	status,0,c
  3565  002370  3445               	rlcf	nothingElseMatters@index,w,c
  3566  002372  6ED9               	movwf	fsr2l,c
  3567  002374  3446               	rlcf	nothingElseMatters@index+1,w,c
  3568  002376  6EDA               	movwf	fsr2h,c
  3569  002378  0EA8               	movlw	low _nothingElseMattersDurations
  3570  00237A  26D9               	addwf	fsr2l,f,c
  3571  00237C  0E00               	movlw	high _nothingElseMattersDurations
  3572  00237E  22DA               	addwfc	fsr2h,f,c
  3573  002380  CFDE F00F          	movff	postinc2,___wmul@multiplier
  3574  002384  CFDD F010          	movff	postdec2,___wmul@multiplier+1
  3575  002388  0E00               	movlw	0
  3576  00238A  6E12               	movwf	___wmul@multiplicand+1,c
  3577  00238C  0E46               	movlw	70
  3578  00238E  6E11               	movwf	___wmul@multiplicand,c
  3579  002390  ECDE  F013         	call	___wmul	;wreg free
  3580  002394  C00F  F0DD         	movff	?___wmul,buzz@duration
  3581  002398  C010  F0DE         	movff	?___wmul+1,buzz@duration+1
  3582  00239C  EC82  F00B         	call	_buzz	;wreg free
  3583                           
  3584                           ;songs.c: 79: buzz(0, 20);
  3585  0023A0  0E00               	movlw	0
  3586  0023A2  0100               	movlb	0	; () banked
  3587  0023A4  6FD9               	movwf	buzz@freq& (0+255),b
  3588  0023A6  0E00               	movlw	0
  3589  0023A8  6FDA               	movwf	(buzz@freq+1)& (0+255),b
  3590  0023AA  0E00               	movlw	0
  3591  0023AC  6FDB               	movwf	(buzz@freq+2)& (0+255),b
  3592  0023AE  0E00               	movlw	0
  3593  0023B0  6FDC               	movwf	(buzz@freq+3)& (0+255),b
  3594  0023B2  0E00               	movlw	0
  3595  0023B4  0100               	movlb	0	; () banked
  3596  0023B6  6FDE               	movwf	(buzz@duration+1)& (0+255),b
  3597  0023B8  0E14               	movlw	20
  3598  0023BA  6FDD               	movwf	buzz@duration& (0+255),b
  3599  0023BC  EC82  F00B         	call	_buzz	;wreg free
  3600  0023C0  0012               	return		;funcret
  3601  0023C2                     __end_of_nothingElseMatters:
  3602                           	opt stack 0
  3603                           tblptru	equ	0xFF8
  3604                           tblptrh	equ	0xFF7
  3605                           tblptrl	equ	0xFF6
  3606                           tablat	equ	0xFF5
  3607                           prodh	equ	0xFF4
  3608                           prodl	equ	0xFF3
  3609                           intcon	equ	0xFF2
  3610                           postinc0	equ	0xFEE
  3611                           wreg	equ	0xFE8
  3612                           postdec1	equ	0xFE5
  3613                           fsr1l	equ	0xFE1
  3614                           indf2	equ	0xFDF
  3615                           postinc2	equ	0xFDE
  3616                           postdec2	equ	0xFDD
  3617                           fsr2h	equ	0xFDA
  3618                           fsr2l	equ	0xFD9
  3619                           status	equ	0xFD8
  3620                           
  3621 ;; *************** function _buzz *****************
  3622 ;; Defined at:
  3623 ;;		line 26 in file "songs.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  freq            4    0[BANK0 ] long 
  3626 ;;  duration        2    4[BANK0 ] unsigned int 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;  i               4   10[BANK0 ] long 
  3629 ;;  repeats         4    6[BANK0 ] long 
  3630 ;;  halfPeriod      2   14[BANK0 ] unsigned int 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3640 ;;      Params:         0       6       0       0       0       0       0       0       0
  3641 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3642 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3643 ;;      Totals:         2      16       0       0       0       0       0       0       0
  3644 ;;Total ram usage:       18 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    3
  3647 ;; This function calls:
  3648 ;;		___aldiv
  3649 ;;		___altoft
  3650 ;;		___ftdiv
  3651 ;;		___fttol
  3652 ;;		___lmul
  3653 ;;		_myDelay_ms
  3654 ;;		_myDelay_us
  3655 ;; This function is called by:
  3656 ;;		_fsm
  3657 ;;		_nothingElseMatters
  3658 ;;		_superMario
  3659 ;;		_starWars
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text15
  3664  001704                     __ptext15:
  3665                           	opt stack 0
  3666  001704                     _buzz:
  3667                           	opt stack 25
  3668                           
  3669                           ;songs.c: 28: if (freq==0) {
  3670                           
  3671                           ;incstack = 0
  3672  001704  0100               	movlb	0	; () banked
  3673  001706  51D9               	movf	buzz@freq& (0+255),w,b
  3674  001708  0100               	movlb	0	; () banked
  3675  00170A  11DA               	iorwf	(buzz@freq+1)& (0+255),w,b
  3676  00170C  0100               	movlb	0	; () banked
  3677  00170E  11DB               	iorwf	(buzz@freq+2)& (0+255),w,b
  3678  001710  0100               	movlb	0	; () banked
  3679  001712  11DC               	iorwf	(buzz@freq+3)& (0+255),w,b
  3680  001714  A4D8               	btfss	status,2,c
  3681  001716  D007               	goto	l2698
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;songs.c: 29: myDelay_ms(duration);
  3685  001718  C0DD  F00F         	movff	buzz@duration,myDelay_ms@ms
  3686  00171C  C0DE  F010         	movff	buzz@duration+1,myDelay_ms@ms+1
  3687  001720  ECA0  F013         	call	_myDelay_ms	;wreg free
  3688                           
  3689                           ;songs.c: 30: return;
  3690  001724  0012               	return	
  3691  001726                     l2698:
  3692                           
  3693                           ;songs.c: 31: }
  3694                           ;songs.c: 32: unsigned int halfPeriod = 1e6 / 2 / freq;
  3695  001726  C0D9  F017         	movff	buzz@freq,___altoft@c
  3696  00172A  C0DA  F018         	movff	buzz@freq+1,___altoft@c+1
  3697  00172E  C0DB  F019         	movff	buzz@freq+2,___altoft@c+2
  3698  001732  C0DC  F01A         	movff	buzz@freq+3,___altoft@c+3
  3699  001736  ECE1  F011         	call	___altoft	;wreg free
  3700  00173A  C017  F024         	movff	?___altoft,___ftdiv@f2
  3701  00173E  C018  F025         	movff	?___altoft+1,___ftdiv@f2+1
  3702  001742  C019  F026         	movff	?___altoft+2,___ftdiv@f2+2
  3703  001746  0E24               	movlw	36
  3704  001748  6E21               	movwf	___ftdiv@f1,c
  3705  00174A  0EF4               	movlw	244
  3706  00174C  6E22               	movwf	___ftdiv@f1+1,c
  3707  00174E  0E48               	movlw	72
  3708  001750  6E23               	movwf	___ftdiv@f1+2,c
  3709  001752  EC10  F00D         	call	___ftdiv	;wreg free
  3710  001756  C021  F030         	movff	?___ftdiv,___fttol@f1
  3711  00175A  C022  F031         	movff	?___ftdiv+1,___fttol@f1+1
  3712  00175E  C023  F032         	movff	?___ftdiv+2,___fttol@f1+2
  3713  001762  EC1C  F00C         	call	___fttol	;wreg free
  3714  001766  C030  F0E7         	movff	?___fttol,buzz@halfPeriod
  3715  00176A  C031  F0E8         	movff	?___fttol+1,buzz@halfPeriod+1
  3716                           
  3717                           ;songs.c: 33: long repeats = (long)duration *1000 / (2 * halfPeriod);
  3718  00176E  C0DD  F00F         	movff	buzz@duration,___lmul@multiplier
  3719  001772  C0DE  F010         	movff	buzz@duration+1,___lmul@multiplier+1
  3720  001776  6A11               	clrf	___lmul@multiplier+2,c
  3721  001778  6A12               	clrf	___lmul@multiplier+3,c
  3722  00177A  0EE8               	movlw	232
  3723  00177C  6E13               	movwf	___lmul@multiplicand,c
  3724  00177E  0E03               	movlw	3
  3725  001780  6E14               	movwf	___lmul@multiplicand+1,c
  3726  001782  0E00               	movlw	0
  3727  001784  6E15               	movwf	___lmul@multiplicand+2,c
  3728  001786  0E00               	movlw	0
  3729  001788  6E16               	movwf	___lmul@multiplicand+3,c
  3730  00178A  ECBC  F012         	call	___lmul	;wreg free
  3731  00178E  C00F  F01B         	movff	?___lmul,___aldiv@dividend
  3732  001792  C010  F01C         	movff	?___lmul+1,___aldiv@dividend+1
  3733  001796  C011  F01D         	movff	?___lmul+2,___aldiv@dividend+2
  3734  00179A  C012  F01E         	movff	?___lmul+3,___aldiv@dividend+3
  3735  00179E  C0E7  F043         	movff	buzz@halfPeriod,??_buzz
  3736  0017A2  C0E8  F044         	movff	buzz@halfPeriod+1,??_buzz+1
  3737  0017A6  90D8               	bcf	status,0,c
  3738  0017A8  3643               	rlcf	??_buzz,f,c
  3739  0017AA  3644               	rlcf	??_buzz+1,f,c
  3740  0017AC  C043  F01F         	movff	??_buzz,___aldiv@divisor
  3741  0017B0  C044  F020         	movff	??_buzz+1,___aldiv@divisor+1
  3742  0017B4  6A21               	clrf	___aldiv@divisor+2,c
  3743  0017B6  6A22               	clrf	___aldiv@divisor+3,c
  3744  0017B8  EC5E  F00E         	call	___aldiv	;wreg free
  3745  0017BC  C01B  F0DF         	movff	?___aldiv,buzz@repeats
  3746  0017C0  C01C  F0E0         	movff	?___aldiv+1,buzz@repeats+1
  3747  0017C4  C01D  F0E1         	movff	?___aldiv+2,buzz@repeats+2
  3748  0017C8  C01E  F0E2         	movff	?___aldiv+3,buzz@repeats+3
  3749                           
  3750                           ;songs.c: 34: for (long i=0; i<repeats; i++) {
  3751  0017CC  0E00               	movlw	0
  3752  0017CE  0100               	movlb	0	; () banked
  3753  0017D0  6FE3               	movwf	buzz@i& (0+255),b
  3754  0017D2  0E00               	movlw	0
  3755  0017D4  6FE4               	movwf	(buzz@i+1)& (0+255),b
  3756  0017D6  0E00               	movlw	0
  3757  0017D8  6FE5               	movwf	(buzz@i+2)& (0+255),b
  3758  0017DA  0E00               	movlw	0
  3759  0017DC  6FE6               	movwf	(buzz@i+3)& (0+255),b
  3760  0017DE  D015               	goto	l2708
  3761  0017E0                     l275:
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;songs.c: 35: LATAbits.LATA3 = 1;
  3765  0017E0  8689               	bsf	3977,3,c	;volatile
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;songs.c: 36: myDelay_us(halfPeriod);
  3769  0017E2  C0E7  F03F         	movff	buzz@halfPeriod,myDelay_us@us
  3770  0017E6  C0E8  F040         	movff	buzz@halfPeriod+1,myDelay_us@us+1
  3771  0017EA  EC03  F014         	call	_myDelay_us	;wreg free
  3772                           
  3773                           ;songs.c: 38: LATAbits.LATA3 = 0;
  3774  0017EE  9689               	bcf	3977,3,c	;volatile
  3775                           
  3776                           ;songs.c: 39: myDelay_us(halfPeriod);
  3777  0017F0  C0E7  F03F         	movff	buzz@halfPeriod,myDelay_us@us
  3778  0017F4  C0E8  F040         	movff	buzz@halfPeriod+1,myDelay_us@us+1
  3779  0017F8  EC03  F014         	call	_myDelay_us	;wreg free
  3780  0017FC  0E01               	movlw	1
  3781  0017FE  0100               	movlb	0	; () banked
  3782  001800  27E3               	addwf	buzz@i& (0+255),f,b
  3783  001802  0E00               	movlw	0
  3784  001804  23E4               	addwfc	(buzz@i+1)& (0+255),f,b
  3785  001806  23E5               	addwfc	(buzz@i+2)& (0+255),f,b
  3786  001808  23E6               	addwfc	(buzz@i+3)& (0+255),f,b
  3787  00180A                     l2708:
  3788                           
  3789                           ; BSR set to: 0
  3790  00180A  0100               	movlb	0	; () banked
  3791  00180C  51DF               	movf	buzz@repeats& (0+255),w,b
  3792  00180E  0100               	movlb	0	; () banked
  3793  001810  5DE3               	subwf	buzz@i& (0+255),w,b
  3794  001812  0100               	movlb	0	; () banked
  3795  001814  51E0               	movf	(buzz@repeats+1)& (0+255),w,b
  3796  001816  0100               	movlb	0	; () banked
  3797  001818  59E4               	subwfb	(buzz@i+1)& (0+255),w,b
  3798  00181A  0100               	movlb	0	; () banked
  3799  00181C  51E1               	movf	(buzz@repeats+2)& (0+255),w,b
  3800  00181E  0100               	movlb	0	; () banked
  3801  001820  59E5               	subwfb	(buzz@i+2)& (0+255),w,b
  3802  001822  0100               	movlb	0	; () banked
  3803  001824  51E6               	movf	(buzz@i+3)& (0+255),w,b
  3804  001826  0A80               	xorlw	128
  3805  001828  6E43               	movwf	??_buzz& (0+255),c
  3806  00182A  0100               	movlb	0	; () banked
  3807  00182C  51E2               	movf	(buzz@repeats+3)& (0+255),w,b
  3808  00182E  0A80               	xorlw	128
  3809  001830  5843               	subwfb	??_buzz& (0+255),w,c
  3810  001832  B0D8               	btfsc	status,0,c
  3811  001834  0012               	return	
  3812  001836  D7D4               	goto	l275
  3813  001838                     __end_of_buzz:
  3814                           	opt stack 0
  3815                           tblptru	equ	0xFF8
  3816                           tblptrh	equ	0xFF7
  3817                           tblptrl	equ	0xFF6
  3818                           tablat	equ	0xFF5
  3819                           prodh	equ	0xFF4
  3820                           prodl	equ	0xFF3
  3821                           intcon	equ	0xFF2
  3822                           postinc0	equ	0xFEE
  3823                           wreg	equ	0xFE8
  3824                           postdec1	equ	0xFE5
  3825                           fsr1l	equ	0xFE1
  3826                           indf2	equ	0xFDF
  3827                           postinc2	equ	0xFDE
  3828                           postdec2	equ	0xFDD
  3829                           fsr2h	equ	0xFDA
  3830                           fsr2l	equ	0xFD9
  3831                           status	equ	0xFD8
  3832                           
  3833 ;; *************** function _myDelay_us *****************
  3834 ;; Defined at:
  3835 ;;		line 13 in file "songs.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  us              2   62[COMRAM] unsigned int 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  i               2   64[COMRAM] unsigned int 
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg, status,2, status,0
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3849 ;;      Params:         2       0       0       0       0       0       0       0       0
  3850 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3851 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3852 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3853 ;;Total ram usage:        4 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:    1
  3856 ;; This function calls:
  3857 ;;		Nothing
  3858 ;; This function is called by:
  3859 ;;		_stepper_pulse
  3860 ;;		_go_through_cols
  3861 ;;		_buzz
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text16
  3866  002806                     __ptext16:
  3867                           	opt stack 0
  3868  002806                     _myDelay_us:
  3869                           	opt stack 27
  3870                           
  3871                           ;songs.c: 15: for (unsigned int i=0; i<us; i++)
  3872                           
  3873                           ;incstack = 0
  3874  002806  0E00               	movlw	0
  3875  002808  6E42               	movwf	myDelay_us@i+1,c
  3876  00280A  0E00               	movlw	0
  3877  00280C  6E41               	movwf	myDelay_us@i,c
  3878  00280E  D006               	goto	l260
  3879  002810                     l1816:
  3880                           
  3881                           ;songs.c: 16: _delay((unsigned long)((1)*(47000000/4000000.0)));
  3882  002810  0E03               	movlw	3
  3883  002812                     u3387:
  3884  002812  2EE8               	decfsz	wreg,f,c
  3885  002814  D7FE               	goto	u3387
  3886  002816  D000               	nop2		;nop
  3887  002818  4A41               	infsnz	myDelay_us@i,f,c
  3888  00281A  2A42               	incf	myDelay_us@i+1,f,c
  3889  00281C                     l260:
  3890  00281C  503F               	movf	myDelay_us@us,w,c
  3891  00281E  5C41               	subwf	myDelay_us@i,w,c
  3892  002820  5040               	movf	myDelay_us@us+1,w,c
  3893  002822  5842               	subwfb	myDelay_us@i+1,w,c
  3894  002824  B0D8               	btfsc	status,0,c
  3895  002826  0012               	return	
  3896  002828  D7F3               	goto	l1816
  3897  00282A                     __end_of_myDelay_us:
  3898                           	opt stack 0
  3899                           tblptru	equ	0xFF8
  3900                           tblptrh	equ	0xFF7
  3901                           tblptrl	equ	0xFF6
  3902                           tablat	equ	0xFF5
  3903                           prodh	equ	0xFF4
  3904                           prodl	equ	0xFF3
  3905                           intcon	equ	0xFF2
  3906                           postinc0	equ	0xFEE
  3907                           wreg	equ	0xFE8
  3908                           postdec1	equ	0xFE5
  3909                           fsr1l	equ	0xFE1
  3910                           indf2	equ	0xFDF
  3911                           postinc2	equ	0xFDE
  3912                           postdec2	equ	0xFDD
  3913                           fsr2h	equ	0xFDA
  3914                           fsr2l	equ	0xFD9
  3915                           status	equ	0xFD8
  3916                           
  3917 ;; *************** function _myDelay_ms *****************
  3918 ;; Defined at:
  3919 ;;		line 19 in file "songs.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  ms              2   14[COMRAM] unsigned int 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  i               2   17[COMRAM] unsigned int 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3933 ;;      Params:         2       0       0       0       0       0       0       0       0
  3934 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3935 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3936 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3937 ;;Total ram usage:        5 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    1
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_buzz
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text17
  3948  002740                     __ptext17:
  3949                           	opt stack 0
  3950  002740                     _myDelay_ms:
  3951                           	opt stack 26
  3952                           
  3953                           ;songs.c: 21: for (unsigned int i=0; i<ms; i++)
  3954                           
  3955                           ;incstack = 0
  3956  002740  0E00               	movlw	0
  3957  002742  6E13               	movwf	myDelay_ms@i+1,c
  3958  002744  0E00               	movlw	0
  3959  002746  6E12               	movwf	myDelay_ms@i,c
  3960  002748  D00A               	goto	l266
  3961  00274A                     l1822:
  3962                           
  3963                           ;songs.c: 22: _delay((unsigned long)((1)*(47000000/4000.0)));
  3964  00274A  0E10               	movlw	16
  3965  00274C  6E11               	movwf	??_myDelay_ms& (0+255),c
  3966  00274E  0E41               	movlw	65
  3967  002750                     u3397:
  3968  002750  2EE8               	decfsz	wreg,f,c
  3969  002752  D7FE               	goto	u3397
  3970  002754  2E11               	decfsz	??_myDelay_ms& (0+255),f,c
  3971  002756  D7FC               	goto	u3397
  3972  002758  F000               	nop	
  3973  00275A  4A12               	infsnz	myDelay_ms@i,f,c
  3974  00275C  2A13               	incf	myDelay_ms@i+1,f,c
  3975  00275E                     l266:
  3976  00275E  500F               	movf	myDelay_ms@ms,w,c
  3977  002760  5C12               	subwf	myDelay_ms@i,w,c
  3978  002762  5010               	movf	myDelay_ms@ms+1,w,c
  3979  002764  5813               	subwfb	myDelay_ms@i+1,w,c
  3980  002766  B0D8               	btfsc	status,0,c
  3981  002768  0012               	return	
  3982  00276A  D7EF               	goto	l1822
  3983  00276C                     __end_of_myDelay_ms:
  3984                           	opt stack 0
  3985                           tblptru	equ	0xFF8
  3986                           tblptrh	equ	0xFF7
  3987                           tblptrl	equ	0xFF6
  3988                           tablat	equ	0xFF5
  3989                           prodh	equ	0xFF4
  3990                           prodl	equ	0xFF3
  3991                           intcon	equ	0xFF2
  3992                           postinc0	equ	0xFEE
  3993                           wreg	equ	0xFE8
  3994                           postdec1	equ	0xFE5
  3995                           fsr1l	equ	0xFE1
  3996                           indf2	equ	0xFDF
  3997                           postinc2	equ	0xFDE
  3998                           postdec2	equ	0xFDD
  3999                           fsr2h	equ	0xFDA
  4000                           fsr2l	equ	0xFD9
  4001                           status	equ	0xFD8
  4002                           
  4003 ;; *************** function ___lmul *****************
  4004 ;; Defined at:
  4005 ;;		line 15 in file "/Applications/microchip/xc8/v1.36/sources/common/Umul32.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;  multiplier      4   14[COMRAM] unsigned long 
  4008 ;;  multiplicand    4   18[COMRAM] unsigned long 
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;  product         4   22[COMRAM] unsigned long 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  4   14[COMRAM] unsigned long 
  4013 ;; Registers used:
  4014 ;;		wreg, status,2, status,0
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4020 ;;      Params:         8       0       0       0       0       0       0       0       0
  4021 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4023 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4024 ;;Total ram usage:       12 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:    1
  4027 ;; This function calls:
  4028 ;;		Nothing
  4029 ;; This function is called by:
  4030 ;;		_buzz
  4031 ;;		_rand
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text18
  4036  002578                     __ptext18:
  4037                           	opt stack 0
  4038  002578                     ___lmul:
  4039                           	opt stack 26
  4040                           
  4041                           ;incstack = 0
  4042  002578  0E00               	movlw	0
  4043  00257A  6E17               	movwf	___lmul@product,c
  4044  00257C  0E00               	movlw	0
  4045  00257E  6E18               	movwf	___lmul@product+1,c
  4046  002580  0E00               	movlw	0
  4047  002582  6E19               	movwf	___lmul@product+2,c
  4048  002584  0E00               	movlw	0
  4049  002586  6E1A               	movwf	___lmul@product+3,c
  4050  002588                     l1828:
  4051  002588  A00F               	btfss	___lmul@multiplier,0,c
  4052  00258A  D008               	goto	l1832
  4053  00258C  5013               	movf	___lmul@multiplicand,w,c
  4054  00258E  2617               	addwf	___lmul@product,f,c
  4055  002590  5014               	movf	___lmul@multiplicand+1,w,c
  4056  002592  2218               	addwfc	___lmul@product+1,f,c
  4057  002594  5015               	movf	___lmul@multiplicand+2,w,c
  4058  002596  2219               	addwfc	___lmul@product+2,f,c
  4059  002598  5016               	movf	___lmul@multiplicand+3,w,c
  4060  00259A  221A               	addwfc	___lmul@product+3,f,c
  4061  00259C                     l1832:
  4062  00259C  90D8               	bcf	status,0,c
  4063  00259E  3613               	rlcf	___lmul@multiplicand,f,c
  4064  0025A0  3614               	rlcf	___lmul@multiplicand+1,f,c
  4065  0025A2  3615               	rlcf	___lmul@multiplicand+2,f,c
  4066  0025A4  3616               	rlcf	___lmul@multiplicand+3,f,c
  4067  0025A6  90D8               	bcf	status,0,c
  4068  0025A8  3212               	rrcf	___lmul@multiplier+3,f,c
  4069  0025AA  3211               	rrcf	___lmul@multiplier+2,f,c
  4070  0025AC  3210               	rrcf	___lmul@multiplier+1,f,c
  4071  0025AE  320F               	rrcf	___lmul@multiplier,f,c
  4072  0025B0  500F               	movf	___lmul@multiplier,w,c
  4073  0025B2  1010               	iorwf	___lmul@multiplier+1,w,c
  4074  0025B4  1011               	iorwf	___lmul@multiplier+2,w,c
  4075  0025B6  1012               	iorwf	___lmul@multiplier+3,w,c
  4076  0025B8  A4D8               	btfss	status,2,c
  4077  0025BA  D7E6               	goto	l1828
  4078  0025BC  C017  F00F         	movff	___lmul@product,?___lmul
  4079  0025C0  C018  F010         	movff	___lmul@product+1,?___lmul+1
  4080  0025C4  C019  F011         	movff	___lmul@product+2,?___lmul+2
  4081  0025C8  C01A  F012         	movff	___lmul@product+3,?___lmul+3
  4082  0025CC  0012               	return		;funcret
  4083  0025CE                     __end_of___lmul:
  4084                           	opt stack 0
  4085                           tblptru	equ	0xFF8
  4086                           tblptrh	equ	0xFF7
  4087                           tblptrl	equ	0xFF6
  4088                           tablat	equ	0xFF5
  4089                           prodh	equ	0xFF4
  4090                           prodl	equ	0xFF3
  4091                           intcon	equ	0xFF2
  4092                           postinc0	equ	0xFEE
  4093                           wreg	equ	0xFE8
  4094                           postdec1	equ	0xFE5
  4095                           fsr1l	equ	0xFE1
  4096                           indf2	equ	0xFDF
  4097                           postinc2	equ	0xFDE
  4098                           postdec2	equ	0xFDD
  4099                           fsr2h	equ	0xFDA
  4100                           fsr2l	equ	0xFD9
  4101                           status	equ	0xFD8
  4102                           
  4103 ;; *************** function ___fttol *****************
  4104 ;; Defined at:
  4105 ;;		line 44 in file "/Applications/microchip/xc8/v1.36/sources/common/fttol.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  f1              3   47[COMRAM] float 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;  lval            4   57[COMRAM] unsigned long 
  4110 ;;  exp1            1   61[COMRAM] unsigned char 
  4111 ;;  sign1           1   56[COMRAM] unsigned char 
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  4   47[COMRAM] long 
  4114 ;; Registers used:
  4115 ;;		wreg, status,2, status,0
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4121 ;;      Params:         4       0       0       0       0       0       0       0       0
  4122 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4123 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4124 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4125 ;;Total ram usage:       15 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; Hardware stack levels required when called:    1
  4128 ;; This function calls:
  4129 ;;		Nothing
  4130 ;; This function is called by:
  4131 ;;		_stepper_pulse
  4132 ;;		_buzz
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           	psect	text19
  4137  001838                     __ptext19:
  4138                           	opt stack 0
  4139  001838                     ___fttol:
  4140                           	opt stack 26
  4141                           
  4142                           ;incstack = 0
  4143  001838  C032  F034         	movff	___fttol@f1+2,??___fttol
  4144  00183C  6A35               	clrf	(??___fttol+1)& (0+255),c
  4145  00183E  6A36               	clrf	(??___fttol+2)& (0+255),c
  4146  001840  3431               	rlcf	___fttol@f1+1,w,c
  4147  001842  3634               	rlcf	??___fttol& (0+255),f,c
  4148  001844  E301               	bnc	u1571
  4149  001846  8035               	bsf	(??___fttol+1)& (0+255),0,c
  4150  001848                     u1571:
  4151  001848  5034               	movf	??___fttol,w,c
  4152  00184A  6E3E               	movwf	___fttol@exp1,c
  4153  00184C  503E               	movf	___fttol@exp1,w,c
  4154  00184E  A4D8               	btfss	status,2,c
  4155  001850  D009               	goto	l1948
  4156  001852  0E00               	movlw	0
  4157  001854  6E30               	movwf	?___fttol,c
  4158  001856  0E00               	movlw	0
  4159  001858  6E31               	movwf	?___fttol+1,c
  4160  00185A  0E00               	movlw	0
  4161  00185C  6E32               	movwf	?___fttol+2,c
  4162  00185E  0E00               	movlw	0
  4163  001860  6E33               	movwf	?___fttol+3,c
  4164  001862  0012               	return	
  4165  001864                     l1948:
  4166  001864  0E17               	movlw	23
  4167  001866  6E34               	movwf	??___fttol& (0+255),c
  4168  001868  C030  F035         	movff	___fttol@f1,??___fttol+1
  4169  00186C  C031  F036         	movff	___fttol@f1+1,??___fttol+2
  4170  001870  C032  F037         	movff	___fttol@f1+2,??___fttol+3
  4171  001874  2834               	incf	??___fttol,w,c
  4172  001876  6E38               	movwf	(??___fttol+4)& (0+255),c
  4173  001878  D004               	goto	u1590
  4174  00187A                     u1595:
  4175  00187A  90D8               	bcf	status,0,c
  4176  00187C  3237               	rrcf	??___fttol+3,f,c
  4177  00187E  3236               	rrcf	??___fttol+2,f,c
  4178  001880  3235               	rrcf	??___fttol+1,f,c
  4179  001882                     u1590:
  4180  001882  2E38               	decfsz	(??___fttol+4)& (0+255),f,c
  4181  001884  D7FA               	goto	u1595
  4182  001886  5035               	movf	??___fttol+1,w,c
  4183  001888  6E39               	movwf	___fttol@sign1,c
  4184  00188A  8E31               	bsf	___fttol@f1+1,7,c
  4185  00188C  0EFF               	movlw	255
  4186  00188E  1630               	andwf	___fttol@f1,f,c
  4187  001890  0EFF               	movlw	255
  4188  001892  1631               	andwf	___fttol@f1+1,f,c
  4189  001894  0E00               	movlw	0
  4190  001896  1632               	andwf	___fttol@f1+2,f,c
  4191  001898  5030               	movf	___fttol@f1,w,c
  4192  00189A  6E3A               	movwf	___fttol@lval,c
  4193  00189C  5031               	movf	___fttol@f1+1,w,c
  4194  00189E  6E3B               	movwf	___fttol@lval+1,c
  4195  0018A0  5032               	movf	___fttol@f1+2,w,c
  4196  0018A2  6E3C               	movwf	___fttol@lval+2,c
  4197  0018A4  6A3D               	clrf	___fttol@lval+3,c
  4198  0018A6  0E8E               	movlw	142
  4199  0018A8  5E3E               	subwf	___fttol@exp1,f,c
  4200  0018AA  AE3E               	btfss	___fttol@exp1,7,c
  4201  0018AC  D016               	goto	l1970
  4202  0018AE  503E               	movf	___fttol@exp1,w,c
  4203  0018B0  0A80               	xorlw	128
  4204  0018B2  0F8F               	addlw	143
  4205  0018B4  B0D8               	btfsc	status,0,c
  4206  0018B6  D009               	goto	l1966
  4207  0018B8  0E00               	movlw	0
  4208  0018BA  6E30               	movwf	?___fttol,c
  4209  0018BC  0E00               	movlw	0
  4210  0018BE  6E31               	movwf	?___fttol+1,c
  4211  0018C0  0E00               	movlw	0
  4212  0018C2  6E32               	movwf	?___fttol+2,c
  4213  0018C4  0E00               	movlw	0
  4214  0018C6  6E33               	movwf	?___fttol+3,c
  4215  0018C8  0012               	return	
  4216  0018CA                     l1966:
  4217  0018CA  90D8               	bcf	status,0,c
  4218  0018CC  323D               	rrcf	___fttol@lval+3,f,c
  4219  0018CE  323C               	rrcf	___fttol@lval+2,f,c
  4220  0018D0  323B               	rrcf	___fttol@lval+1,f,c
  4221  0018D2  323A               	rrcf	___fttol@lval,f,c
  4222  0018D4  3E3E               	incfsz	___fttol@exp1,f,c
  4223  0018D6  D7F9               	goto	l1966
  4224  0018D8  D015               	goto	l1980
  4225  0018DA                     l1970:
  4226  0018DA  0E17               	movlw	23
  4227  0018DC  643E               	cpfsgt	___fttol@exp1,c
  4228  0018DE  D00F               	goto	l1978
  4229  0018E0  0E00               	movlw	0
  4230  0018E2  6E30               	movwf	?___fttol,c
  4231  0018E4  0E00               	movlw	0
  4232  0018E6  6E31               	movwf	?___fttol+1,c
  4233  0018E8  0E00               	movlw	0
  4234  0018EA  6E32               	movwf	?___fttol+2,c
  4235  0018EC  0E00               	movlw	0
  4236  0018EE  6E33               	movwf	?___fttol+3,c
  4237  0018F0  0012               	return	
  4238  0018F2                     l1976:
  4239  0018F2  90D8               	bcf	status,0,c
  4240  0018F4  363A               	rlcf	___fttol@lval,f,c
  4241  0018F6  363B               	rlcf	___fttol@lval+1,f,c
  4242  0018F8  363C               	rlcf	___fttol@lval+2,f,c
  4243  0018FA  363D               	rlcf	___fttol@lval+3,f,c
  4244  0018FC  063E               	decf	___fttol@exp1,f,c
  4245  0018FE                     l1978:
  4246  0018FE  503E               	movf	___fttol@exp1,w,c
  4247  001900  A4D8               	btfss	status,2,c
  4248  001902  D7F7               	goto	l1976
  4249  001904                     l1980:
  4250  001904  5039               	movf	___fttol@sign1,w,c
  4251  001906  B4D8               	btfsc	status,2,c
  4252  001908  D008               	goto	l1984
  4253  00190A  1E3D               	comf	___fttol@lval+3,f,c
  4254  00190C  1E3C               	comf	___fttol@lval+2,f,c
  4255  00190E  1E3B               	comf	___fttol@lval+1,f,c
  4256  001910  6C3A               	negf	___fttol@lval,c
  4257  001912  0E00               	movlw	0
  4258  001914  223B               	addwfc	___fttol@lval+1,f,c
  4259  001916  223C               	addwfc	___fttol@lval+2,f,c
  4260  001918  223D               	addwfc	___fttol@lval+3,f,c
  4261  00191A                     l1984:
  4262  00191A  C03A  F030         	movff	___fttol@lval,?___fttol
  4263  00191E  C03B  F031         	movff	___fttol@lval+1,?___fttol+1
  4264  001922  C03C  F032         	movff	___fttol@lval+2,?___fttol+2
  4265  001926  C03D  F033         	movff	___fttol@lval+3,?___fttol+3
  4266  00192A  0012               	return	
  4267  00192C                     __end_of___fttol:
  4268                           	opt stack 0
  4269                           tblptru	equ	0xFF8
  4270                           tblptrh	equ	0xFF7
  4271                           tblptrl	equ	0xFF6
  4272                           tablat	equ	0xFF5
  4273                           prodh	equ	0xFF4
  4274                           prodl	equ	0xFF3
  4275                           intcon	equ	0xFF2
  4276                           postinc0	equ	0xFEE
  4277                           wreg	equ	0xFE8
  4278                           postdec1	equ	0xFE5
  4279                           fsr1l	equ	0xFE1
  4280                           indf2	equ	0xFDF
  4281                           postinc2	equ	0xFDE
  4282                           postdec2	equ	0xFDD
  4283                           fsr2h	equ	0xFDA
  4284                           fsr2l	equ	0xFD9
  4285                           status	equ	0xFD8
  4286                           
  4287 ;; *************** function ___ftdiv *****************
  4288 ;; Defined at:
  4289 ;;		line 54 in file "/Applications/microchip/xc8/v1.36/sources/common/ftdiv.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  f1              3   32[COMRAM] float 
  4292 ;;  f2              3   35[COMRAM] float 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  f3              3   42[COMRAM] float 
  4295 ;;  sign            1   46[COMRAM] unsigned char 
  4296 ;;  exp             1   45[COMRAM] unsigned char 
  4297 ;;  cntr            1   41[COMRAM] unsigned char 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  3   32[COMRAM] float 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0, cstack
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4307 ;;      Params:         6       0       0       0       0       0       0       0       0
  4308 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4309 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4310 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4311 ;;Total ram usage:       15 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    2
  4314 ;; This function calls:
  4315 ;;		___ftpack
  4316 ;; This function is called by:
  4317 ;;		_fsm
  4318 ;;		_stepper_pulse
  4319 ;;		_buzz
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text20
  4324  001A20                     __ptext20:
  4325                           	opt stack 0
  4326  001A20                     ___ftdiv:
  4327                           	opt stack 25
  4328                           
  4329                           ;incstack = 0
  4330  001A20  C023  F027         	movff	___ftdiv@f1+2,??___ftdiv
  4331  001A24  6A28               	clrf	(??___ftdiv+1)& (0+255),c
  4332  001A26  6A29               	clrf	(??___ftdiv+2)& (0+255),c
  4333  001A28  3422               	rlcf	___ftdiv@f1+1,w,c
  4334  001A2A  3627               	rlcf	??___ftdiv& (0+255),f,c
  4335  001A2C  E301               	bnc	u2681
  4336  001A2E  8028               	bsf	(??___ftdiv+1)& (0+255),0,c
  4337  001A30                     u2681:
  4338  001A30  5027               	movf	??___ftdiv,w,c
  4339  001A32  6E2E               	movwf	___ftdiv@exp,c
  4340  001A34  502E               	movf	___ftdiv@exp,w,c
  4341  001A36  A4D8               	btfss	status,2,c
  4342  001A38  D007               	goto	l2652
  4343  001A3A  0E00               	movlw	0
  4344  001A3C  6E21               	movwf	?___ftdiv,c
  4345  001A3E  0E00               	movlw	0
  4346  001A40  6E22               	movwf	?___ftdiv+1,c
  4347  001A42  0E00               	movlw	0
  4348  001A44  6E23               	movwf	?___ftdiv+2,c
  4349  001A46  0012               	return	
  4350  001A48                     l2652:
  4351  001A48  C026  F027         	movff	___ftdiv@f2+2,??___ftdiv
  4352  001A4C  6A28               	clrf	(??___ftdiv+1)& (0+255),c
  4353  001A4E  6A29               	clrf	(??___ftdiv+2)& (0+255),c
  4354  001A50  3425               	rlcf	___ftdiv@f2+1,w,c
  4355  001A52  3627               	rlcf	??___ftdiv& (0+255),f,c
  4356  001A54  E301               	bnc	u2701
  4357  001A56  8028               	bsf	(??___ftdiv+1)& (0+255),0,c
  4358  001A58                     u2701:
  4359  001A58  5027               	movf	??___ftdiv,w,c
  4360  001A5A  6E2F               	movwf	___ftdiv@sign,c
  4361  001A5C  502F               	movf	___ftdiv@sign,w,c
  4362  001A5E  A4D8               	btfss	status,2,c
  4363  001A60  D007               	goto	l2658
  4364  001A62  0E00               	movlw	0
  4365  001A64  6E21               	movwf	?___ftdiv,c
  4366  001A66  0E00               	movlw	0
  4367  001A68  6E22               	movwf	?___ftdiv+1,c
  4368  001A6A  0E00               	movlw	0
  4369  001A6C  6E23               	movwf	?___ftdiv+2,c
  4370  001A6E  0012               	return	
  4371  001A70                     l2658:
  4372  001A70  0E00               	movlw	0
  4373  001A72  6E2B               	movwf	___ftdiv@f3,c
  4374  001A74  0E00               	movlw	0
  4375  001A76  6E2C               	movwf	___ftdiv@f3+1,c
  4376  001A78  0E00               	movlw	0
  4377  001A7A  6E2D               	movwf	___ftdiv@f3+2,c
  4378  001A7C  502F               	movf	___ftdiv@sign,w,c
  4379  001A7E  0F89               	addlw	137
  4380  001A80  5E2E               	subwf	___ftdiv@exp,f,c
  4381  001A82  C023  F02F         	movff	___ftdiv@f1+2,___ftdiv@sign
  4382  001A86  5026               	movf	___ftdiv@f2+2,w,c
  4383  001A88  1A2F               	xorwf	___ftdiv@sign,f,c
  4384  001A8A  0E80               	movlw	128
  4385  001A8C  162F               	andwf	___ftdiv@sign,f,c
  4386  001A8E  8E22               	bsf	___ftdiv@f1+1,7,c
  4387  001A90  0EFF               	movlw	255
  4388  001A92  1621               	andwf	___ftdiv@f1,f,c
  4389  001A94  0EFF               	movlw	255
  4390  001A96  1622               	andwf	___ftdiv@f1+1,f,c
  4391  001A98  0E00               	movlw	0
  4392  001A9A  1623               	andwf	___ftdiv@f1+2,f,c
  4393  001A9C  8E25               	bsf	___ftdiv@f2+1,7,c
  4394  001A9E  0EFF               	movlw	255
  4395  001AA0  1624               	andwf	___ftdiv@f2,f,c
  4396  001AA2  0EFF               	movlw	255
  4397  001AA4  1625               	andwf	___ftdiv@f2+1,f,c
  4398  001AA6  0E00               	movlw	0
  4399  001AA8  1626               	andwf	___ftdiv@f2+2,f,c
  4400  001AAA  0E18               	movlw	24
  4401  001AAC  6E2A               	movwf	___ftdiv@cntr,c
  4402  001AAE                     l2678:
  4403  001AAE  90D8               	bcf	status,0,c
  4404  001AB0  362B               	rlcf	___ftdiv@f3,f,c
  4405  001AB2  362C               	rlcf	___ftdiv@f3+1,f,c
  4406  001AB4  362D               	rlcf	___ftdiv@f3+2,f,c
  4407  001AB6  5024               	movf	___ftdiv@f2,w,c
  4408  001AB8  5C21               	subwf	___ftdiv@f1,w,c
  4409  001ABA  5025               	movf	___ftdiv@f2+1,w,c
  4410  001ABC  5822               	subwfb	___ftdiv@f1+1,w,c
  4411  001ABE  5026               	movf	___ftdiv@f2+2,w,c
  4412  001AC0  5823               	subwfb	___ftdiv@f1+2,w,c
  4413  001AC2  A0D8               	btfss	status,0,c
  4414  001AC4  D007               	goto	l571
  4415  001AC6  5024               	movf	___ftdiv@f2,w,c
  4416  001AC8  5E21               	subwf	___ftdiv@f1,f,c
  4417  001ACA  5025               	movf	___ftdiv@f2+1,w,c
  4418  001ACC  5A22               	subwfb	___ftdiv@f1+1,f,c
  4419  001ACE  5026               	movf	___ftdiv@f2+2,w,c
  4420  001AD0  5A23               	subwfb	___ftdiv@f1+2,f,c
  4421  001AD2  802B               	bsf	___ftdiv@f3,0,c
  4422  001AD4                     l571:
  4423  001AD4  90D8               	bcf	status,0,c
  4424  001AD6  3621               	rlcf	___ftdiv@f1,f,c
  4425  001AD8  3622               	rlcf	___ftdiv@f1+1,f,c
  4426  001ADA  3623               	rlcf	___ftdiv@f1+2,f,c
  4427  001ADC  2E2A               	decfsz	___ftdiv@cntr,f,c
  4428  001ADE  D7E7               	goto	l2678
  4429  001AE0  C02B  F00F         	movff	___ftdiv@f3,___ftpack@arg
  4430  001AE4  C02C  F010         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4431  001AE8  C02D  F011         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4432  001AEC  C02E  F012         	movff	___ftdiv@exp,___ftpack@exp
  4433  001AF0  C02F  F013         	movff	___ftdiv@sign,___ftpack@sign
  4434  001AF4  ECE9  F00F         	call	___ftpack	;wreg free
  4435  001AF8  C00F  F021         	movff	?___ftpack,?___ftdiv
  4436  001AFC  C010  F022         	movff	?___ftpack+1,?___ftdiv+1
  4437  001B00  C011  F023         	movff	?___ftpack+2,?___ftdiv+2
  4438  001B04  0012               	return	
  4439  001B06                     __end_of___ftdiv:
  4440                           	opt stack 0
  4441                           tblptru	equ	0xFF8
  4442                           tblptrh	equ	0xFF7
  4443                           tblptrl	equ	0xFF6
  4444                           tablat	equ	0xFF5
  4445                           prodh	equ	0xFF4
  4446                           prodl	equ	0xFF3
  4447                           intcon	equ	0xFF2
  4448                           postinc0	equ	0xFEE
  4449                           wreg	equ	0xFE8
  4450                           postdec1	equ	0xFE5
  4451                           fsr1l	equ	0xFE1
  4452                           indf2	equ	0xFDF
  4453                           postinc2	equ	0xFDE
  4454                           postdec2	equ	0xFDD
  4455                           fsr2h	equ	0xFDA
  4456                           fsr2l	equ	0xFD9
  4457                           status	equ	0xFD8
  4458                           
  4459 ;; *************** function ___altoft *****************
  4460 ;; Defined at:
  4461 ;;		line 42 in file "/Applications/microchip/xc8/v1.36/sources/common/altoft.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  c               4   22[COMRAM] long 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  sign            1   31[COMRAM] unsigned char 
  4466 ;;  exp             1   30[COMRAM] unsigned char 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  3   22[COMRAM] float 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0, cstack
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4476 ;;      Params:         4       0       0       0       0       0       0       0       0
  4477 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4478 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4479 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4480 ;;Total ram usage:       10 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    2
  4483 ;; This function calls:
  4484 ;;		___ftpack
  4485 ;; This function is called by:
  4486 ;;		_buzz
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text21
  4491  0023C2                     __ptext21:
  4492                           	opt stack 0
  4493  0023C2                     ___altoft:
  4494                           	opt stack 25
  4495                           
  4496                           ;incstack = 0
  4497  0023C2  0E00               	movlw	0
  4498  0023C4  6E20               	movwf	___altoft@sign,c
  4499  0023C6  0E8E               	movlw	142
  4500  0023C8  6E1F               	movwf	___altoft@exp,c
  4501  0023CA  AE1A               	btfss	___altoft@c+3,7,c
  4502  0023CC  D011               	goto	l2640
  4503  0023CE  1E1A               	comf	___altoft@c+3,f,c
  4504  0023D0  1E19               	comf	___altoft@c+2,f,c
  4505  0023D2  1E18               	comf	___altoft@c+1,f,c
  4506  0023D4  6C17               	negf	___altoft@c,c
  4507  0023D6  0E00               	movlw	0
  4508  0023D8  2218               	addwfc	___altoft@c+1,f,c
  4509  0023DA  2219               	addwfc	___altoft@c+2,f,c
  4510  0023DC  221A               	addwfc	___altoft@c+3,f,c
  4511  0023DE  0E01               	movlw	1
  4512  0023E0  6E20               	movwf	___altoft@sign,c
  4513  0023E2  D006               	goto	l2640
  4514  0023E4                     l2638:
  4515  0023E4  90D8               	bcf	status,0,c
  4516  0023E6  321A               	rrcf	___altoft@c+3,f,c
  4517  0023E8  3219               	rrcf	___altoft@c+2,f,c
  4518  0023EA  3218               	rrcf	___altoft@c+1,f,c
  4519  0023EC  3217               	rrcf	___altoft@c,f,c
  4520  0023EE  2A1F               	incf	___altoft@exp,f,c
  4521  0023F0                     l2640:
  4522  0023F0  0E00               	movlw	0
  4523  0023F2  1417               	andwf	___altoft@c,w,c
  4524  0023F4  6E1B               	movwf	??___altoft& (0+255),c
  4525  0023F6  0E00               	movlw	0
  4526  0023F8  1418               	andwf	___altoft@c+1,w,c
  4527  0023FA  6E1C               	movwf	(??___altoft+1)& (0+255),c
  4528  0023FC  0E00               	movlw	0
  4529  0023FE  1419               	andwf	___altoft@c+2,w,c
  4530  002400  6E1D               	movwf	(??___altoft+2)& (0+255),c
  4531  002402  0EFF               	movlw	255
  4532  002404  141A               	andwf	___altoft@c+3,w,c
  4533  002406  6E1E               	movwf	(??___altoft+3)& (0+255),c
  4534  002408  501B               	movf	??___altoft,w,c
  4535  00240A  101C               	iorwf	??___altoft+1,w,c
  4536  00240C  101D               	iorwf	??___altoft+2,w,c
  4537  00240E  101E               	iorwf	??___altoft+3,w,c
  4538  002410  A4D8               	btfss	status,2,c
  4539  002412  D7E8               	goto	l2638
  4540  002414  C017  F00F         	movff	___altoft@c,___ftpack@arg
  4541  002418  C018  F010         	movff	___altoft@c+1,___ftpack@arg+1
  4542  00241C  C019  F011         	movff	___altoft@c+2,___ftpack@arg+2
  4543  002420  C01F  F012         	movff	___altoft@exp,___ftpack@exp
  4544  002424  C020  F013         	movff	___altoft@sign,___ftpack@sign
  4545  002428  ECE9  F00F         	call	___ftpack	;wreg free
  4546  00242C  C00F  F017         	movff	?___ftpack,?___altoft
  4547  002430  C010  F018         	movff	?___ftpack+1,?___altoft+1
  4548  002434  C011  F019         	movff	?___ftpack+2,?___altoft+2
  4549  002438  0012               	return	
  4550  00243A                     __end_of___altoft:
  4551                           	opt stack 0
  4552                           tblptru	equ	0xFF8
  4553                           tblptrh	equ	0xFF7
  4554                           tblptrl	equ	0xFF6
  4555                           tablat	equ	0xFF5
  4556                           prodh	equ	0xFF4
  4557                           prodl	equ	0xFF3
  4558                           intcon	equ	0xFF2
  4559                           postinc0	equ	0xFEE
  4560                           wreg	equ	0xFE8
  4561                           postdec1	equ	0xFE5
  4562                           fsr1l	equ	0xFE1
  4563                           indf2	equ	0xFDF
  4564                           postinc2	equ	0xFDE
  4565                           postdec2	equ	0xFDD
  4566                           fsr2h	equ	0xFDA
  4567                           fsr2l	equ	0xFD9
  4568                           status	equ	0xFD8
  4569                           
  4570 ;; *************** function ___aldiv *****************
  4571 ;; Defined at:
  4572 ;;		line 8 in file "/Applications/microchip/xc8/v1.36/sources/common/aldiv.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;  dividend        4   26[COMRAM] long 
  4575 ;;  divisor         4   30[COMRAM] long 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  quotient        4   36[COMRAM] long 
  4578 ;;  sign            1   35[COMRAM] unsigned char 
  4579 ;;  counter         1   34[COMRAM] unsigned char 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  4   26[COMRAM] long 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4589 ;;      Params:         8       0       0       0       0       0       0       0       0
  4590 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4592 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4593 ;;Total ram usage:       14 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; Hardware stack levels required when called:    1
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_buzz
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text22
  4604  001CBC                     __ptext22:
  4605                           	opt stack 0
  4606  001CBC                     ___aldiv:
  4607                           	opt stack 26
  4608                           
  4609                           ;incstack = 0
  4610  001CBC  0E00               	movlw	0
  4611  001CBE  6E24               	movwf	___aldiv@sign,c
  4612  001CC0  AE22               	btfss	___aldiv@divisor+3,7,c
  4613  001CC2  D00A               	goto	l1844
  4614  001CC4  1E22               	comf	___aldiv@divisor+3,f,c
  4615  001CC6  1E21               	comf	___aldiv@divisor+2,f,c
  4616  001CC8  1E20               	comf	___aldiv@divisor+1,f,c
  4617  001CCA  6C1F               	negf	___aldiv@divisor,c
  4618  001CCC  0E00               	movlw	0
  4619  001CCE  2220               	addwfc	___aldiv@divisor+1,f,c
  4620  001CD0  2221               	addwfc	___aldiv@divisor+2,f,c
  4621  001CD2  2222               	addwfc	___aldiv@divisor+3,f,c
  4622  001CD4  0E01               	movlw	1
  4623  001CD6  6E24               	movwf	___aldiv@sign,c
  4624  001CD8                     l1844:
  4625  001CD8  AE1E               	btfss	___aldiv@dividend+3,7,c
  4626  001CDA  D00A               	goto	l1850
  4627  001CDC  1E1E               	comf	___aldiv@dividend+3,f,c
  4628  001CDE  1E1D               	comf	___aldiv@dividend+2,f,c
  4629  001CE0  1E1C               	comf	___aldiv@dividend+1,f,c
  4630  001CE2  6C1B               	negf	___aldiv@dividend,c
  4631  001CE4  0E00               	movlw	0
  4632  001CE6  221C               	addwfc	___aldiv@dividend+1,f,c
  4633  001CE8  221D               	addwfc	___aldiv@dividend+2,f,c
  4634  001CEA  221E               	addwfc	___aldiv@dividend+3,f,c
  4635  001CEC  0E01               	movlw	1
  4636  001CEE  1A24               	xorwf	___aldiv@sign,f,c
  4637  001CF0                     l1850:
  4638  001CF0  0E00               	movlw	0
  4639  001CF2  6E25               	movwf	___aldiv@quotient,c
  4640  001CF4  0E00               	movlw	0
  4641  001CF6  6E26               	movwf	___aldiv@quotient+1,c
  4642  001CF8  0E00               	movlw	0
  4643  001CFA  6E27               	movwf	___aldiv@quotient+2,c
  4644  001CFC  0E00               	movlw	0
  4645  001CFE  6E28               	movwf	___aldiv@quotient+3,c
  4646  001D00  501F               	movf	___aldiv@divisor,w,c
  4647  001D02  1020               	iorwf	___aldiv@divisor+1,w,c
  4648  001D04  1021               	iorwf	___aldiv@divisor+2,w,c
  4649  001D06  1022               	iorwf	___aldiv@divisor+3,w,c
  4650  001D08  B4D8               	btfsc	status,2,c
  4651  001D0A  D02A               	goto	l1872
  4652  001D0C  0E01               	movlw	1
  4653  001D0E  6E23               	movwf	___aldiv@counter,c
  4654  001D10  D006               	goto	l1858
  4655  001D12                     l1856:
  4656  001D12  90D8               	bcf	status,0,c
  4657  001D14  361F               	rlcf	___aldiv@divisor,f,c
  4658  001D16  3620               	rlcf	___aldiv@divisor+1,f,c
  4659  001D18  3621               	rlcf	___aldiv@divisor+2,f,c
  4660  001D1A  3622               	rlcf	___aldiv@divisor+3,f,c
  4661  001D1C  2A23               	incf	___aldiv@counter,f,c
  4662  001D1E                     l1858:
  4663  001D1E  AE22               	btfss	___aldiv@divisor+3,7,c
  4664  001D20  D7F8               	goto	l1856
  4665  001D22                     l1860:
  4666  001D22  90D8               	bcf	status,0,c
  4667  001D24  3625               	rlcf	___aldiv@quotient,f,c
  4668  001D26  3626               	rlcf	___aldiv@quotient+1,f,c
  4669  001D28  3627               	rlcf	___aldiv@quotient+2,f,c
  4670  001D2A  3628               	rlcf	___aldiv@quotient+3,f,c
  4671  001D2C  501F               	movf	___aldiv@divisor,w,c
  4672  001D2E  5C1B               	subwf	___aldiv@dividend,w,c
  4673  001D30  5020               	movf	___aldiv@divisor+1,w,c
  4674  001D32  581C               	subwfb	___aldiv@dividend+1,w,c
  4675  001D34  5021               	movf	___aldiv@divisor+2,w,c
  4676  001D36  581D               	subwfb	___aldiv@dividend+2,w,c
  4677  001D38  5022               	movf	___aldiv@divisor+3,w,c
  4678  001D3A  581E               	subwfb	___aldiv@dividend+3,w,c
  4679  001D3C  A0D8               	btfss	status,0,c
  4680  001D3E  D009               	goto	l1868
  4681  001D40  501F               	movf	___aldiv@divisor,w,c
  4682  001D42  5E1B               	subwf	___aldiv@dividend,f,c
  4683  001D44  5020               	movf	___aldiv@divisor+1,w,c
  4684  001D46  5A1C               	subwfb	___aldiv@dividend+1,f,c
  4685  001D48  5021               	movf	___aldiv@divisor+2,w,c
  4686  001D4A  5A1D               	subwfb	___aldiv@dividend+2,f,c
  4687  001D4C  5022               	movf	___aldiv@divisor+3,w,c
  4688  001D4E  5A1E               	subwfb	___aldiv@dividend+3,f,c
  4689  001D50  8025               	bsf	___aldiv@quotient,0,c
  4690  001D52                     l1868:
  4691  001D52  90D8               	bcf	status,0,c
  4692  001D54  3222               	rrcf	___aldiv@divisor+3,f,c
  4693  001D56  3221               	rrcf	___aldiv@divisor+2,f,c
  4694  001D58  3220               	rrcf	___aldiv@divisor+1,f,c
  4695  001D5A  321F               	rrcf	___aldiv@divisor,f,c
  4696  001D5C  2E23               	decfsz	___aldiv@counter,f,c
  4697  001D5E  D7E1               	goto	l1860
  4698  001D60                     l1872:
  4699  001D60  5024               	movf	___aldiv@sign,w,c
  4700  001D62  B4D8               	btfsc	status,2,c
  4701  001D64  D008               	goto	l1876
  4702  001D66  1E28               	comf	___aldiv@quotient+3,f,c
  4703  001D68  1E27               	comf	___aldiv@quotient+2,f,c
  4704  001D6A  1E26               	comf	___aldiv@quotient+1,f,c
  4705  001D6C  6C25               	negf	___aldiv@quotient,c
  4706  001D6E  0E00               	movlw	0
  4707  001D70  2226               	addwfc	___aldiv@quotient+1,f,c
  4708  001D72  2227               	addwfc	___aldiv@quotient+2,f,c
  4709  001D74  2228               	addwfc	___aldiv@quotient+3,f,c
  4710  001D76                     l1876:
  4711  001D76  C025  F01B         	movff	___aldiv@quotient,?___aldiv
  4712  001D7A  C026  F01C         	movff	___aldiv@quotient+1,?___aldiv+1
  4713  001D7E  C027  F01D         	movff	___aldiv@quotient+2,?___aldiv+2
  4714  001D82  C028  F01E         	movff	___aldiv@quotient+3,?___aldiv+3
  4715  001D86  0012               	return	
  4716  001D88                     __end_of___aldiv:
  4717                           	opt stack 0
  4718                           tblptru	equ	0xFF8
  4719                           tblptrh	equ	0xFF7
  4720                           tblptrl	equ	0xFF6
  4721                           tablat	equ	0xFF5
  4722                           prodh	equ	0xFF4
  4723                           prodl	equ	0xFF3
  4724                           intcon	equ	0xFF2
  4725                           postinc0	equ	0xFEE
  4726                           wreg	equ	0xFE8
  4727                           postdec1	equ	0xFE5
  4728                           fsr1l	equ	0xFE1
  4729                           indf2	equ	0xFDF
  4730                           postinc2	equ	0xFDE
  4731                           postdec2	equ	0xFDD
  4732                           fsr2h	equ	0xFDA
  4733                           fsr2l	equ	0xFD9
  4734                           status	equ	0xFD8
  4735                           
  4736 ;; *************** function ___wmul *****************
  4737 ;; Defined at:
  4738 ;;		line 15 in file "/Applications/microchip/xc8/v1.36/sources/common/Umul16.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  multiplier      2   14[COMRAM] unsigned int 
  4741 ;;  multiplicand    2   16[COMRAM] unsigned int 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;  product         2   18[COMRAM] unsigned int 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  2   14[COMRAM] unsigned int 
  4746 ;; Registers used:
  4747 ;;		wreg, status,2, status,0, prodl, prodh
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4753 ;;      Params:         4       0       0       0       0       0       0       0       0
  4754 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4755 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4756 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4757 ;;Total ram usage:        6 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; Hardware stack levels required when called:    1
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_nothingElseMatters
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text23
  4768  0027BC                     __ptext23:
  4769                           	opt stack 0
  4770  0027BC                     ___wmul:
  4771                           	opt stack 27
  4772                           
  4773                           ;incstack = 0
  4774  0027BC  500F               	movf	___wmul@multiplier,w,c
  4775  0027BE  0211               	mulwf	___wmul@multiplicand,c
  4776  0027C0  CFF3 F013          	movff	prodl,___wmul@product
  4777  0027C4  CFF4 F014          	movff	prodh,___wmul@product+1
  4778  0027C8  500F               	movf	___wmul@multiplier,w,c
  4779  0027CA  0212               	mulwf	___wmul@multiplicand+1,c
  4780  0027CC  50F3               	movf	prodl,w,c
  4781  0027CE  2614               	addwf	___wmul@product+1,f,c
  4782  0027D0  5010               	movf	___wmul@multiplier+1,w,c
  4783  0027D2  0211               	mulwf	___wmul@multiplicand,c
  4784  0027D4  50F3               	movf	prodl,w,c
  4785  0027D6  2614               	addwf	___wmul@product+1,f,c
  4786  0027D8  C013  F00F         	movff	___wmul@product,?___wmul
  4787  0027DC  C014  F010         	movff	___wmul@product+1,?___wmul+1
  4788  0027E0  0012               	return	
  4789  0027E2                     __end_of___wmul:
  4790                           	opt stack 0
  4791                           tblptru	equ	0xFF8
  4792                           tblptrh	equ	0xFF7
  4793                           tblptrl	equ	0xFF6
  4794                           tablat	equ	0xFF5
  4795                           prodh	equ	0xFF4
  4796                           prodl	equ	0xFF3
  4797                           intcon	equ	0xFF2
  4798                           postinc0	equ	0xFEE
  4799                           wreg	equ	0xFE8
  4800                           postdec1	equ	0xFE5
  4801                           fsr1l	equ	0xFE1
  4802                           indf2	equ	0xFDF
  4803                           postinc2	equ	0xFDE
  4804                           postdec2	equ	0xFDD
  4805                           fsr2h	equ	0xFDA
  4806                           fsr2l	equ	0xFD9
  4807                           status	equ	0xFD8
  4808                           
  4809 ;; *************** function ___lbtoft *****************
  4810 ;; Defined at:
  4811 ;;		line 27 in file "/Applications/microchip/xc8/v1.36/sources/common/lbtoft.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;  c               1    wreg     unsigned char 
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;  c               1   25[COMRAM] unsigned char 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  3   22[COMRAM] float 
  4818 ;; Registers used:
  4819 ;;		wreg, status,2, status,0, cstack
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4825 ;;      Params:         3       0       0       0       0       0       0       0       0
  4826 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4828 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4829 ;;Total ram usage:        4 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:    2
  4832 ;; This function calls:
  4833 ;;		___ftpack
  4834 ;; This function is called by:
  4835 ;;		_fsm
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text24
  4840  00282A                     __ptext24:
  4841                           	opt stack 0
  4842  00282A                     ___lbtoft:
  4843                           	opt stack 27
  4844                           
  4845                           ;incstack = 0
  4846                           ;___lbtoft@c stored from wreg
  4847  00282A  6E1A               	movwf	___lbtoft@c,c
  4848  00282C  501A               	movf	___lbtoft@c,w,c
  4849  00282E  6E0F               	movwf	___ftpack@arg,c
  4850  002830  6A10               	clrf	___ftpack@arg+1,c
  4851  002832  6A11               	clrf	___ftpack@arg+2,c
  4852  002834  0E8E               	movlw	142
  4853  002836  6E12               	movwf	___ftpack@exp,c
  4854  002838  0E00               	movlw	0
  4855  00283A  6E13               	movwf	___ftpack@sign,c
  4856  00283C  ECE9  F00F         	call	___ftpack	;wreg free
  4857  002840  C00F  F017         	movff	?___ftpack,?___lbtoft
  4858  002844  C010  F018         	movff	?___ftpack+1,?___lbtoft+1
  4859  002848  C011  F019         	movff	?___ftpack+2,?___lbtoft+2
  4860  00284C  0012               	return	
  4861  00284E                     __end_of___lbtoft:
  4862                           	opt stack 0
  4863                           tblptru	equ	0xFF8
  4864                           tblptrh	equ	0xFF7
  4865                           tblptrl	equ	0xFF6
  4866                           tablat	equ	0xFF5
  4867                           prodh	equ	0xFF4
  4868                           prodl	equ	0xFF3
  4869                           intcon	equ	0xFF2
  4870                           postinc0	equ	0xFEE
  4871                           wreg	equ	0xFE8
  4872                           postdec1	equ	0xFE5
  4873                           fsr1l	equ	0xFE1
  4874                           indf2	equ	0xFDF
  4875                           postinc2	equ	0xFDE
  4876                           postdec2	equ	0xFDD
  4877                           fsr2h	equ	0xFDA
  4878                           fsr2l	equ	0xFD9
  4879                           status	equ	0xFD8
  4880                           
  4881 ;; *************** function ___ftmul *****************
  4882 ;; Defined at:
  4883 ;;		line 62 in file "/Applications/microchip/xc8/v1.36/sources/common/ftmul.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  f1              3   46[COMRAM] float 
  4886 ;;  f2              3   49[COMRAM] float 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  f3_as_produc    3   56[COMRAM] unsigned um
  4889 ;;  sign            1   60[COMRAM] unsigned char 
  4890 ;;  cntr            1   59[COMRAM] unsigned char 
  4891 ;;  exp             1   55[COMRAM] unsigned char 
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  3   46[COMRAM] float 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2, status,0, cstack
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4901 ;;      Params:         6       0       0       0       0       0       0       0       0
  4902 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4903 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4904 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4905 ;;Total ram usage:       15 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:    2
  4908 ;; This function calls:
  4909 ;;		___ftpack
  4910 ;; This function is called by:
  4911 ;;		_fsm
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	text25
  4916  00192C                     __ptext25:
  4917                           	opt stack 0
  4918  00192C                     ___ftmul:
  4919                           	opt stack 27
  4920                           
  4921                           ;incstack = 0
  4922  00192C  C031  F035         	movff	___ftmul@f1+2,??___ftmul
  4923  001930  6A36               	clrf	(??___ftmul+1)& (0+255),c
  4924  001932  6A37               	clrf	(??___ftmul+2)& (0+255),c
  4925  001934  3430               	rlcf	___ftmul@f1+1,w,c
  4926  001936  3635               	rlcf	??___ftmul& (0+255),f,c
  4927  001938  E301               	bnc	u2981
  4928  00193A  8036               	bsf	(??___ftmul+1)& (0+255),0,c
  4929  00193C                     u2981:
  4930  00193C  5035               	movf	??___ftmul,w,c
  4931  00193E  6E38               	movwf	___ftmul@exp,c
  4932  001940  5038               	movf	___ftmul@exp,w,c
  4933  001942  A4D8               	btfss	status,2,c
  4934  001944  D007               	goto	l2810
  4935  001946  0E00               	movlw	0
  4936  001948  6E2F               	movwf	?___ftmul,c
  4937  00194A  0E00               	movlw	0
  4938  00194C  6E30               	movwf	?___ftmul+1,c
  4939  00194E  0E00               	movlw	0
  4940  001950  6E31               	movwf	?___ftmul+2,c
  4941  001952  0012               	return	
  4942  001954                     l2810:
  4943  001954  C034  F035         	movff	___ftmul@f2+2,??___ftmul
  4944  001958  6A36               	clrf	(??___ftmul+1)& (0+255),c
  4945  00195A  6A37               	clrf	(??___ftmul+2)& (0+255),c
  4946  00195C  3433               	rlcf	___ftmul@f2+1,w,c
  4947  00195E  3635               	rlcf	??___ftmul& (0+255),f,c
  4948  001960  E301               	bnc	u3001
  4949  001962  8036               	bsf	(??___ftmul+1)& (0+255),0,c
  4950  001964                     u3001:
  4951  001964  5035               	movf	??___ftmul,w,c
  4952  001966  6E3D               	movwf	___ftmul@sign,c
  4953  001968  503D               	movf	___ftmul@sign,w,c
  4954  00196A  A4D8               	btfss	status,2,c
  4955  00196C  D007               	goto	l2816
  4956  00196E  0E00               	movlw	0
  4957  001970  6E2F               	movwf	?___ftmul,c
  4958  001972  0E00               	movlw	0
  4959  001974  6E30               	movwf	?___ftmul+1,c
  4960  001976  0E00               	movlw	0
  4961  001978  6E31               	movwf	?___ftmul+2,c
  4962  00197A  0012               	return	
  4963  00197C                     l2816:
  4964  00197C  503D               	movf	___ftmul@sign,w,c
  4965  00197E  0F7B               	addlw	123
  4966  001980  2638               	addwf	___ftmul@exp,f,c
  4967  001982  C031  F03D         	movff	___ftmul@f1+2,___ftmul@sign
  4968  001986  5034               	movf	___ftmul@f2+2,w,c
  4969  001988  1A3D               	xorwf	___ftmul@sign,f,c
  4970  00198A  0E80               	movlw	128
  4971  00198C  163D               	andwf	___ftmul@sign,f,c
  4972  00198E  8E30               	bsf	___ftmul@f1+1,7,c
  4973  001990  8E33               	bsf	___ftmul@f2+1,7,c
  4974  001992  0EFF               	movlw	255
  4975  001994  1632               	andwf	___ftmul@f2,f,c
  4976  001996  0EFF               	movlw	255
  4977  001998  1633               	andwf	___ftmul@f2+1,f,c
  4978  00199A  0E00               	movlw	0
  4979  00199C  1634               	andwf	___ftmul@f2+2,f,c
  4980  00199E  0E00               	movlw	0
  4981  0019A0  6E39               	movwf	___ftmul@f3_as_product,c
  4982  0019A2  0E00               	movlw	0
  4983  0019A4  6E3A               	movwf	___ftmul@f3_as_product+1,c
  4984  0019A6  0E00               	movlw	0
  4985  0019A8  6E3B               	movwf	___ftmul@f3_as_product+2,c
  4986  0019AA  0E07               	movlw	7
  4987  0019AC  6E3C               	movwf	___ftmul@cntr,c
  4988  0019AE                     l2830:
  4989  0019AE  A02F               	btfss	___ftmul@f1,0,c
  4990  0019B0  D006               	goto	l2834
  4991  0019B2  5032               	movf	___ftmul@f2,w,c
  4992  0019B4  2639               	addwf	___ftmul@f3_as_product,f,c
  4993  0019B6  5033               	movf	___ftmul@f2+1,w,c
  4994  0019B8  223A               	addwfc	___ftmul@f3_as_product+1,f,c
  4995  0019BA  5034               	movf	___ftmul@f2+2,w,c
  4996  0019BC  223B               	addwfc	___ftmul@f3_as_product+2,f,c
  4997  0019BE                     l2834:
  4998  0019BE  90D8               	bcf	status,0,c
  4999  0019C0  3231               	rrcf	___ftmul@f1+2,f,c
  5000  0019C2  3230               	rrcf	___ftmul@f1+1,f,c
  5001  0019C4  322F               	rrcf	___ftmul@f1,f,c
  5002  0019C6  90D8               	bcf	status,0,c
  5003  0019C8  3632               	rlcf	___ftmul@f2,f,c
  5004  0019CA  3633               	rlcf	___ftmul@f2+1,f,c
  5005  0019CC  3634               	rlcf	___ftmul@f2+2,f,c
  5006  0019CE  2E3C               	decfsz	___ftmul@cntr,f,c
  5007  0019D0  D7EE               	goto	l2830
  5008  0019D2  0E09               	movlw	9
  5009  0019D4  6E3C               	movwf	___ftmul@cntr,c
  5010  0019D6                     l2840:
  5011  0019D6  A02F               	btfss	___ftmul@f1,0,c
  5012  0019D8  D006               	goto	l2844
  5013  0019DA  5032               	movf	___ftmul@f2,w,c
  5014  0019DC  2639               	addwf	___ftmul@f3_as_product,f,c
  5015  0019DE  5033               	movf	___ftmul@f2+1,w,c
  5016  0019E0  223A               	addwfc	___ftmul@f3_as_product+1,f,c
  5017  0019E2  5034               	movf	___ftmul@f2+2,w,c
  5018  0019E4  223B               	addwfc	___ftmul@f3_as_product+2,f,c
  5019  0019E6                     l2844:
  5020  0019E6  90D8               	bcf	status,0,c
  5021  0019E8  3231               	rrcf	___ftmul@f1+2,f,c
  5022  0019EA  3230               	rrcf	___ftmul@f1+1,f,c
  5023  0019EC  322F               	rrcf	___ftmul@f1,f,c
  5024  0019EE  90D8               	bcf	status,0,c
  5025  0019F0  323B               	rrcf	___ftmul@f3_as_product+2,f,c
  5026  0019F2  323A               	rrcf	___ftmul@f3_as_product+1,f,c
  5027  0019F4  3239               	rrcf	___ftmul@f3_as_product,f,c
  5028  0019F6  2E3C               	decfsz	___ftmul@cntr,f,c
  5029  0019F8  D7EE               	goto	l2840
  5030  0019FA  C039  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  5031  0019FE  C03A  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5032  001A02  C03B  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5033  001A06  C038  F012         	movff	___ftmul@exp,___ftpack@exp
  5034  001A0A  C03D  F013         	movff	___ftmul@sign,___ftpack@sign
  5035  001A0E  ECE9  F00F         	call	___ftpack	;wreg free
  5036  001A12  C00F  F02F         	movff	?___ftpack,?___ftmul
  5037  001A16  C010  F030         	movff	?___ftpack+1,?___ftmul+1
  5038  001A1A  C011  F031         	movff	?___ftpack+2,?___ftmul+2
  5039  001A1E  0012               	return	
  5040  001A20                     __end_of___ftmul:
  5041                           	opt stack 0
  5042                           tblptru	equ	0xFF8
  5043                           tblptrh	equ	0xFF7
  5044                           tblptrl	equ	0xFF6
  5045                           tablat	equ	0xFF5
  5046                           prodh	equ	0xFF4
  5047                           prodl	equ	0xFF3
  5048                           intcon	equ	0xFF2
  5049                           postinc0	equ	0xFEE
  5050                           wreg	equ	0xFE8
  5051                           postdec1	equ	0xFE5
  5052                           fsr1l	equ	0xFE1
  5053                           indf2	equ	0xFDF
  5054                           postinc2	equ	0xFDE
  5055                           postdec2	equ	0xFDD
  5056                           fsr2h	equ	0xFDA
  5057                           fsr2l	equ	0xFD9
  5058                           status	equ	0xFD8
  5059                           
  5060 ;; *************** function ___ftge *****************
  5061 ;; Defined at:
  5062 ;;		line 4 in file "/Applications/microchip/xc8/v1.36/sources/common/ftge.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;  ff1             3    3[BANK0 ] float 
  5065 ;;  ff2             3    6[BANK0 ] float 
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;		None
  5068 ;; Return value:  Size  Location     Type
  5069 ;;		None               void
  5070 ;; Registers used:
  5071 ;;		wreg, status,2, status,0
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5077 ;;      Params:         0       6       0       0       0       0       0       0       0
  5078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5079 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5080 ;;      Totals:         0       9       0       0       0       0       0       0       0
  5081 ;;Total ram usage:        9 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; Hardware stack levels required when called:    1
  5084 ;; This function calls:
  5085 ;;		Nothing
  5086 ;; This function is called by:
  5087 ;;		_fsm
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text26
  5092  001D88                     __ptext26:
  5093                           	opt stack 0
  5094  001D88                     ___ftge:
  5095                           	opt stack 28
  5096                           
  5097                           ;incstack = 0
  5098  001D88  0100               	movlb	0	; () banked
  5099  001D8A  AFDE               	btfss	(___ftge@ff1+2)& (0+255),7,b
  5100  001D8C  D01D               	goto	l2868
  5101                           
  5102                           ; BSR set to: 0
  5103  001D8E  C0DC  F0E2         	movff	___ftge@ff1,??___ftge
  5104  001D92  C0DD  F0E3         	movff	___ftge@ff1+1,??___ftge+1
  5105  001D96  C0DE  F0E4         	movff	___ftge@ff1+2,??___ftge+2
  5106  001D9A  0100               	movlb	0	; () banked
  5107  001D9C  1FE2               	comf	??___ftge& (0+255),f,b
  5108  001D9E  1FE3               	comf	(??___ftge+1)& (0+255),f,b
  5109  001DA0  1FE4               	comf	(??___ftge+2)& (0+255),f,b
  5110  001DA2  2BE2               	incf	??___ftge& (0+255),f,b
  5111  001DA4  0E00               	movlw	0
  5112  001DA6  23E3               	addwfc	(??___ftge+1)& (0+255),f,b
  5113  001DA8  23E4               	addwfc	(??___ftge+2)& (0+255),f,b
  5114  001DAA  0E00               	movlw	0
  5115  001DAC  0100               	movlb	0	; () banked
  5116  001DAE  25E2               	addwf	??___ftge& (0+255),w,b
  5117  001DB0  0100               	movlb	0	; () banked
  5118  001DB2  6FDC               	movwf	___ftge@ff1& (0+255),b
  5119  001DB4  0E00               	movlw	0
  5120  001DB6  0100               	movlb	0	; () banked
  5121  001DB8  21E3               	addwfc	(??___ftge+1)& (0+255),w,b
  5122  001DBA  0100               	movlb	0	; () banked
  5123  001DBC  6FDD               	movwf	(___ftge@ff1+1)& (0+255),b
  5124  001DBE  0E80               	movlw	128
  5125  001DC0  0100               	movlb	0	; () banked
  5126  001DC2  21E4               	addwfc	(??___ftge+2)& (0+255),w,b
  5127  001DC4  0100               	movlb	0	; () banked
  5128  001DC6  6FDE               	movwf	(___ftge@ff1+2)& (0+255),b
  5129  001DC8                     l2868:
  5130                           
  5131                           ; BSR set to: 0
  5132  001DC8  0100               	movlb	0	; () banked
  5133  001DCA  AFE1               	btfss	(___ftge@ff2+2)& (0+255),7,b
  5134  001DCC  D01D               	goto	l2872
  5135                           
  5136                           ; BSR set to: 0
  5137  001DCE  C0DF  F0E2         	movff	___ftge@ff2,??___ftge
  5138  001DD2  C0E0  F0E3         	movff	___ftge@ff2+1,??___ftge+1
  5139  001DD6  C0E1  F0E4         	movff	___ftge@ff2+2,??___ftge+2
  5140  001DDA  0100               	movlb	0	; () banked
  5141  001DDC  1FE2               	comf	??___ftge& (0+255),f,b
  5142  001DDE  1FE3               	comf	(??___ftge+1)& (0+255),f,b
  5143  001DE0  1FE4               	comf	(??___ftge+2)& (0+255),f,b
  5144  001DE2  2BE2               	incf	??___ftge& (0+255),f,b
  5145  001DE4  0E00               	movlw	0
  5146  001DE6  23E3               	addwfc	(??___ftge+1)& (0+255),f,b
  5147  001DE8  23E4               	addwfc	(??___ftge+2)& (0+255),f,b
  5148  001DEA  0E00               	movlw	0
  5149  001DEC  0100               	movlb	0	; () banked
  5150  001DEE  25E2               	addwf	??___ftge& (0+255),w,b
  5151  001DF0  0100               	movlb	0	; () banked
  5152  001DF2  6FDF               	movwf	___ftge@ff2& (0+255),b
  5153  001DF4  0E00               	movlw	0
  5154  001DF6  0100               	movlb	0	; () banked
  5155  001DF8  21E3               	addwfc	(??___ftge+1)& (0+255),w,b
  5156  001DFA  0100               	movlb	0	; () banked
  5157  001DFC  6FE0               	movwf	(___ftge@ff2+1)& (0+255),b
  5158  001DFE  0E80               	movlw	128
  5159  001E00  0100               	movlb	0	; () banked
  5160  001E02  21E4               	addwfc	(??___ftge+2)& (0+255),w,b
  5161  001E04  0100               	movlb	0	; () banked
  5162  001E06  6FE1               	movwf	(___ftge@ff2+2)& (0+255),b
  5163  001E08                     l2872:
  5164                           
  5165                           ; BSR set to: 0
  5166  001E08  0E00               	movlw	0
  5167  001E0A  0100               	movlb	0	; () banked
  5168  001E0C  1BDC               	xorwf	___ftge@ff1& (0+255),f,b
  5169  001E0E  0E00               	movlw	0
  5170  001E10  0100               	movlb	0	; () banked
  5171  001E12  1BDD               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  5172  001E14  0E80               	movlw	128
  5173  001E16  0100               	movlb	0	; () banked
  5174  001E18  1BDE               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  5175                           
  5176                           ; BSR set to: 0
  5177  001E1A  0E00               	movlw	0
  5178  001E1C  0100               	movlb	0	; () banked
  5179  001E1E  1BDF               	xorwf	___ftge@ff2& (0+255),f,b
  5180  001E20  0E00               	movlw	0
  5181  001E22  0100               	movlb	0	; () banked
  5182  001E24  1BE0               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  5183  001E26  0E80               	movlw	128
  5184  001E28  0100               	movlb	0	; () banked
  5185  001E2A  1BE1               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  5186  001E2C  0100               	movlb	0	; () banked
  5187  001E2E  51DF               	movf	___ftge@ff2& (0+255),w,b
  5188  001E30  0100               	movlb	0	; () banked
  5189  001E32  5DDC               	subwf	___ftge@ff1& (0+255),w,b
  5190  001E34  0100               	movlb	0	; () banked
  5191  001E36  51E0               	movf	(___ftge@ff2+1)& (0+255),w,b
  5192  001E38  0100               	movlb	0	; () banked
  5193  001E3A  59DD               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  5194  001E3C  0100               	movlb	0	; () banked
  5195  001E3E  51E1               	movf	(___ftge@ff2+2)& (0+255),w,b
  5196  001E40  0100               	movlb	0	; () banked
  5197  001E42  59DE               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  5198  001E44  B0D8               	btfsc	status,0,c
  5199  001E46  D002               	goto	l2878
  5200                           
  5201                           ; BSR set to: 0
  5202  001E48  90D8               	bcf	status,0,c
  5203  001E4A  0012               	return	
  5204  001E4C                     l2878:
  5205                           
  5206                           ; BSR set to: 0
  5207  001E4C  80D8               	bsf	status,0,c
  5208                           
  5209                           ; BSR set to: 0
  5210  001E4E  0012               	return	
  5211  001E50                     __end_of___ftge:
  5212                           	opt stack 0
  5213                           tblptru	equ	0xFF8
  5214                           tblptrh	equ	0xFF7
  5215                           tblptrl	equ	0xFF6
  5216                           tablat	equ	0xFF5
  5217                           prodh	equ	0xFF4
  5218                           prodl	equ	0xFF3
  5219                           intcon	equ	0xFF2
  5220                           postinc0	equ	0xFEE
  5221                           wreg	equ	0xFE8
  5222                           postdec1	equ	0xFE5
  5223                           fsr1l	equ	0xFE1
  5224                           indf2	equ	0xFDF
  5225                           postinc2	equ	0xFDE
  5226                           postdec2	equ	0xFDD
  5227                           fsr2h	equ	0xFDA
  5228                           fsr2l	equ	0xFD9
  5229                           status	equ	0xFD8
  5230                           
  5231 ;; *************** function ___ftadd *****************
  5232 ;; Defined at:
  5233 ;;		line 86 in file "/Applications/microchip/xc8/v1.36/sources/common/ftadd.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  f1              3   61[COMRAM] float 
  5236 ;;  f2              3   64[COMRAM] float 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  exp1            1    2[BANK0 ] unsigned char 
  5239 ;;  exp2            1    1[BANK0 ] unsigned char 
  5240 ;;  sign            1    0[BANK0 ] unsigned char 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  3   61[COMRAM] float 
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0, cstack
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5250 ;;      Params:         6       0       0       0       0       0       0       0       0
  5251 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5252 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5253 ;;      Totals:         9       3       0       0       0       0       0       0       0
  5254 ;;Total ram usage:       12 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    2
  5257 ;; This function calls:
  5258 ;;		___ftpack
  5259 ;; This function is called by:
  5260 ;;		_fsm
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           	psect	text27
  5265  001506                     __ptext27:
  5266                           	opt stack 0
  5267  001506                     ___ftadd:
  5268                           	opt stack 27
  5269                           
  5270                           ; BSR set to: 0
  5271                           ;incstack = 0
  5272  001506  C040  F044         	movff	___ftadd@f1+2,??___ftadd
  5273  00150A  6A45               	clrf	(??___ftadd+1)& (0+255),c
  5274  00150C  6A46               	clrf	(??___ftadd+2)& (0+255),c
  5275  00150E  343F               	rlcf	___ftadd@f1+1,w,c
  5276  001510  3644               	rlcf	??___ftadd& (0+255),f,c
  5277  001512  E301               	bnc	u2771
  5278  001514  8045               	bsf	(??___ftadd+1)& (0+255),0,c
  5279  001516                     u2771:
  5280  001516  5044               	movf	??___ftadd,w,c
  5281  001518  0100               	movlb	0	; () banked
  5282  00151A  6FDB               	movwf	___ftadd@exp1& (0+255),b
  5283  00151C  C043  F044         	movff	___ftadd@f2+2,??___ftadd
  5284  001520  6A45               	clrf	(??___ftadd+1)& (0+255),c
  5285  001522  6A46               	clrf	(??___ftadd+2)& (0+255),c
  5286  001524  3442               	rlcf	___ftadd@f2+1,w,c
  5287  001526  3644               	rlcf	??___ftadd& (0+255),f,c
  5288  001528  E301               	bnc	u2781
  5289  00152A  8045               	bsf	(??___ftadd+1)& (0+255),0,c
  5290  00152C                     u2781:
  5291  00152C  5044               	movf	??___ftadd,w,c
  5292  00152E  0100               	movlb	0	; () banked
  5293  001530  6FDA               	movwf	___ftadd@exp2& (0+255),b
  5294                           
  5295                           ; BSR set to: 0
  5296  001532  0100               	movlb	0	; () banked
  5297  001534  51DB               	movf	___ftadd@exp1& (0+255),w,b
  5298  001536  0100               	movlb	0	; () banked
  5299  001538  B4D8               	btfsc	status,2,c
  5300  00153A  D00F               	goto	l536
  5301                           
  5302                           ; BSR set to: 0
  5303  00153C  0100               	movlb	0	; () banked
  5304  00153E  51DA               	movf	___ftadd@exp2& (0+255),w,b
  5305  001540  0100               	movlb	0	; () banked
  5306  001542  5DDB               	subwf	___ftadd@exp1& (0+255),w,b
  5307  001544  B0D8               	btfsc	status,0,c
  5308  001546  D010               	goto	l2742
  5309                           
  5310                           ; BSR set to: 0
  5311  001548  0100               	movlb	0	; () banked
  5312  00154A  51DB               	movf	___ftadd@exp1& (0+255),w,b
  5313  00154C  0800               	sublw	0
  5314  00154E  0100               	movlb	0	; () banked
  5315  001550  25DA               	addwf	___ftadd@exp2& (0+255),w,b
  5316  001552  6E44               	movwf	??___ftadd& (0+255),c
  5317  001554  0E18               	movlw	24
  5318  001556  6444               	cpfsgt	??___ftadd,c
  5319  001558  D007               	goto	l2742
  5320  00155A                     l536:
  5321                           
  5322                           ; BSR set to: 0
  5323  00155A  C041  F03E         	movff	___ftadd@f2,?___ftadd
  5324  00155E  C042  F03F         	movff	___ftadd@f2+1,?___ftadd+1
  5325  001562  C043  F040         	movff	___ftadd@f2+2,?___ftadd+2
  5326  001566  0012               	return	
  5327  001568                     l2742:
  5328                           
  5329                           ; BSR set to: 0
  5330  001568  0100               	movlb	0	; () banked
  5331  00156A  51DA               	movf	___ftadd@exp2& (0+255),w,b
  5332  00156C  0100               	movlb	0	; () banked
  5333  00156E  B4D8               	btfsc	status,2,c
  5334  001570  D00F               	goto	l540
  5335                           
  5336                           ; BSR set to: 0
  5337  001572  0100               	movlb	0	; () banked
  5338  001574  51DB               	movf	___ftadd@exp1& (0+255),w,b
  5339  001576  0100               	movlb	0	; () banked
  5340  001578  5DDA               	subwf	___ftadd@exp2& (0+255),w,b
  5341  00157A  B0D8               	btfsc	status,0,c
  5342  00157C  D010               	goto	l2748
  5343                           
  5344                           ; BSR set to: 0
  5345  00157E  0100               	movlb	0	; () banked
  5346  001580  51DA               	movf	___ftadd@exp2& (0+255),w,b
  5347  001582  0800               	sublw	0
  5348  001584  0100               	movlb	0	; () banked
  5349  001586  25DB               	addwf	___ftadd@exp1& (0+255),w,b
  5350  001588  6E44               	movwf	??___ftadd& (0+255),c
  5351  00158A  0E18               	movlw	24
  5352  00158C  6444               	cpfsgt	??___ftadd,c
  5353  00158E  D007               	goto	l2748
  5354  001590                     l540:
  5355                           
  5356                           ; BSR set to: 0
  5357  001590  C03E  F03E         	movff	___ftadd@f1,?___ftadd
  5358  001594  C03F  F03F         	movff	___ftadd@f1+1,?___ftadd+1
  5359  001598  C040  F040         	movff	___ftadd@f1+2,?___ftadd+2
  5360  00159C  0012               	return	
  5361  00159E                     l2748:
  5362                           
  5363                           ; BSR set to: 0
  5364  00159E  0E06               	movlw	6
  5365  0015A0  0100               	movlb	0	; () banked
  5366  0015A2  6FD9               	movwf	___ftadd@sign& (0+255),b
  5367                           
  5368                           ; BSR set to: 0
  5369  0015A4  AE40               	btfss	___ftadd@f1+2,7,c
  5370  0015A6  D002               	goto	l2754
  5371                           
  5372                           ; BSR set to: 0
  5373  0015A8  0100               	movlb	0	; () banked
  5374  0015AA  8FD9               	bsf	___ftadd@sign& (0+255),7,b
  5375  0015AC                     l2754:
  5376                           
  5377                           ; BSR set to: 0
  5378  0015AC  AE43               	btfss	___ftadd@f2+2,7,c
  5379  0015AE  D002               	goto	l542
  5380                           
  5381                           ; BSR set to: 0
  5382  0015B0  0100               	movlb	0	; () banked
  5383  0015B2  8DD9               	bsf	___ftadd@sign& (0+255),6,b
  5384  0015B4                     l542:
  5385                           
  5386                           ; BSR set to: 0
  5387  0015B4  8E3F               	bsf	___ftadd@f1+1,7,c
  5388                           
  5389                           ; BSR set to: 0
  5390  0015B6  0EFF               	movlw	255
  5391  0015B8  163E               	andwf	___ftadd@f1,f,c
  5392  0015BA  0EFF               	movlw	255
  5393  0015BC  163F               	andwf	___ftadd@f1+1,f,c
  5394  0015BE  0E00               	movlw	0
  5395  0015C0  1640               	andwf	___ftadd@f1+2,f,c
  5396  0015C2  8E42               	bsf	___ftadd@f2+1,7,c
  5397                           
  5398                           ; BSR set to: 0
  5399  0015C4  0EFF               	movlw	255
  5400  0015C6  1641               	andwf	___ftadd@f2,f,c
  5401  0015C8  0EFF               	movlw	255
  5402  0015CA  1642               	andwf	___ftadd@f2+1,f,c
  5403  0015CC  0E00               	movlw	0
  5404  0015CE  1643               	andwf	___ftadd@f2+2,f,c
  5405                           
  5406                           ; BSR set to: 0
  5407  0015D0  0100               	movlb	0	; () banked
  5408  0015D2  51DA               	movf	___ftadd@exp2& (0+255),w,b
  5409  0015D4  0100               	movlb	0	; () banked
  5410  0015D6  5DDB               	subwf	___ftadd@exp1& (0+255),w,b
  5411  0015D8  B0D8               	btfsc	status,0,c
  5412  0015DA  D022               	goto	l2774
  5413  0015DC                     l2764:
  5414                           
  5415                           ; BSR set to: 0
  5416  0015DC  90D8               	bcf	status,0,c
  5417  0015DE  3641               	rlcf	___ftadd@f2,f,c
  5418  0015E0  3642               	rlcf	___ftadd@f2+1,f,c
  5419  0015E2  3643               	rlcf	___ftadd@f2+2,f,c
  5420  0015E4  0100               	movlb	0	; () banked
  5421  0015E6  07DA               	decf	___ftadd@exp2& (0+255),f,b
  5422                           
  5423                           ; BSR set to: 0
  5424  0015E8  0100               	movlb	0	; () banked
  5425  0015EA  51DB               	movf	___ftadd@exp1& (0+255),w,b
  5426  0015EC  0100               	movlb	0	; () banked
  5427  0015EE  19DA               	xorwf	___ftadd@exp2& (0+255),w,b
  5428  0015F0  B4D8               	btfsc	status,2,c
  5429  0015F2  D00F               	goto	l2772
  5430                           
  5431                           ; BSR set to: 0
  5432  0015F4  0100               	movlb	0	; () banked
  5433  0015F6  07D9               	decf	___ftadd@sign& (0+255),f,b
  5434  0015F8  C0D9  F044         	movff	___ftadd@sign,??___ftadd
  5435  0015FC  0E07               	movlw	7
  5436  0015FE  1644               	andwf	??___ftadd,f,c
  5437  001600  B4D8               	btfsc	status,2,c
  5438  001602  D007               	goto	l2772
  5439  001604  D7EB               	goto	l2764
  5440  001606                     l2770:
  5441                           
  5442                           ; BSR set to: 0
  5443  001606  90D8               	bcf	status,0,c
  5444  001608  3240               	rrcf	___ftadd@f1+2,f,c
  5445  00160A  323F               	rrcf	___ftadd@f1+1,f,c
  5446  00160C  323E               	rrcf	___ftadd@f1,f,c
  5447  00160E  0100               	movlb	0	; () banked
  5448  001610  2BDB               	incf	___ftadd@exp1& (0+255),f,b
  5449  001612                     l2772:
  5450                           
  5451                           ; BSR set to: 0
  5452  001612  0100               	movlb	0	; () banked
  5453  001614  51DA               	movf	___ftadd@exp2& (0+255),w,b
  5454  001616  0100               	movlb	0	; () banked
  5455  001618  19DB               	xorwf	___ftadd@exp1& (0+255),w,b
  5456  00161A  B4D8               	btfsc	status,2,c
  5457  00161C  D028               	goto	l551
  5458  00161E  D7F3               	goto	l2770
  5459  001620                     l2774:
  5460                           
  5461                           ; BSR set to: 0
  5462  001620  0100               	movlb	0	; () banked
  5463  001622  51DB               	movf	___ftadd@exp1& (0+255),w,b
  5464  001624  0100               	movlb	0	; () banked
  5465  001626  5DDA               	subwf	___ftadd@exp2& (0+255),w,b
  5466  001628  B0D8               	btfsc	status,0,c
  5467  00162A  D021               	goto	l551
  5468  00162C                     l2776:
  5469                           
  5470                           ; BSR set to: 0
  5471  00162C  90D8               	bcf	status,0,c
  5472  00162E  363E               	rlcf	___ftadd@f1,f,c
  5473  001630  363F               	rlcf	___ftadd@f1+1,f,c
  5474  001632  3640               	rlcf	___ftadd@f1+2,f,c
  5475  001634  0100               	movlb	0	; () banked
  5476  001636  07DB               	decf	___ftadd@exp1& (0+255),f,b
  5477                           
  5478                           ; BSR set to: 0
  5479  001638  0100               	movlb	0	; () banked
  5480  00163A  51DB               	movf	___ftadd@exp1& (0+255),w,b
  5481  00163C  0100               	movlb	0	; () banked
  5482  00163E  19DA               	xorwf	___ftadd@exp2& (0+255),w,b
  5483  001640  B4D8               	btfsc	status,2,c
  5484  001642  D00F               	goto	l2784
  5485                           
  5486                           ; BSR set to: 0
  5487  001644  0100               	movlb	0	; () banked
  5488  001646  07D9               	decf	___ftadd@sign& (0+255),f,b
  5489  001648  C0D9  F044         	movff	___ftadd@sign,??___ftadd
  5490  00164C  0E07               	movlw	7
  5491  00164E  1644               	andwf	??___ftadd,f,c
  5492  001650  B4D8               	btfsc	status,2,c
  5493  001652  D007               	goto	l2784
  5494  001654  D7EB               	goto	l2776
  5495  001656                     l2782:
  5496                           
  5497                           ; BSR set to: 0
  5498  001656  90D8               	bcf	status,0,c
  5499  001658  3243               	rrcf	___ftadd@f2+2,f,c
  5500  00165A  3242               	rrcf	___ftadd@f2+1,f,c
  5501  00165C  3241               	rrcf	___ftadd@f2,f,c
  5502  00165E  0100               	movlb	0	; () banked
  5503  001660  2BDA               	incf	___ftadd@exp2& (0+255),f,b
  5504  001662                     l2784:
  5505                           
  5506                           ; BSR set to: 0
  5507  001662  0100               	movlb	0	; () banked
  5508  001664  51DA               	movf	___ftadd@exp2& (0+255),w,b
  5509  001666  0100               	movlb	0	; () banked
  5510  001668  19DB               	xorwf	___ftadd@exp1& (0+255),w,b
  5511  00166A  A4D8               	btfss	status,2,c
  5512  00166C  D7F4               	goto	l2782
  5513  00166E                     l551:
  5514                           
  5515                           ; BSR set to: 0
  5516  00166E  0100               	movlb	0	; () banked
  5517  001670  AFD9               	btfss	___ftadd@sign& (0+255),7,b
  5518  001672  D00C               	goto	l560
  5519                           
  5520                           ; BSR set to: 0
  5521  001674  0EFF               	movlw	255
  5522  001676  1A3E               	xorwf	___ftadd@f1,f,c
  5523  001678  0EFF               	movlw	255
  5524  00167A  1A3F               	xorwf	___ftadd@f1+1,f,c
  5525  00167C  0EFF               	movlw	255
  5526  00167E  1A40               	xorwf	___ftadd@f1+2,f,c
  5527  001680  0E01               	movlw	1
  5528  001682  263E               	addwf	___ftadd@f1,f,c
  5529  001684  0E00               	movlw	0
  5530  001686  223F               	addwfc	___ftadd@f1+1,f,c
  5531  001688  0E00               	movlw	0
  5532  00168A  2240               	addwfc	___ftadd@f1+2,f,c
  5533  00168C                     l560:
  5534                           
  5535                           ; BSR set to: 0
  5536  00168C  0100               	movlb	0	; () banked
  5537  00168E  ADD9               	btfss	___ftadd@sign& (0+255),6,b
  5538  001690  D00C               	goto	l2790
  5539                           
  5540                           ; BSR set to: 0
  5541  001692  0EFF               	movlw	255
  5542  001694  1A41               	xorwf	___ftadd@f2,f,c
  5543  001696  0EFF               	movlw	255
  5544  001698  1A42               	xorwf	___ftadd@f2+1,f,c
  5545  00169A  0EFF               	movlw	255
  5546  00169C  1A43               	xorwf	___ftadd@f2+2,f,c
  5547  00169E  0E01               	movlw	1
  5548  0016A0  2641               	addwf	___ftadd@f2,f,c
  5549  0016A2  0E00               	movlw	0
  5550  0016A4  2242               	addwfc	___ftadd@f2+1,f,c
  5551  0016A6  0E00               	movlw	0
  5552  0016A8  2243               	addwfc	___ftadd@f2+2,f,c
  5553  0016AA                     l2790:
  5554                           
  5555                           ; BSR set to: 0
  5556  0016AA  0E00               	movlw	0
  5557  0016AC  0100               	movlb	0	; () banked
  5558  0016AE  6FD9               	movwf	___ftadd@sign& (0+255),b
  5559                           
  5560                           ; BSR set to: 0
  5561  0016B0  503E               	movf	___ftadd@f1,w,c
  5562  0016B2  2641               	addwf	___ftadd@f2,f,c
  5563  0016B4  503F               	movf	___ftadd@f1+1,w,c
  5564  0016B6  2242               	addwfc	___ftadd@f2+1,f,c
  5565  0016B8  5040               	movf	___ftadd@f1+2,w,c
  5566  0016BA  2243               	addwfc	___ftadd@f2+2,f,c
  5567                           
  5568                           ; BSR set to: 0
  5569  0016BC  AE43               	btfss	___ftadd@f2+2,7,c
  5570  0016BE  D00F               	goto	l2800
  5571                           
  5572                           ; BSR set to: 0
  5573  0016C0  0EFF               	movlw	255
  5574  0016C2  1A41               	xorwf	___ftadd@f2,f,c
  5575  0016C4  0EFF               	movlw	255
  5576  0016C6  1A42               	xorwf	___ftadd@f2+1,f,c
  5577  0016C8  0EFF               	movlw	255
  5578  0016CA  1A43               	xorwf	___ftadd@f2+2,f,c
  5579  0016CC  0E01               	movlw	1
  5580  0016CE  2641               	addwf	___ftadd@f2,f,c
  5581  0016D0  0E00               	movlw	0
  5582  0016D2  2242               	addwfc	___ftadd@f2+1,f,c
  5583  0016D4  0E00               	movlw	0
  5584  0016D6  2243               	addwfc	___ftadd@f2+2,f,c
  5585                           
  5586                           ; BSR set to: 0
  5587  0016D8  0E01               	movlw	1
  5588  0016DA  0100               	movlb	0	; () banked
  5589  0016DC  6FD9               	movwf	___ftadd@sign& (0+255),b
  5590  0016DE                     l2800:
  5591                           
  5592                           ; BSR set to: 0
  5593  0016DE  C041  F00F         	movff	___ftadd@f2,___ftpack@arg
  5594  0016E2  C042  F010         	movff	___ftadd@f2+1,___ftpack@arg+1
  5595  0016E6  C043  F011         	movff	___ftadd@f2+2,___ftpack@arg+2
  5596  0016EA  C0DB  F012         	movff	___ftadd@exp1,___ftpack@exp
  5597  0016EE  C0D9  F013         	movff	___ftadd@sign,___ftpack@sign
  5598  0016F2  ECE9  F00F         	call	___ftpack	;wreg free
  5599  0016F6  C00F  F03E         	movff	?___ftpack,?___ftadd
  5600  0016FA  C010  F03F         	movff	?___ftpack+1,?___ftadd+1
  5601  0016FE  C011  F040         	movff	?___ftpack+2,?___ftadd+2
  5602  001702  0012               	return	
  5603  001704                     __end_of___ftadd:
  5604                           	opt stack 0
  5605                           tblptru	equ	0xFF8
  5606                           tblptrh	equ	0xFF7
  5607                           tblptrl	equ	0xFF6
  5608                           tablat	equ	0xFF5
  5609                           prodh	equ	0xFF4
  5610                           prodl	equ	0xFF3
  5611                           intcon	equ	0xFF2
  5612                           postinc0	equ	0xFEE
  5613                           wreg	equ	0xFE8
  5614                           postdec1	equ	0xFE5
  5615                           fsr1l	equ	0xFE1
  5616                           indf2	equ	0xFDF
  5617                           postinc2	equ	0xFDE
  5618                           postdec2	equ	0xFDD
  5619                           fsr2h	equ	0xFDA
  5620                           fsr2l	equ	0xFD9
  5621                           status	equ	0xFD8
  5622                           
  5623 ;; *************** function ___awtoft *****************
  5624 ;; Defined at:
  5625 ;;		line 32 in file "/Applications/microchip/xc8/v1.36/sources/common/awtoft.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  c               2   42[COMRAM] int 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  sign            1   45[COMRAM] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  3   42[COMRAM] float 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5639 ;;      Params:         3       0       0       0       0       0       0       0       0
  5640 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5641 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5642 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5643 ;;Total ram usage:        4 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; Hardware stack levels required when called:    2
  5646 ;; This function calls:
  5647 ;;		___ftpack
  5648 ;; This function is called by:
  5649 ;;		_fsm
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653                           	psect	text28
  5654  002708                     __ptext28:
  5655                           	opt stack 0
  5656  002708                     ___awtoft:
  5657                           	opt stack 27
  5658                           
  5659                           ;incstack = 0
  5660  002708  0E00               	movlw	0
  5661  00270A  6E2E               	movwf	___awtoft@sign,c
  5662  00270C  AE2C               	btfss	___awtoft@c+1,7,c
  5663  00270E  D006               	goto	l2860
  5664  002710  6C2B               	negf	___awtoft@c,c
  5665  002712  1E2C               	comf	___awtoft@c+1,f,c
  5666  002714  B0D8               	btfsc	status,0,c
  5667  002716  2A2C               	incf	___awtoft@c+1,f,c
  5668  002718  0E01               	movlw	1
  5669  00271A  6E2E               	movwf	___awtoft@sign,c
  5670  00271C                     l2860:
  5671  00271C  C02B  F00F         	movff	___awtoft@c,___ftpack@arg
  5672  002720  C02C  F010         	movff	___awtoft@c+1,___ftpack@arg+1
  5673  002724  6A11               	clrf	___ftpack@arg+2,c
  5674  002726  0E8E               	movlw	142
  5675  002728  6E12               	movwf	___ftpack@exp,c
  5676  00272A  C02E  F013         	movff	___awtoft@sign,___ftpack@sign
  5677  00272E  ECE9  F00F         	call	___ftpack	;wreg free
  5678  002732  C00F  F02B         	movff	?___ftpack,?___awtoft
  5679  002736  C010  F02C         	movff	?___ftpack+1,?___awtoft+1
  5680  00273A  C011  F02D         	movff	?___ftpack+2,?___awtoft+2
  5681  00273E  0012               	return	
  5682  002740                     __end_of___awtoft:
  5683                           	opt stack 0
  5684                           tblptru	equ	0xFF8
  5685                           tblptrh	equ	0xFF7
  5686                           tblptrl	equ	0xFF6
  5687                           tablat	equ	0xFF5
  5688                           prodh	equ	0xFF4
  5689                           prodl	equ	0xFF3
  5690                           intcon	equ	0xFF2
  5691                           postinc0	equ	0xFEE
  5692                           wreg	equ	0xFE8
  5693                           postdec1	equ	0xFE5
  5694                           fsr1l	equ	0xFE1
  5695                           indf2	equ	0xFDF
  5696                           postinc2	equ	0xFDE
  5697                           postdec2	equ	0xFDD
  5698                           fsr2h	equ	0xFDA
  5699                           fsr2l	equ	0xFD9
  5700                           status	equ	0xFD8
  5701                           
  5702 ;; *************** function ___ftpack *****************
  5703 ;; Defined at:
  5704 ;;		line 62 in file "/Applications/microchip/xc8/v1.36/sources/common/float.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  arg             3   14[COMRAM] unsigned um
  5707 ;;  exp             1   17[COMRAM] unsigned char 
  5708 ;;  sign            1   18[COMRAM] unsigned char 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;		None
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  3   14[COMRAM] float 
  5713 ;; Registers used:
  5714 ;;		wreg, status,2, status,0
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5720 ;;      Params:         5       0       0       0       0       0       0       0       0
  5721 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5722 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5723 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5724 ;;Total ram usage:        8 bytes
  5725 ;; Hardware stack levels used:    1
  5726 ;; Hardware stack levels required when called:    1
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		___altoft
  5731 ;;		___awtoft
  5732 ;;		___ftadd
  5733 ;;		___ftdiv
  5734 ;;		___ftmul
  5735 ;;		___lbtoft
  5736 ;;		___lwtoft
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text29
  5741  001FD2                     __ptext29:
  5742                           	opt stack 0
  5743  001FD2                     ___ftpack:
  5744                           	opt stack 27
  5745                           
  5746                           ;incstack = 0
  5747  001FD2  5012               	movf	___ftpack@exp,w,c
  5748  001FD4  B4D8               	btfsc	status,2,c
  5749  001FD6  D005               	goto	l2598
  5750  001FD8  500F               	movf	___ftpack@arg,w,c
  5751  001FDA  1010               	iorwf	___ftpack@arg+1,w,c
  5752  001FDC  1011               	iorwf	___ftpack@arg+2,w,c
  5753  001FDE  A4D8               	btfss	status,2,c
  5754  001FE0  D00C               	goto	l2604
  5755  001FE2                     l2598:
  5756  001FE2  0E00               	movlw	0
  5757  001FE4  6E0F               	movwf	?___ftpack,c
  5758  001FE6  0E00               	movlw	0
  5759  001FE8  6E10               	movwf	?___ftpack+1,c
  5760  001FEA  0E00               	movlw	0
  5761  001FEC  6E11               	movwf	?___ftpack+2,c
  5762  001FEE  0012               	return	
  5763  001FF0                     l2602:
  5764  001FF0  2A12               	incf	___ftpack@exp,f,c
  5765  001FF2  90D8               	bcf	status,0,c
  5766  001FF4  3211               	rrcf	___ftpack@arg+2,f,c
  5767  001FF6  3210               	rrcf	___ftpack@arg+1,f,c
  5768  001FF8  320F               	rrcf	___ftpack@arg,f,c
  5769  001FFA                     l2604:
  5770  001FFA  0E00               	movlw	0
  5771  001FFC  140F               	andwf	___ftpack@arg,w,c
  5772  001FFE  6E14               	movwf	??___ftpack& (0+255),c
  5773  002000  0E00               	movlw	0
  5774  002002  1410               	andwf	___ftpack@arg+1,w,c
  5775  002004  6E15               	movwf	(??___ftpack+1)& (0+255),c
  5776  002006  0EFE               	movlw	254
  5777  002008  1411               	andwf	___ftpack@arg+2,w,c
  5778  00200A  6E16               	movwf	(??___ftpack+2)& (0+255),c
  5779  00200C  5014               	movf	??___ftpack,w,c
  5780  00200E  1015               	iorwf	??___ftpack+1,w,c
  5781  002010  1016               	iorwf	??___ftpack+2,w,c
  5782  002012  B4D8               	btfsc	status,2,c
  5783  002014  D00C               	goto	l2610
  5784  002016  D7EC               	goto	l2602
  5785  002018                     l2606:
  5786  002018  2A12               	incf	___ftpack@exp,f,c
  5787  00201A  0E01               	movlw	1
  5788  00201C  260F               	addwf	___ftpack@arg,f,c
  5789  00201E  0E00               	movlw	0
  5790  002020  2210               	addwfc	___ftpack@arg+1,f,c
  5791  002022  0E00               	movlw	0
  5792  002024  2211               	addwfc	___ftpack@arg+2,f,c
  5793  002026  90D8               	bcf	status,0,c
  5794  002028  3211               	rrcf	___ftpack@arg+2,f,c
  5795  00202A  3210               	rrcf	___ftpack@arg+1,f,c
  5796  00202C  320F               	rrcf	___ftpack@arg,f,c
  5797  00202E                     l2610:
  5798  00202E  0E00               	movlw	0
  5799  002030  140F               	andwf	___ftpack@arg,w,c
  5800  002032  6E14               	movwf	??___ftpack& (0+255),c
  5801  002034  0E00               	movlw	0
  5802  002036  1410               	andwf	___ftpack@arg+1,w,c
  5803  002038  6E15               	movwf	(??___ftpack+1)& (0+255),c
  5804  00203A  0EFF               	movlw	255
  5805  00203C  1411               	andwf	___ftpack@arg+2,w,c
  5806  00203E  6E16               	movwf	(??___ftpack+2)& (0+255),c
  5807  002040  5014               	movf	??___ftpack,w,c
  5808  002042  1015               	iorwf	??___ftpack+1,w,c
  5809  002044  1016               	iorwf	??___ftpack+2,w,c
  5810  002046  B4D8               	btfsc	status,2,c
  5811  002048  D006               	goto	l2614
  5812  00204A  D7E6               	goto	l2606
  5813  00204C                     l2612:
  5814  00204C  0612               	decf	___ftpack@exp,f,c
  5815  00204E  90D8               	bcf	status,0,c
  5816  002050  360F               	rlcf	___ftpack@arg,f,c
  5817  002052  3610               	rlcf	___ftpack@arg+1,f,c
  5818  002054  3611               	rlcf	___ftpack@arg+2,f,c
  5819  002056                     l2614:
  5820  002056  BE10               	btfsc	___ftpack@arg+1,7,c
  5821  002058  D003               	goto	l513
  5822  00205A  0E02               	movlw	2
  5823  00205C  6012               	cpfslt	___ftpack@exp,c
  5824  00205E  D7F6               	goto	l2612
  5825  002060                     l513:
  5826  002060  A012               	btfss	___ftpack@exp,0,c
  5827  002062  9E10               	bcf	___ftpack@arg+1,7,c
  5828  002064  90D8               	bcf	status,0,c
  5829  002066  3212               	rrcf	___ftpack@exp,f,c
  5830  002068  5012               	movf	___ftpack@exp,w,c
  5831  00206A  1211               	iorwf	___ftpack@arg+2,f,c
  5832  00206C  5013               	movf	___ftpack@sign,w,c
  5833  00206E  A4D8               	btfss	status,2,c
  5834  002070  8E11               	bsf	___ftpack@arg+2,7,c
  5835  002072  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  5836  002076  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  5837  00207A  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  5838  00207E  0012               	return	
  5839  002080                     __end_of___ftpack:
  5840                           	opt stack 0
  5841                           tblptru	equ	0xFF8
  5842                           tblptrh	equ	0xFF7
  5843                           tblptrl	equ	0xFF6
  5844                           tablat	equ	0xFF5
  5845                           prodh	equ	0xFF4
  5846                           prodl	equ	0xFF3
  5847                           intcon	equ	0xFF2
  5848                           postinc0	equ	0xFEE
  5849                           wreg	equ	0xFE8
  5850                           postdec1	equ	0xFE5
  5851                           fsr1l	equ	0xFE1
  5852                           indf2	equ	0xFDF
  5853                           postinc2	equ	0xFDE
  5854                           postdec2	equ	0xFDD
  5855                           fsr2h	equ	0xFDA
  5856                           fsr2l	equ	0xFD9
  5857                           status	equ	0xFD8
  5858                           
  5859 ;; *************** function ___awmod *****************
  5860 ;; Defined at:
  5861 ;;		line 8 in file "/Applications/microchip/xc8/v1.36/sources/common/awmod.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;  dividend        2   28[COMRAM] int 
  5864 ;;  divisor         2   30[COMRAM] int 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;  sign            1   33[COMRAM] unsigned char 
  5867 ;;  counter         1   32[COMRAM] unsigned char 
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  2   28[COMRAM] int 
  5870 ;; Registers used:
  5871 ;;		wreg, status,2, status,0
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5877 ;;      Params:         4       0       0       0       0       0       0       0       0
  5878 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5879 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5880 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5881 ;;Total ram usage:        6 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; Hardware stack levels required when called:    1
  5884 ;; This function calls:
  5885 ;;		Nothing
  5886 ;; This function is called by:
  5887 ;;		_fsm
  5888 ;;		_PWM_ISR
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text30
  5893  00243A                     __ptext30:
  5894                           	opt stack 0
  5895  00243A                     ___awmod:
  5896                           	opt stack 28
  5897                           
  5898                           ;incstack = 0
  5899  00243A  0E00               	movlw	0
  5900  00243C  6E22               	movwf	___awmod@sign,c
  5901  00243E  AE1E               	btfss	___awmod@dividend+1,7,c
  5902  002440  D006               	goto	l2304
  5903  002442  6C1D               	negf	___awmod@dividend,c
  5904  002444  1E1E               	comf	___awmod@dividend+1,f,c
  5905  002446  B0D8               	btfsc	status,0,c
  5906  002448  2A1E               	incf	___awmod@dividend+1,f,c
  5907  00244A  0E01               	movlw	1
  5908  00244C  6E22               	movwf	___awmod@sign,c
  5909  00244E                     l2304:
  5910  00244E  AE20               	btfss	___awmod@divisor+1,7,c
  5911  002450  D004               	goto	l2308
  5912  002452  6C1F               	negf	___awmod@divisor,c
  5913  002454  1E20               	comf	___awmod@divisor+1,f,c
  5914  002456  B0D8               	btfsc	status,0,c
  5915  002458  2A20               	incf	___awmod@divisor+1,f,c
  5916  00245A                     l2308:
  5917  00245A  501F               	movf	___awmod@divisor,w,c
  5918  00245C  1020               	iorwf	___awmod@divisor+1,w,c
  5919  00245E  B4D8               	btfsc	status,2,c
  5920  002460  D018               	goto	l2324
  5921  002462  0E01               	movlw	1
  5922  002464  6E21               	movwf	___awmod@counter,c
  5923  002466  D004               	goto	l2314
  5924  002468                     l2312:
  5925  002468  90D8               	bcf	status,0,c
  5926  00246A  361F               	rlcf	___awmod@divisor,f,c
  5927  00246C  3620               	rlcf	___awmod@divisor+1,f,c
  5928  00246E  2A21               	incf	___awmod@counter,f,c
  5929  002470                     l2314:
  5930  002470  AE20               	btfss	___awmod@divisor+1,7,c
  5931  002472  D7FA               	goto	l2312
  5932  002474                     l2316:
  5933  002474  501F               	movf	___awmod@divisor,w,c
  5934  002476  5C1D               	subwf	___awmod@dividend,w,c
  5935  002478  5020               	movf	___awmod@divisor+1,w,c
  5936  00247A  581E               	subwfb	___awmod@dividend+1,w,c
  5937  00247C  A0D8               	btfss	status,0,c
  5938  00247E  D004               	goto	l2320
  5939  002480  501F               	movf	___awmod@divisor,w,c
  5940  002482  5E1D               	subwf	___awmod@dividend,f,c
  5941  002484  5020               	movf	___awmod@divisor+1,w,c
  5942  002486  5A1E               	subwfb	___awmod@dividend+1,f,c
  5943  002488                     l2320:
  5944  002488  90D8               	bcf	status,0,c
  5945  00248A  3220               	rrcf	___awmod@divisor+1,f,c
  5946  00248C  321F               	rrcf	___awmod@divisor,f,c
  5947  00248E  2E21               	decfsz	___awmod@counter,f,c
  5948  002490  D7F1               	goto	l2316
  5949  002492                     l2324:
  5950  002492  5022               	movf	___awmod@sign,w,c
  5951  002494  B4D8               	btfsc	status,2,c
  5952  002496  D004               	goto	l2328
  5953  002498  6C1D               	negf	___awmod@dividend,c
  5954  00249A  1E1E               	comf	___awmod@dividend+1,f,c
  5955  00249C  B0D8               	btfsc	status,0,c
  5956  00249E  2A1E               	incf	___awmod@dividend+1,f,c
  5957  0024A0                     l2328:
  5958  0024A0  C01D  F01D         	movff	___awmod@dividend,?___awmod
  5959  0024A4  C01E  F01E         	movff	___awmod@dividend+1,?___awmod+1
  5960  0024A8  0012               	return	
  5961  0024AA                     __end_of___awmod:
  5962                           	opt stack 0
  5963                           tblptru	equ	0xFF8
  5964                           tblptrh	equ	0xFF7
  5965                           tblptrl	equ	0xFF6
  5966                           tablat	equ	0xFF5
  5967                           prodh	equ	0xFF4
  5968                           prodl	equ	0xFF3
  5969                           intcon	equ	0xFF2
  5970                           postinc0	equ	0xFEE
  5971                           wreg	equ	0xFE8
  5972                           postdec1	equ	0xFE5
  5973                           fsr1l	equ	0xFE1
  5974                           indf2	equ	0xFDF
  5975                           postinc2	equ	0xFDE
  5976                           postdec2	equ	0xFDD
  5977                           fsr2h	equ	0xFDA
  5978                           fsr2l	equ	0xFD9
  5979                           status	equ	0xFD8
  5980                           
  5981 ;; *************** function ___awdiv *****************
  5982 ;; Defined at:
  5983 ;;		line 8 in file "/Applications/microchip/xc8/v1.36/sources/common/awdiv.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  dividend        2   34[COMRAM] int 
  5986 ;;  divisor         2   36[COMRAM] int 
  5987 ;; Auto vars:     Size  Location     Type
  5988 ;;  quotient        2   40[COMRAM] int 
  5989 ;;  sign            1   39[COMRAM] unsigned char 
  5990 ;;  counter         1   38[COMRAM] unsigned char 
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  2   34[COMRAM] int 
  5993 ;; Registers used:
  5994 ;;		wreg, status,2, status,0
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6000 ;;      Params:         4       0       0       0       0       0       0       0       0
  6001 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6003 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6004 ;;Total ram usage:        8 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:    1
  6007 ;; This function calls:
  6008 ;;		Nothing
  6009 ;; This function is called by:
  6010 ;;		_fsm
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text31
  6015  002246                     __ptext31:
  6016                           	opt stack 0
  6017  002246                     ___awdiv:
  6018                           	opt stack 28
  6019                           
  6020                           ;incstack = 0
  6021  002246  0E00               	movlw	0
  6022  002248  6E28               	movwf	___awdiv@sign,c
  6023  00224A  AE26               	btfss	___awdiv@divisor+1,7,c
  6024  00224C  D006               	goto	l2260
  6025  00224E  6C25               	negf	___awdiv@divisor,c
  6026  002250  1E26               	comf	___awdiv@divisor+1,f,c
  6027  002252  B0D8               	btfsc	status,0,c
  6028  002254  2A26               	incf	___awdiv@divisor+1,f,c
  6029  002256  0E01               	movlw	1
  6030  002258  6E28               	movwf	___awdiv@sign,c
  6031  00225A                     l2260:
  6032  00225A  AE24               	btfss	___awdiv@dividend+1,7,c
  6033  00225C  D006               	goto	l2266
  6034  00225E  6C23               	negf	___awdiv@dividend,c
  6035  002260  1E24               	comf	___awdiv@dividend+1,f,c
  6036  002262  B0D8               	btfsc	status,0,c
  6037  002264  2A24               	incf	___awdiv@dividend+1,f,c
  6038  002266  0E01               	movlw	1
  6039  002268  1A28               	xorwf	___awdiv@sign,f,c
  6040  00226A                     l2266:
  6041  00226A  0E00               	movlw	0
  6042  00226C  6E2A               	movwf	___awdiv@quotient+1,c
  6043  00226E  0E00               	movlw	0
  6044  002270  6E29               	movwf	___awdiv@quotient,c
  6045  002272  5025               	movf	___awdiv@divisor,w,c
  6046  002274  1026               	iorwf	___awdiv@divisor+1,w,c
  6047  002276  B4D8               	btfsc	status,2,c
  6048  002278  D01C               	goto	l2288
  6049  00227A  0E01               	movlw	1
  6050  00227C  6E27               	movwf	___awdiv@counter,c
  6051  00227E  D004               	goto	l2274
  6052  002280                     l2272:
  6053  002280  90D8               	bcf	status,0,c
  6054  002282  3625               	rlcf	___awdiv@divisor,f,c
  6055  002284  3626               	rlcf	___awdiv@divisor+1,f,c
  6056  002286  2A27               	incf	___awdiv@counter,f,c
  6057  002288                     l2274:
  6058  002288  AE26               	btfss	___awdiv@divisor+1,7,c
  6059  00228A  D7FA               	goto	l2272
  6060  00228C                     l2276:
  6061  00228C  90D8               	bcf	status,0,c
  6062  00228E  3629               	rlcf	___awdiv@quotient,f,c
  6063  002290  362A               	rlcf	___awdiv@quotient+1,f,c
  6064  002292  5025               	movf	___awdiv@divisor,w,c
  6065  002294  5C23               	subwf	___awdiv@dividend,w,c
  6066  002296  5026               	movf	___awdiv@divisor+1,w,c
  6067  002298  5824               	subwfb	___awdiv@dividend+1,w,c
  6068  00229A  A0D8               	btfss	status,0,c
  6069  00229C  D005               	goto	l2284
  6070  00229E  5025               	movf	___awdiv@divisor,w,c
  6071  0022A0  5E23               	subwf	___awdiv@dividend,f,c
  6072  0022A2  5026               	movf	___awdiv@divisor+1,w,c
  6073  0022A4  5A24               	subwfb	___awdiv@dividend+1,f,c
  6074  0022A6  8029               	bsf	___awdiv@quotient,0,c
  6075  0022A8                     l2284:
  6076  0022A8  90D8               	bcf	status,0,c
  6077  0022AA  3226               	rrcf	___awdiv@divisor+1,f,c
  6078  0022AC  3225               	rrcf	___awdiv@divisor,f,c
  6079  0022AE  2E27               	decfsz	___awdiv@counter,f,c
  6080  0022B0  D7ED               	goto	l2276
  6081  0022B2                     l2288:
  6082  0022B2  5028               	movf	___awdiv@sign,w,c
  6083  0022B4  B4D8               	btfsc	status,2,c
  6084  0022B6  D004               	goto	l2292
  6085  0022B8  6C29               	negf	___awdiv@quotient,c
  6086  0022BA  1E2A               	comf	___awdiv@quotient+1,f,c
  6087  0022BC  B0D8               	btfsc	status,0,c
  6088  0022BE  2A2A               	incf	___awdiv@quotient+1,f,c
  6089  0022C0                     l2292:
  6090  0022C0  C029  F023         	movff	___awdiv@quotient,?___awdiv
  6091  0022C4  C02A  F024         	movff	___awdiv@quotient+1,?___awdiv+1
  6092  0022C8  0012               	return	
  6093  0022CA                     __end_of___awdiv:
  6094                           	opt stack 0
  6095                           tblptru	equ	0xFF8
  6096                           tblptrh	equ	0xFF7
  6097                           tblptrl	equ	0xFF6
  6098                           tablat	equ	0xFF5
  6099                           prodh	equ	0xFF4
  6100                           prodl	equ	0xFF3
  6101                           intcon	equ	0xFF2
  6102                           postinc0	equ	0xFEE
  6103                           wreg	equ	0xFE8
  6104                           postdec1	equ	0xFE5
  6105                           fsr1l	equ	0xFE1
  6106                           indf2	equ	0xFDF
  6107                           postinc2	equ	0xFDE
  6108                           postdec2	equ	0xFDD
  6109                           fsr2h	equ	0xFDA
  6110                           fsr2l	equ	0xFD9
  6111                           status	equ	0xFD8
  6112                           
  6113 ;; *************** function _interrupt_handler *****************
  6114 ;; Defined at:
  6115 ;;		line 76 in file "config.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;		None
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1    wreg      void 
  6122 ;; Registers used:
  6123 ;;		None
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6129 ;;      Params:         0       0       0       0       0       0       0       0       0
  6130 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6131 ;;      Temps:         14       0       0       0       0       0       0       0       0
  6132 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6133 ;;Total ram usage:       14 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; This function calls:
  6136 ;;		Nothing
  6137 ;; This function is called by:
  6138 ;;		Interrupt level 2
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           	psect	intcode
  6143  001008                     __pintcode:
  6144                           	opt stack 0
  6145  001008                     _interrupt_handler:
  6146                           	opt stack 25
  6147                           
  6148                           ;incstack = 0
  6149  001008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6150  00100A  CFFA F001          	movff	pclath,??_interrupt_handler
  6151  00100E  CFFB F002          	movff	pclatu,??_interrupt_handler+1
  6152  001012  ED55  F012         	call	int_func,f	;refresh shadow registers
  6153                           pclatu	equ	0xFFB
  6154                           pclath	equ	0xFFA
  6155                           tblptru	equ	0xFF8
  6156                           tblptrh	equ	0xFF7
  6157                           tblptrl	equ	0xFF6
  6158                           tablat	equ	0xFF5
  6159                           prodh	equ	0xFF4
  6160                           prodl	equ	0xFF3
  6161                           intcon	equ	0xFF2
  6162                           postinc0	equ	0xFEE
  6163                           wreg	equ	0xFE8
  6164                           postdec1	equ	0xFE5
  6165                           fsr1l	equ	0xFE1
  6166                           indf2	equ	0xFDF
  6167                           postinc2	equ	0xFDE
  6168                           postdec2	equ	0xFDD
  6169                           fsr2h	equ	0xFDA
  6170                           fsr2l	equ	0xFD9
  6171                           status	equ	0xFD8
  6172                           
  6173                           	psect	intcode_body
  6174  0024AA                     __pintcode_body:
  6175                           	opt stack 25
  6176  0024AA                     int_func:
  6177                           	opt stack 25
  6178  0024AA  0006               	pop		; remove dummy address from shadow register refresh
  6179  0024AC  CFE9 F003          	movff	fsr0l,??_interrupt_handler+2
  6180  0024B0  CFEA F004          	movff	fsr0h,??_interrupt_handler+3
  6181  0024B4  CFE1 F005          	movff	fsr1l,??_interrupt_handler+4
  6182  0024B8  CFE2 F006          	movff	fsr1h,??_interrupt_handler+5
  6183  0024BC  CFD9 F007          	movff	fsr2l,??_interrupt_handler+6
  6184  0024C0  CFDA F008          	movff	fsr2h,??_interrupt_handler+7
  6185  0024C4  CFF3 F009          	movff	prodl,??_interrupt_handler+8
  6186  0024C8  CFF4 F00A          	movff	prodh,??_interrupt_handler+9
  6187  0024CC  CFF6 F00B          	movff	tblptrl,??_interrupt_handler+10
  6188  0024D0  CFF7 F00C          	movff	tblptrh,??_interrupt_handler+11
  6189  0024D4  CFF8 F00D          	movff	tblptru,??_interrupt_handler+12
  6190  0024D8  CFF5 F00E          	movff	tablat,??_interrupt_handler+13
  6191  0024DC  C00E  FFF5         	movff	??_interrupt_handler+13,tablat
  6192  0024E0  C00D  FFF8         	movff	??_interrupt_handler+12,tblptru
  6193  0024E4  C00C  FFF7         	movff	??_interrupt_handler+11,tblptrh
  6194  0024E8  C00B  FFF6         	movff	??_interrupt_handler+10,tblptrl
  6195  0024EC  C00A  FFF4         	movff	??_interrupt_handler+9,prodh
  6196  0024F0  C009  FFF3         	movff	??_interrupt_handler+8,prodl
  6197  0024F4  C008  FFDA         	movff	??_interrupt_handler+7,fsr2h
  6198  0024F8  C007  FFD9         	movff	??_interrupt_handler+6,fsr2l
  6199  0024FC  C006  FFE2         	movff	??_interrupt_handler+5,fsr1h
  6200  002500  C005  FFE1         	movff	??_interrupt_handler+4,fsr1l
  6201  002504  C004  FFEA         	movff	??_interrupt_handler+3,fsr0h
  6202  002508  C003  FFE9         	movff	??_interrupt_handler+2,fsr0l
  6203  00250C  C002  FFFB         	movff	??_interrupt_handler+1,pclatu
  6204  002510  C001  FFFA         	movff	??_interrupt_handler,pclath
  6205  002514  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6206  002516  0011               	retfie		f
  6207  002518                     __end_of_interrupt_handler:
  6208                           	opt stack 0
  6209                           pclatu	equ	0xFFB
  6210                           pclath	equ	0xFFA
  6211                           tblptru	equ	0xFF8
  6212                           tblptrh	equ	0xFF7
  6213                           tblptrl	equ	0xFF6
  6214                           tablat	equ	0xFF5
  6215                           prodh	equ	0xFF4
  6216                           prodl	equ	0xFF3
  6217                           intcon	equ	0xFF2
  6218                           postinc0	equ	0xFEE
  6219                           fsr0h	equ	0xFEA
  6220                           fsr0l	equ	0xFE9
  6221                           wreg	equ	0xFE8
  6222                           postdec1	equ	0xFE5
  6223                           fsr1h	equ	0xFE2
  6224                           fsr1l	equ	0xFE1
  6225                           indf2	equ	0xFDF
  6226                           postinc2	equ	0xFDE
  6227                           postdec2	equ	0xFDD
  6228                           fsr2h	equ	0xFDA
  6229                           fsr2l	equ	0xFD9
  6230                           status	equ	0xFD8
  6231                           pclatu	equ	0xFFB
  6232                           pclath	equ	0xFFA
  6233                           tblptru	equ	0xFF8
  6234                           tblptrh	equ	0xFF7
  6235                           tblptrl	equ	0xFF6
  6236                           tablat	equ	0xFF5
  6237                           prodh	equ	0xFF4
  6238                           prodl	equ	0xFF3
  6239                           intcon	equ	0xFF2
  6240                           postinc0	equ	0xFEE
  6241                           fsr0h	equ	0xFEA
  6242                           fsr0l	equ	0xFE9
  6243                           wreg	equ	0xFE8
  6244                           postdec1	equ	0xFE5
  6245                           fsr1h	equ	0xFE2
  6246                           fsr1l	equ	0xFE1
  6247                           indf2	equ	0xFDF
  6248                           postinc2	equ	0xFDE
  6249                           postdec2	equ	0xFDD
  6250                           fsr2h	equ	0xFDA
  6251                           fsr2l	equ	0xFD9
  6252                           status	equ	0xFD8
  6253                           
  6254                           	psect	rparam
  6255  0000                     pclatu	equ	0xFFB
  6256                           pclath	equ	0xFFA
  6257                           tblptru	equ	0xFF8
  6258                           tblptrh	equ	0xFF7
  6259                           tblptrl	equ	0xFF6
  6260                           tablat	equ	0xFF5
  6261                           prodh	equ	0xFF4
  6262                           prodl	equ	0xFF3
  6263                           intcon	equ	0xFF2
  6264                           postinc0	equ	0xFEE
  6265                           fsr0h	equ	0xFEA
  6266                           fsr0l	equ	0xFE9
  6267                           wreg	equ	0xFE8
  6268                           postdec1	equ	0xFE5
  6269                           fsr1h	equ	0xFE2
  6270                           fsr1l	equ	0xFE1
  6271                           indf2	equ	0xFDF
  6272                           postinc2	equ	0xFDE
  6273                           postdec2	equ	0xFDD
  6274                           fsr2h	equ	0xFDA
  6275                           fsr2l	equ	0xFD9
  6276                           status	equ	0xFD8
  6277                           
  6278                           	psect	temp
  6279  000051                     btemp:
  6280                           	opt stack 0
  6281  000051                     	ds	1
  6282  0000                     int$flags	set	btemp
  6283                           pclatu	equ	0xFFB
  6284                           pclath	equ	0xFFA
  6285                           tblptru	equ	0xFF8
  6286                           tblptrh	equ	0xFF7
  6287                           tblptrl	equ	0xFF6
  6288                           tablat	equ	0xFF5
  6289                           prodh	equ	0xFF4
  6290                           prodl	equ	0xFF3
  6291                           intcon	equ	0xFF2
  6292                           postinc0	equ	0xFEE
  6293                           fsr0h	equ	0xFEA
  6294                           fsr0l	equ	0xFE9
  6295                           wreg	equ	0xFE8
  6296                           postdec1	equ	0xFE5
  6297                           fsr1h	equ	0xFE2
  6298                           fsr1l	equ	0xFE1
  6299                           indf2	equ	0xFDF
  6300                           postinc2	equ	0xFDE
  6301                           postdec2	equ	0xFDD
  6302                           fsr2h	equ	0xFDA
  6303                           fsr2l	equ	0xFD9
  6304                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    6
    Data        624
    BSS         28
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     71      80
    BANK0           160     23     153
    BANK1           256      0     212
    BANK2           256      0     156
    BANK3           256      0     156
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _multiplex->_go_through_cols
    _go_through_cols->_myDelay_us
    _init->___lwtoft
    _hardware_init->_OpenTimer0
    ___lwtoft->___ftpack
    _fsm->_stepper_pulse
    _superMario->_buzz
    _stepper_pulse->_myDelay_us
    _rand->___lmul
    _nothingElseMatters->_buzz
    _buzz->_myDelay_us
    _myDelay_us->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___altoft
    ___altoft->___ftpack
    ___aldiv->___lmul
    ___lbtoft->___ftpack
    ___ftmul->___awtoft
    ___ftge->___ftadd
    ___ftadd->___ftmul
    ___awtoft->___awdiv
    ___awmod->_rand
    ___awdiv->___awmod

Critical Paths under _interrupt_handler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_fsm
    _fsm->_nothingElseMatters
    _fsm->_superMario
    _superMario->_buzz
    _nothingElseMatters->_buzz
    ___ftge->___ftadd

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_handler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_handler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_handler in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   60409
                                _fsm
                               _init
                          _multiplex
 ---------------------------------------------------------------------------------
 (1) _multiplex                                            0     0      0     454
                    _go_through_cols
 ---------------------------------------------------------------------------------
 (2) _go_through_cols                                      4     4      0     454
                                             66 COMRAM     4     4      0
                         _myDelay_us
 ---------------------------------------------------------------------------------
 (1) _init                                                 3     3      0    2796
                                             25 COMRAM     3     3      0
                           ___lwtoft
                      _hardware_init
 ---------------------------------------------------------------------------------
 (2) _hardware_init                                        0     0      0      44
                         _OpenTimer0
 ---------------------------------------------------------------------------------
 (3) _OpenTimer0                                           3     3      0      44
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2752
                                             22 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _fsm                                                  5     5      0   57159
                                             18 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                           ___lbtoft
                            ___lwmod
                               _buzz
                 _nothingElseMatters
                               _rand
                         _setAllLeds
                      _stepper_pulse
                         _superMario
 ---------------------------------------------------------------------------------
 (2) _superMario                                           4     2      2   10469
                                             68 COMRAM     2     0      2
                                             16 BANK0      2     2      0
                            ___lwdiv
                               _buzz
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _stepper_pulse                                        5     2      3    5466
                                             66 COMRAM     5     2      3
                            ___ftdiv
                            ___fttol
                            ___lwmod
                         _myDelay_us
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     415
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _setAllLeds                                           2     2      0      90
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     450
                                             26 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _nothingElseMatters                                   4     2      2   10466
                                             68 COMRAM     2     0      2
                                             16 BANK0      2     2      0
                             ___wmul
                               _buzz
 ---------------------------------------------------------------------------------
 (3) _buzz                                                18    12      6   10040
                                             66 COMRAM     2     2      0
                                              0 BANK0     16    10      6
                            ___aldiv
                           ___altoft
                            ___ftdiv
                            ___fttol
                             ___lmul
                            ___lwdiv (ARG)
                             ___wmul (ARG)
                         _myDelay_ms
                         _myDelay_us
 ---------------------------------------------------------------------------------
 (3) _myDelay_us                                           4     2      2     366
                                             62 COMRAM     4     2      2
                            ___ftdiv (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _myDelay_ms                                           5     3      2     110
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     450
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     444
                                             47 COMRAM    15    11      4
                           ___altoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    3948
                                             32 COMRAM    15     9      6
                           ___altoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    2925
                                             22 COMRAM    10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     428
                                             26 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2675
                                             22 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3554
                                             46 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     506
                                              3 BANK0      9     3      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4559
                                             61 COMRAM     9     3      6
                                              0 BANK0      3     3      0
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3085
                                             42 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2644
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     680
                                             28 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     428
                                             34 COMRAM     8     4      4
                            ___awmod (ARG)
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupt_handler                                   14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fsm
     ___awdiv
       ___awmod (ARG)
         _rand (ARG)
           ___lmul
       _rand (ARG)
         ___lmul
     ___awmod
       _rand (ARG)
         ___lmul
     ___awtoft
       ___awdiv (ARG)
         ___awmod (ARG)
           _rand (ARG)
             ___lmul
         _rand (ARG)
           ___lmul
       ___awmod (ARG)
         _rand (ARG)
           ___lmul
       ___ftpack (ARG)
       _rand (ARG)
         ___lmul
     ___ftadd
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             _rand (ARG)
               ___lmul
           _rand (ARG)
             ___lmul
         ___awmod (ARG)
           _rand (ARG)
             ___lmul
         ___ftpack (ARG)
         _rand (ARG)
           ___lmul
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
               _rand (ARG)
                 ___lmul
             _rand (ARG)
               ___lmul
           ___awmod (ARG)
             _rand (ARG)
               ___lmul
           ___ftpack (ARG)
           _rand (ARG)
             ___lmul
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftge
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             _rand (ARG)
               ___lmul
           _rand (ARG)
             ___lmul
         ___awmod (ARG)
           _rand (ARG)
             ___lmul
         ___ftpack (ARG)
         _rand (ARG)
           ___lmul
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
               _rand (ARG)
                 ___lmul
             _rand (ARG)
               ___lmul
           ___awmod (ARG)
             _rand (ARG)
               ___lmul
           ___ftpack (ARG)
           _rand (ARG)
             ___lmul
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
                 _rand (ARG)
                   ___lmul
               _rand (ARG)
                 ___lmul
             ___awmod (ARG)
               _rand (ARG)
                 ___lmul
             ___ftpack (ARG)
             _rand (ARG)
               ___lmul
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
               _rand (ARG)
                 ___lmul
             _rand (ARG)
               ___lmul
           ___awmod (ARG)
             _rand (ARG)
               ___lmul
           ___ftpack (ARG)
           _rand (ARG)
             ___lmul
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             _rand (ARG)
               ___lmul
           _rand (ARG)
             ___lmul
         ___awmod (ARG)
           _rand (ARG)
             ___lmul
         ___ftpack (ARG)
         _rand (ARG)
           ___lmul
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
     ___lwmod
     _buzz
       ___aldiv
         ___lmul (ARG)
       ___altoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___lmul
       ___lwdiv (ARG)
       ___wmul (ARG)
       _myDelay_ms (ARG)
       _myDelay_us (ARG)
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
     _nothingElseMatters
       ___wmul
       _buzz
         ___aldiv
           ___lmul (ARG)
         ___altoft
           ___ftpack
         ___ftdiv
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___lmul
         ___lwdiv (ARG)
         ___wmul (ARG)
         _myDelay_ms (ARG)
         _myDelay_us (ARG)
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _rand
       ___lmul
     _setAllLeds
     _stepper_pulse
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___lwmod
       _myDelay_us
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
     _superMario
       ___lwdiv
       _buzz
         ___aldiv
           ___lmul (ARG)
         ___altoft
           ___ftpack
         ___ftdiv
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___lmul
         ___lwdiv (ARG)
         ___wmul (ARG)
         _myDelay_ms (ARG)
         _myDelay_us (ARG)
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
   _init
     ___lwtoft
       ___ftpack
     _hardware_init
       _OpenTimer0
   _multiplex
     _go_through_cols
       _myDelay_us
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      9C      11       60.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      9C       9       60.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D4       7       82.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     17      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     47      50       1       85.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2F5      20        0.0%
DATA                 0      0     2F5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Apr 21 12:55:52 2016

                   ___altoft@exp 001F                    ___altoft@sign 0020  
       __size_of_go_through_cols 008E                     ___awdiv@sign 0028  
            ___wmul@multiplicand 0011                     ___ftadd@exp1 00DB  
                   ___ftadd@exp2 00DA                     ___ftadd@sign 00D9  
                            l210 1504                              l213 1B18  
                            l214 1B1A                              l260 281C  
                            l168 10BE                              l513 2060  
                            l266 275E                              l178 114C  
                            l275 17E0                              l540 1590  
                            l701 26FE                              l542 15B4  
                            l198 120C                              l551 166E  
                            l560 168C                              l536 155A  
                            l571 1AD4                              l691 266A  
                            _fsm 1022                     ___awmod@sign 0022  
                            prod 000FF3                              wreg 000FE8  
                    _total_steps 101F                     ___ftdiv@cntr 002A  
                   ___ftdiv@sign 002F                             l2030 2640  
                           l2040 2660                             l2032 2644  
                           l3000 11C8                             l2050 26DC  
                           l3010 11E8                             l3002 11D0  
                           l2052 26E0                             l2028 2638  
                           l3014 1210                             l3006 11D6  
                           l2320 2488                             l2312 2468  
                           l2304 244E                             l2056 26F4  
                           l2048 26D4                             l3024 12B4  
                           l2314 2470                             l2082 279C  
                           l3042 1436                             l3034 1410  
                           l3018 1288                             l2260 225A  
                           l2316 2474                             l2324 2492  
                           l2308 245A                             l3052 1476  
                           l3044 143E                             l3028 12BE  
                           l2086 27A4                             l3038 1416  
                           l2272 2280                             l2328 24A0  
                           l3064 14BA                             l3072 2852  
                           l2274 2288                             l2266 226A  
                           l2610 202E                             l2602 1FF0  
                           l2292 22C0                             l2284 22A8  
                           l2276 228C                             l2612 204C  
                           l2604 1FFA                             l3068 14C2  
                           l2614 2056                             l2606 2018  
                           l1822 274A                             l2288 22B2  
                           l2800 16DE                             l2640 23F0  
                           l1832 259C                             l1816 2810  
                           l2720 1B98                             l2810 1954  
                           l1850 1CF0                             l1860 1D22  
                           l1844 1CD8                             l2652 1A48  
                           l1828 2588                             l2708 180A  
                           l2742 1568                             l2830 19AE  
                           l2638 23E4                             l2902 1024  
                           l2840 19D6                             l2816 197C  
                           l1856 1D12                             l1872 1D60  
                           l2770 1606                             l2754 15AC  
                           l2834 19BE                             l1858 1D1E  
                           l2658 1A70                             l1970 18DA  
                           l2860 271C                             l2772 1612  
                           l2764 15DC                             l2748 159E  
                           l2844 19E6                             l1876 1D76  
                           l1868 1D52                             l1980 1904  
                           l1948 1864                             l2908 1058  
                           l2598 1FE2                             l2790 16AA  
                           l2782 1656                             l2774 1620  
                           l2678 1AAE                             l1966 18CA  
                           l2784 1662                             l2776 162C  
                           l2872 1E08                             l1984 191A  
                           l1976 18F2                             l2952 1110  
                           l2944 10F4                             l2936 10D4  
                           l1978 18FE                             l2698 1726  
                           l2962 1138                             ?_fsm 0001  
                           l2868 1DC8                             l2972 1156  
                           l2948 1104                             l2878 1E4C  
                           l2990 119E                             l2982 1174  
                           l2984 117C                             l2976 1162  
                           l2994 11A8                             u3001 1964  
                           u3310 1202                             u3090 103C  
                           u1650 2606                             u1571 1848  
                           u2701 1A58                             u3085 1EE0  
                           u1590 1882                             u3096 103E  
                           u1658 2608                             u1595 187A  
                           u2750 1B14                             u2681 1A30  
                           u2771 1516                             u3387 2812  
                           u2781 152C                             u3397 2750  
                           _LEDs 00C0                             u2981 193C  
                           _main 284E                     ___ftpack@arg 000F  
                           _init 1E50                             _buzz 1704  
                           _rand 2674                     ___ftpack@exp 0012  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             fsm@i 00EE  
                           btemp 0051           __size_of_stepper_pulse 00E2  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                             start 1016  
                   ___ftmul@cntr 003C                     ___param_bank 000010  
                   ___ftmul@sign 003D                     ___fttol@exp1 003E  
                          ??_fsm 0048                     ___fttol@lval 003A  
                __end_of___aldiv 1D88                            ?_main 0001  
                          ?_init 0001                            ?_buzz 00D9  
                          ?_rand 001B                  __end_of___awdiv 22CA  
                __end_of___ftadd 1704                  __end_of___awmod 24AA  
                __end_of___ftdiv 1B06                  __end_of___ftmul 1A20  
                ___awdiv@divisor 0025                  __end_of___fttol 192C  
                __end_of___lwdiv 2674                  __end_of___lwmod 2708  
                ___awdiv@counter 0027                  ??_hardware_init 0012  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
            ___lmul@multiplicand 0013                    ___awtoft@sign 002E  
                          _randx 0048                    ___ftpack@sign 0013  
     __end_of_nothingElseMatters 23C2                            buzz@i 00E3  
                          tablat 000FF5                            status 000FD8  
                __initialization 1F12                     __end_of_main 285C  
                   __end_of_init 1F12                     __end_of_buzz 1838  
                   __end_of_rand 26C6                    _steps_per_led 00F3  
                         ??_main 0048                    ___fttol@sign1 0039  
                         ??_init 001A                           ??_buzz 0043  
                         ??_rand 001D                    _stepper_pulse 1B06  
                  __activetblptr 000002                ??_go_through_cols 0043  
                         _ADCON1 000FC1                 __end_of___altoft 243A  
               ___awdiv@dividend 0023                 __end_of___awtoft 2740  
               __end_of___ftpack 2080                 __end_of___lbtoft 284E  
                     _OpenTimer0 25CE                 __end_of___lwtoft 2806  
                    myDelay_ms@i 0012                      myDelay_us@i 0041  
                         ___ftge 1D88                           ___lmul 2578  
                      ??___aldiv 0023                           ___wmul 27BC  
                      ??___awdiv 0027                        ??___ftadd 0044  
                      ??___awmod 0021                        ??___ftdiv 0027  
                      ??___ftmul 0035                        ??___fttol 0034  
                      ??___lwdiv 0013                        ??___lwmod 0013  
                    buzz@repeats 00DF                           clear_0 1F18  
               ___awdiv@quotient 0029                  ___awmod@divisor 001F  
                         _target 00D7                   ?_stepper_pulse 0043  
                ___awmod@counter 0021            ___ftmul@f3_as_product 0039  
                   __pdataCOMRAM 0048            go_through_cols@offset 0046  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                  _last_new_note 101B                       __accesstop 0060  
        __end_of__initialization 1FC4                       ___altoft@c 0017  
                     ___ftadd@f1 003E                       ___ftadd@f2 0041  
                     ___ftge@ff1 00DC                       ___ftge@ff2 00DF  
                  ___rparam_used 000001                       ___ftdiv@f1 0021  
                     ___ftdiv@f2 0024                       ___ftdiv@f3 002B  
                     ___awtoft@c 002B                       ___lbtoft@c 001A  
                     ___ftmul@f1 002F                       ___ftmul@f2 0032  
                  _last_win_note 101D                       ___fttol@f1 0030  
                 __pcstackCOMRAM 0001                     __pidataBANK0 2518  
                   __pidataBANK1 1BE8                     __pidataBANK2 2080  
                   __pidataBANK3 211C                       ___lwtoft@c 0017  
                    setAllLeds@i 0010                       __pbssBANK0 00C0  
                    ?_OpenTimer0 0001                    _current_state 00D6  
_nothingElseMattersFullDurations 0148                       __pnvCOMRAM 004F  
                        ?___ftge 00DC                          ?___lmul 000F  
                        ?___wmul 000F                  ??_stepper_pulse 0046  
                      ?___altoft 0017                   ___lmul@product 0017  
                      ?___awtoft 002B                        ?___ftpack 000F  
                      ?___lbtoft 0017                       _hard_speed 00F0  
                      ?___lwtoft 0017               __size_of_multiplex 002A  
                   myDelay_ms@ms 000F                     myDelay_us@us 003F  
              _stepper_direction 004F                          __Hparam 0000  
                        __Lparam 0000               _nothingElseMatters 2346  
                        ___aldiv 1CBC                       _myDelay_ms 2740  
                     _myDelay_us 2806                  __size_of___ftge 00C8  
                        ___awdiv 2246                  __size_of___lmul 0056  
                        ___ftadd 1506                  _go_through_cols 21B8  
                        ___awmod 243A                          ___ftdiv 1A20  
                __size_of___wmul 0026                          ___ftmul 192C  
                        ___fttol 1838                          ___lwdiv 2622  
                        ___lwmod 26C6                     __psmallconst 101A  
                     ??___altoft 001B                          __pcinit 1F12  
                     ??___awtoft 002E                       ??___ftpack 0014  
                     ??___lbtoft 001A                     buzz@duration 00DD  
                        __ramtop 0800              __size_of_OpenTimer0 0054  
                        __ptext0 284E                          __ptext1 276C  
                        __ptext2 21B8                          __ptext3 1E50  
                        __ptext4 285C                          __ptext5 25CE  
                        __ptext6 27E2                          __ptext7 1022  
                        __ptext8 22CA                          __ptext9 2622  
            ?_nothingElseMatters 0045                       ??___lwtoft 001A  
                      _T0CONbits 000FD5                        _T1CONbits 000FCD  
                        _counter 004D                     __size_of_fsm 04E4  
               ___awmod@dividend 001D                 ___aldiv@dividend 001B  
          __end_of_hardware_init 2868                       _setAllLeds 2796  
                 __pintcode_body 24AA             end_of_initialization 1FC4  
                  __Lmediumconst 0000             ??_nothingElseMatters 00E9  
                        int_func 24AA          nothingElseMatters@index 0045  
         _imperialMarchDurations 0100                __end_of_multiplex 2796  
             _imperialMarchNotes 0060                 ___aldiv@quotient 0025  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
            _superMarioDurations 0300                        _PORTAbits 000F80  
                      _PORTBbits 000F81                        _TRISAbits 000F92  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
             stepper_pulse@speed 0043                      ___ftdiv@exp 002E  
        __end_of_go_through_cols 2246                       _superMario 22CA  
               _state_to_recover 004E                      ___ftmul@exp 0038  
                    ?_myDelay_ms 000F                      ?_myDelay_us 003F  
                 __end_of___ftge 1E50                   __end_of___lmul 25CE  
                 __end_of___wmul 27E2                    __pidataCOMRAM 2868  
            start_initialization 1F12                      ?_setAllLeds 0001  
                    __end_of_fsm 1506                     ??_OpenTimer0 000F  
                 buzz@halfPeriod 00E7                         ??___ftge 00E2  
                       ??___lmul 0017                         ??___wmul 0013  
                    __pdataBANK0 0060                      __pdataBANK1 0100  
                    __pdataBANK2 0200                      __pdataBANK3 0300  
             __end_of_OpenTimer0 2622                __size_of___altoft 0078  
              __size_of___awtoft 0038                __size_of___ftpack 00AE  
              __size_of___lbtoft 0024                      __pbssCOMRAM 004C  
              __size_of___lwtoft 0024                    __pcstackBANK0 00D9  
            __size_of_myDelay_ms 002C              __size_of_myDelay_us 0024  
                      __pnvBANK0 00F0                 ?_go_through_cols 0001  
                    ?_superMario 0045                 ___lwdiv@dividend 000F  
            __size_of_setAllLeds 0026                        __pintcode 1008  
                       ?___aldiv 001B                         ?___awdiv 0023  
                       ?___ftadd 003E                         ?___awmod 001D  
                       ?___ftdiv 0021                         ?___ftmul 002F  
                       ?___fttol 0030                         ?___lwdiv 000F  
                       ?___lwmod 000F            __end_of_stepper_pulse 1BE8  
            OpenTimer0@intEnable 0011                _interrupt_handler 1008  
                    __smallconst 101A               ?_interrupt_handler 0001  
               _hard_speed_timer 00F6                 ___lwdiv@quotient 0013  
            ??_interrupt_handler 0001                  ___aldiv@divisor 001F  
                ___aldiv@counter 0023                   ___wmul@product 0013  
                       _LATAbits 000F89                         _LATBbits 000F8A  
                       _LATCbits 000F8B                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                         _PIR1bits 000F9E  
    _nothingElseMattersFullNotes 018E                  setAllLeds@value 000F  
    _nothingElseMattersDurations 00A8                        _prev_hall 00F8  
                      _multiplex 276C        __end_of_interrupt_handler 2518  
              ___wmul@multiplier 000F                         _PWM_duty 004C  
            __size_of_superMario 007C                ___lmul@multiplier 000F  
                      copy_data0 1F38                        copy_data1 1F58  
                      copy_data2 1F78                        copy_data3 1F98  
                      copy_data4 1FB8            __end_of_last_new_note 101D  
    __size_of_nothingElseMatters 007C                         __Hrparam 0000  
          __end_of_last_win_note 101F                         __Lrparam 0000  
                   ??_myDelay_ms 0011           __size_of_hardware_init 000C  
                   ??_myDelay_us 0041                 __size_of___aldiv 00CC  
               __size_of___awdiv 0084                       ?_multiplex 0001  
               __size_of___ftadd 01FE                 __size_of___awmod 0070  
               __size_of___ftdiv 00E6                         ___altoft 23C2  
               __size_of___ftmul 00F4                 __size_of___fttol 00F4  
               __size_of___lwdiv 0052                 __size_of___lwmod 0042  
                       ___awtoft 2708                         ___ftpack 1FD2  
                       ___lbtoft 282A                         _fsm$1627 00EB  
                       ___lwtoft 27E2                     ??_setAllLeds 000F  
                ___lwdiv@divisor 0011                  ___lwdiv@counter 0015  
                       __ptext10 1B06                         __ptext11 26C6  
                       __ptext20 1A20                         __ptext12 2796  
                       __ptext21 23C2                         __ptext13 2674  
                       __ptext30 243A                         __ptext22 1CBC  
                       __ptext14 2346                         __ptext31 2246  
                       __ptext23 27BC                         __ptext15 1704  
                       __ptext24 282A                         __ptext16 2806  
                       __ptext25 192C                         __ptext17 2740  
                       __ptext26 1D88                         __ptext18 2578  
                       __ptext27 1506                         __ptext19 1838  
                       __ptext28 2708                         __ptext29 1FD2  
             __end_of_myDelay_ms 276C               __end_of_myDelay_us 282A  
                  __size_of_main 000E                    __size_of_init 00C2  
                  __size_of_buzz 0134                    __size_of_rand 0052  
                       _note_new 00D0                         _note_win 00D2  
                       fsm@i_972 00EF                         int$flags 0051  
             __end_of_setAllLeds 27BC                         _position 00D4  
     __size_of_interrupt_handler 1510                  superMario@index 0045  
                     _INTCONbits 000FF2                         buzz@freq 00D9  
                  _hardware_init 285C                  _superMarioNotes 0200  
                       intlevel2 0000                 ___lwmod@dividend 000F  
            __end_of_total_steps 1021                     ??_superMario 00E9  
                   _was_released 00D8                      ??_multiplex 0047  
        _nothingElseMattersNotes 00B4                  ___lwmod@divisor 0011  
                ___lwmod@counter 0013                     ___aldiv@sign 0024  
                 ?_hardware_init 0001               __end_of_superMario 2346  
